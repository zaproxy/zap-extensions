<project name="ZAP-Extensions" default="build-all" basedir=".">
	<description>Build ZAP extensions</description>

	<property name="src" location="../src" />
	<property name="src.version" value="1.7" />
	<property name="test.src" location="../test" />
	<property name="test.lib" location="../testlib" />
	<property name="test.results.dir" value="results" />
	<property name="build" location="build" />
	<property name="build.lib.dir" location="lib" />
	<property name="temp" location="temp" />
	<property name="dist" location="zap-exts" />
	<property name="dist.lib.dir" location="../lib" />
	<property name="status" value="release" />
	<property name="versions.file" location="${dist}/ZapVersions-${status}.xml" />
	<property name="wiki.dir" location="../../zap-extensions-wiki" />
	<property name="wiki.zapcorehelp.dir" location="../../zap-core-help-wiki" />
	<!-- This assumes you also have the zaproxy project -->
	<property name="zap.plugin.dir" location="../../zaproxy/src/plugin" />
	<!-- This assumes you also have the zaproxy_2.4 project (used for the weekly release -->
	<property name="zap-2.4.plugin.dir" location="../../zaproxy_2.4/src/plugin" />
	<property name="zap.download.url" value="https://github.com/zaproxy/zap-extensions/releases/download/2.4" />

	<path id="build.classpath">
		   <fileset dir="${build.lib.dir}" includes="*.jar"/>
	</path>

	<!-- Ant task to generate the wiki -->
	<taskdef classpathref="build.classpath" resource="wikitasks.properties" />

	<!-- Ant task to generate JavaHelp search indexes -->
	<taskdef classpathref="build.classpath" resource="javahelptasks.properties" />

	<!-- Ant task to append ZapAddOn.xml files to ZapVersions.xml -->
	<taskdef classpathref="build.classpath" resource="zapversionstasks.properties"/>
	
	<target name="clean">
		<delete dir="${dist}" includeEmptyDirs="true" />
		<delete dir="${build}" includeEmptyDirs="true" />
		<delete dir="${temp}" includeEmptyDirs="true" />
		<delete dir="${test.results.dir}" includeEmptyDirs="true" />
	</target>

	<target name="init">
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${dist}" />
		<mkdir dir="${build}" />
		<mkdir dir="${temp}" />
		<mkdir dir="${test.results.dir}"/>
	</target>

	<target name="compile" depends="init" description="compile the source">
		<echo message="Compiling the source..." />
		
		<!-- Compile with debug information if the property "javac.debug" is set to true -->
		<local name="debug" />
		<condition property="debug" value="true" else="false">
			<istrue value="${javac.debug}" />
		</condition>
		
		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build}" source="${src.version}" target="${src.version}" includeantruntime="false" debug="${debug}" encoding="UTF-8">
			<classpath>
				<fileset dir="${dist.lib.dir}">
					<include name="**/*.jar" />
					<include name="**/*.zap" />
				</fileset>
			</classpath>
		</javac>

		<echo message="Compiling tests..." />
		<javac srcdir="${test.src}" destdir="${build}" source="${src.version}" target="${src.version}" includeantruntime="false" debug="${debug}" encoding="UTF-8">
			<classpath>
				<fileset dir="${dist.lib.dir}">
					<include name="**/*.jar" />
				</fileset>
				<pathelement location="${build}"/>
				<fileset dir="${test.lib}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>

	<target name="test" depends="clean, compile">
		<junit printsummary="yes" haltonerror="true" failureproperty="TestsFailed">
			<classpath>
				<fileset dir="${dist.lib.dir}">
					<include name="*.jar" />
				</fileset>
				<fileset dir="${test.lib}">
					<include name="*.jar" />
				</fileset>
				<pathelement location="${build}"/>
			</classpath>
			<formatter type="plain"/>
			<formatter type="xml"/>
			<batchtest fork="yes" todir="${test.results.dir}">
				<fileset dir="${build}">
					<include name="**/*UnitTest.class"/>
					<exclude name="**/Abstract*Test.class"/>
				</fileset>
			</batchtest>
		</junit>
		<fail if="TestsFailed" message="Test(s) failed!" />
	</target>

	<macrodef name="generate-wiki" description="Generates the wiki of an add-on into zap-extensions wiki dir">
		<attribute name="addOn"/>
		<sequential>
			<generate-wiki-impl addon="@{addOn}" basedestdir="${wiki.dir}"
				prefixlinkimages="https://github.com/zaproxy/zap-extensions/wiki/images/" tocpadding="0" />
		</sequential>
	</macrodef>

	<macrodef name="generate-wiki-core" description="Generates the wiki of an add-on into zap-core-help wiki dir (normally for add-ons included in the main release)">
		<attribute name="addOn"/>
		<sequential>
			<generate-wiki-impl addon="@{addOn}" basedestdir="${wiki.zapcorehelp.dir}"
				prefixlinkimages="https://github.com/zaproxy/zap-core-help/wiki/images/" tocpadding="0" />
		</sequential>
	</macrodef>

	<macrodef name="generate-wiki-impl">
		<attribute name="addOn"/>
		<attribute name="baseDestDir"/>
		<attribute name="prefixLinkImages"/>
		<attribute name="tocpadding"/>
		<sequential>
			<local name="addOnCapitalised" />
			<capitalise name="addOnCapitalised" value="@{addOn}" />

			<xmlproperty file="${src}/org/zaproxy/zap/extension/@{addOn}/ZapAddOn.xml"/>
			<local name="version"/>
			<property name="version" value="${zapaddon.version}" />

			<generatewiki basesrcdir="${src}/org/zaproxy/zap/extension/@{addOn}/resources" basedestdir="@{baseDestDir}"
				helpcontentsdir="contents/" helpcontentsinclude=".*\.html"
				srcimagesdir="contents/images/" destimagesdir="images" prefixlinkimages="@{prefixLinkImages}"
				outputfilenameprefix="HelpAddons${addOnCapitalised}" includeoutputfiles="HelpAddOns${addOnCapitalised}.*\.md"
				helpfileextension=".html" wikifileextension=".md"
				srctocfile="toc.xml" srcmapfile="map.jhm"
				wikitocfilename="_SiderBar-${addOnCapitalised}" wikitocentryinitpadding="@{tocpadding}">

				<!-- Default language is at root of dest dir -->
				<helpdir src="help" dest="" />
				<!-- Do not generate for now.
				<helpdir src="help_bs_BA" dest="bs" />
				<helpdir src="help_de_DE" dest="de" />
				<helpdir src="help_el_GR" dest="el" />
				<helpdir src="help_es_ES" dest="es" />
				<helpdir src="help_fa_IR" dest="fa" />
				<helpdir src="help_fr_FR" dest="fr" />
				<helpdir src="help_it_IT" dest="it" />
				<helpdir src="help_ja_JP" dest="ja" />
				<helpdir src="help_pl_PL" dest="pl" />
				<helpdir src="help_pt_BR" dest="pt-BR" />
				<helpdir src="help_ru_RU" dest="ru" /> -->
			</generatewiki>
		</sequential>
	</macrodef>

	<macrodef name="build-addon" description="build the specified addon">
		<attribute name="name"/>
		<element name="extra-actions" implicit="true" optional="true" />
		<sequential>
			<local name="zapaddon.version" />
			<xmlproperty file="${src}/org/zaproxy/zap/extension/@{name}/ZapAddOn.xml"/>
			<local name="file" />
			<property name="file" value="@{name}-${status}-${zapaddon.version}.zap" />

			<generatejavahelpsearchindexes jhalljar="${dist.lib.dir}/jhall.jar"
				helpcontentsdirname="contents" helpsetfilename="helpset*.hs">
				<dirset dir="${src}/org/zaproxy/zap/extension/@{name}/resources/">
					<include name="help" />
					<include name="help_*_*" />
				</dirset>
			</generatejavahelpsearchindexes>

			<local name="addon.libs.zip" />
			<property name="addon.libs.zip" value="${temp}/libs-@{name}.zip" />

			<delete file="${addon.libs.zip}" failonerror="true" />
			<zip destfile="${addon.libs.zip}" whenempty="create">
				<zipgroupfileset dir="${src}/org/zaproxy/zap/extension/@{name}/lib/" includes="*.jar" erroronmissingdir="false" />
			</zip>

			<jar jarfile="${dist}/${file}" update="true" compress="true">
				<zipfileset dir="${build}" prefix="">
					<include name="org/zaproxy/zap/extension/@{name}/**"/>
				</zipfileset>
				<zipfileset dir="${src}" prefix="">
					<include name="org/zaproxy/zap/extension/@{name}/Messages*"/>
				</zipfileset>
				<zipfileset dir="${src}" prefix="">
					<include name="org/zaproxy/zap/extension/@{name}/resources/**"/>
				</zipfileset>
				<zipfileset src="${addon.libs.zip}">
					<exclude name="META-INF/*.DSA" />
					<exclude name="META-INF/*.SF" />
				</zipfileset>
				<zipfileset dir="${src}" includes="org/zaproxy/zap/extension/@{name}/ZapAddOn.xml" fullpath="ZapAddOn.xml"/>
			</jar>
			<delete file="${addon.libs.zip}" />

			<!-- Remove search indexes previously generated, no longer needed. -->
			<delete includeemptydirs="true" failonerror="false">
				<fileset dir="${src}/org/zaproxy/zap/extension/@{name}/resources/">
					<include name="help/JavaHelpSearch/**" />
					<include name="help_*_*/JavaHelpSearch/**" />
				</fileset>
			</delete>

			<!-- Include add-on files -->
			<jar jarfile="${dist}/${file}" update="true" compress="true">
				<zipfileset dir="${src}/org/zaproxy/zap/extension/@{name}/files/" prefix="" erroronmissingdir="false" />
			</jar>

			<!-- allow callers to do extra actions before generating the hash and determine the size of the file -->
			<extra-actions />

			<local name="length" />
			<length file="${dist}/${file}" property="length" />

			<local name="sha1hash" />
			<checksum file="${dist}/${file}"  algorithm="SHA-1"  property="sha1hash"/>

			<local name="hash" />
			<property name="hash"  value="SHA1:${sha1hash}"/>

			<local name="yyyymmdd" />
			<tstamp>
				<format property="yyyymmdd" pattern="yyyy-MM-dd"/>
			</tstamp>

			<appendzapaddonfile from="${src}/org/zaproxy/zap/extension/@{name}/ZapAddOn.xml" to="${versions.file}"
				addonid="@{name}" filename="${file}" status="${status}" size="${length}" hash="${hash}" date="${yyyymmdd}"
				url="${zap.download.url}/${file}" />

		</sequential>
	</macrodef>

	<macrodef name="build-help-addon" description="build the specified addon">
		<attribute name="name"/>
		<element name="extra-actions" implicit="true" optional="true" />
		<sequential>
			<local name="zapaddon.version" />
			<xmlproperty file="${src}/org/zaproxy/zap/extension/@{name}/ZapAddOn.xml" />
			<local name="file" />
			<property name="file" value="@{name}-${status}-${zapaddon.version}.zap" />

			<local name="addon.libs.zip" />
			<property name="addon.libs.zip" value="${temp}/libs-@{name}.zip" />

			<delete file="${addon.libs.zip}" failonerror="true" />
			<zip destfile="${addon.libs.zip}" whenempty="create">
				<zipgroupfileset dir="${src}/org/zaproxy/zap/extension/@{name}/lib/" includes="*.jar" />
			</zip>

			 <jar jarfile="${dist}/${file}" update="true" compress="true">
				<zipfileset src="${addon.libs.zip}" />
				<zipfileset dir="${src}" includes="org/zaproxy/zap/extension/@{name}/ZapAddOn.xml" fullpath="ZapAddOn.xml"/>
			</jar>
			<delete file="${addon.libs.zip}" />

			<!-- allow callers to do extra actions before generating the hash and determine the size of the file -->
			<extra-actions />

			<local name="length" />
			<length file="${dist}/${file}" property="length" />

			<local name="sha1hash" />
			<checksum file="${dist}/${file}"  algorithm="SHA-1" property="sha1hash"/>

			<local name="hash" />
			<property name="hash" value="SHA1:${sha1hash}"/>

			<local name="yyyymmdd" />
			<tstamp>
				<format property="yyyymmdd" pattern="yyyy-MM-dd"/>
			</tstamp>

			<appendzapaddonfile from="${src}/org/zaproxy/zap/extension/@{name}/ZapAddOn.xml" to="${versions.file}"
				addonid="@{name}" filename="${file}" status="${status}" size="${length}" hash="${hash}" date="${yyyymmdd}"
				url="${zap.download.url}/${file}" />

		</sequential>
	</macrodef>

	<target name="build-all" depends="clean,compile" description="build all of the extensions">
		<delete file="${versions.file}"/>
		
		<!-- Keep in alphabetical order ;) -->
		
		<build-addon name="ascanrules" />
		<build-addon name="coreLang" />
		<build-addon name="directorylistv1" />
		<build-addon name="directorylistv2_3" />
		<build-addon name="directorylistv2_3_lc" />
		<build-addon name="fuzzdb" />
		<build-addon name="gettingStarted" />
		<build-addon name="help" />
		<build-addon name="help_pt_BR" />
		<build-addon name="onlineMenu" />
		<build-addon name="pscanrules" />
		<build-addon name="quickstart" />
		<build-addon name="reveal" />
		<build-addon name="saverawmessage" />
		<build-addon name="selenium" />
		<build-addon name="spiderAjax" />
		<build-addon name="websocket" />

	</target>

	<macrodef name="deploy-addon" description="deploy the specified extension">
		<attribute name="name"/>
		<sequential>
			<copy todir="${zap.plugin.dir}">
				<fileset dir="${dist}">
				<include name="@{name}-*.zap"/>
				</fileset>
			</copy>
		</sequential>
	</macrodef>

	<macrodef name="build-deploy-addon" description="build and deploy the specified addon">
		<attribute name="name"/>
		<sequential>
			<antcall target="clean" />
			<antcall target="compile" />

			<build-addon name="@{name}" />
			<deploy-addon name="@{name}" />
		</sequential>
	</macrodef>

	<macrodef name="build-deploy-help-addon" description="build and deploy the specified help addon">
		<attribute name="name"/>
		<sequential>
			<antcall target="clean" />

			<build-help-addon name="@{name}" />
			<deploy-addon name="@{name}" />
		</sequential>
	</macrodef>
	
	<target name="deploy-ascanrules" description="deploy the active scan rules">
		<build-deploy-addon name="ascanrules" />
	</target>

	<target name="generate-wiki-ascanrules" description="Generates the wiki of active scan rules">
		<generate-wiki-core addon="ascanrules" />
	</target>

	<target name="deploy-coreLang" description="deploy the  add-on">
		<build-deploy-addon name="coreLang" />
	</target>

	<target name="deploy-directorylistv1" description="deploys Directory List v1.0 add-on">
		<build-deploy-addon name="directorylistv1" />
	</target>

	<target name="deploy-directorylistv2_3" description="deploys Directory List v2.3 add-on">
		<build-deploy-addon name="directorylistv2_3" />
	</target>

	<target name="deploy-directorylistv2_3_lc" description="deploys Directory List v2.3 lower case add-on">
		<build-deploy-addon name="directorylistv2_3_lc" />
	</target>

	<target name="deploy-exampleRightClickMsg" description="deploy the exampleRightClickMsg extension">
		<build-deploy-addon name="exampleRightClickMsg" />
	</target>

	<target name="deploy-exampleTopMenu" description="deploy the exampleTopMenu extension">
		<build-deploy-addon name="exampleTopMenu" />
	</target>

	<target name="deploy-gettingStarted" description="deploy the gettingStarted extension">
		<build-deploy-addon name="gettingStarted" />
	</target>

	<target name="generate-wiki-gettingStarted" description="Generates the wiki of gettingStarted">
		<generate-wiki-core addon="gettingStarted" />
	</target>
  
	<target name="deploy-help" description="deploy the help extension">
		<build-deploy-help-addon name="help" />
	</target>

	<target name="build-help-pt-BR" description="builds the help_pt_BR add-on">
		<build-help-addon name="help_pt_BR" />
	</target>

	<target name="deploy-help-pt-BR" description="deploy the help_pt_BR add-on">
		<build-deploy-help-addon name="help_pt_BR" />
	</target>

	<target name="deploy-onlineMenu" description="deploy the onlineMenu extension">
		<build-deploy-addon name="onlineMenu" />
	</target>

	<target name="generate-wiki-onlineMenu" description="Generates the wiki of onlineMenu">
		<generate-wiki-core addon="onlineMenu" />
	</target>

	<target name="deploy-pscanrules" description="deploy the passive scan rules">
		<build-deploy-addon name="pscanrules" />
	</target>

	<target name="generate-wiki-pscanrules" description="Generates the wiki of passive scan rules">
		<generate-wiki-core addon="pscanrules" />
	</target>

	<target name="deploy-quickstart" description="deploy the quick start extension">
		<build-deploy-addon name="quickstart" />
	</target>

	<target name="generate-wiki-quickstart" description="Generates the wiki of quickstart">
		<generate-wiki-core addon="quickstart" />
	</target>

	<target name="deploy-reveal" description="deploy the Reveal extension">
		<build-deploy-addon name="reveal" />
	</target>

	<target name="generate-wiki-reveal" description="Generates the wiki of reveal">
		<generate-wiki-core addon="reveal" />
	</target>
	
	<target name="deploy-saverawmessage" description="deploy the Save Raw Message extension">
		<build-deploy-addon name="saverawmessage" />
	</target>

	<target name="deploy-selenium" depends="clean, compile" description="Deploys Selenium add-on">
		<build-deploy-addon name="selenium" />
	</target>

	<target name="generate-wiki-selenium" description="Generates the wiki of selenium">
		<generate-wiki-core addon="selenium" />
	</target>

	<target name="deploy-spiderAjax" description="deploy the spiderAjax extension">
		<build-deploy-addon name="spiderAjax" />
	</target>

	<target name="generate-wiki-spiderAjax" description="Generates the wiki of spiderAjax">
		<generate-wiki-core addon="spiderAjax" />
	</target>

	<target name="deploy-websockets" description="deploy the WebSockets extension">
		<build-deploy-addon name="websocket" />
	</target>

	<target name="generate-wiki-websockets" description="Generates the wiki of WebSockets">
		<generate-wiki-core addon="websocket" />
	</target>
	
	<target name="deploy-all" depends="build-all" description="deploy all of the extensions">
		<copy todir="${zap.plugin.dir}">
			<fileset dir="${dist}">
			<include name="*.zap"/>
			</fileset>
		</copy>
	</target>

	<target name="deploy-weekly" description="deploy all of the extension to be included in a weekly release">
		<!-- Set to compile with debug information -->
		<property name="javac.debug" value="true" />
		<antcall target="build-all" />
		<copy todir="${zap.plugin.dir}">
			<fileset dir="${dist}">
				<include name="ascanrules-${status}-*.zap"/>
				<include name="coreLang-${status}-*.zap"/>
				<include name="directorylistv1-${status}-*.zap"/>
				<include name="gettingStarted-${status}-*.zap"/>
				<include name="help-${status}-*.zap"/>
				<include name="onlineMenu-${status}-*.zap"/>
				<include name="pscanrules-${status}-*.zap"/>
				<include name="quickstart-${status}-*.zap"/>
				<include name="reveal-${status}-*.zap"/>
				<include name="saverawmessage-${status}-*.zap"/>
				<include name="selenium-${status}-*.zap"/>
				<include name="spiderAjax-${status}-*.zap"/>
				<include name="websocket-${status}-*.zap"/>
			</fileset>
		</copy>
		<copy todir="${zap-2.4.plugin.dir}">
			<fileset dir="${dist}">
				<include name="ascanrules-${status}-*.zap"/>
				<include name="coreLang-${status}-*.zap"/>
				<include name="directorylistv1-${status}-*.zap"/>
				<include name="gettingStarted-${status}-*.zap"/>
				<include name="help-${status}-*.zap"/>
				<include name="onlineMenu-${status}-*.zap"/>
				<include name="pscanrules-${status}-*.zap"/>
				<include name="quickstart-${status}-*.zap"/>
				<include name="reveal-${status}-*.zap"/>
				<include name="saverawmessage-${status}-*.zap"/>
				<include name="selenium-${status}-*.zap"/>
				<include name="spiderAjax-${status}-*.zap"/>
				<include name="websocket-${status}-*.zap"/>
			</fileset>
		</copy>
	</target>


	<target name="deploy-release" description="deploy all of the extension to be included in a full release">
		<!-- Set to compile with debug information -->
		<property name="javac.debug" value="true" />
		<antcall target="build-all" />
		<copy todir="${zap.plugin.dir}">
			<fileset dir="${dist}">
				<include name="ascanrules-${status}-*.zap"/>
				<include name="coreLang-${status}-*.zap"/>
				<include name="directorylistv1-${status}-*.zap"/>
				<include name="gettingStarted-${status}-*.zap"/>
				<include name="help-${status}-*.zap"/>
				<include name="onlineMenu-${status}-*.zap"/>
				<include name="pscanrules-${status}-*.zap"/>
				<include name="quickstart-${status}-*.zap"/>
				<include name="reveal-${status}-*.zap"/>
				<include name="saverawmessage-${status}-*.zap"/>
				<include name="selenium-${status}-*.zap"/>
				<include name="spiderAjax-${status}-*.zap"/>
				<include name="websocket-${status}-*.zap"/>
			</fileset>
		</copy>
	</target>

    <target name="generate-apis" description="generates the client APIs">
        <path id="classpath">
            <pathelement location="../bin" />
            <pathelement location="./build" />
            <fileset dir="../lib" includes="**/*.jar" />
            <fileset dir="../../zaproxy/lib" includes="**/*.jar" />
        </path>
		<java classname="org.zaproxy.zap.extension.ApiGenerator" dir=".." fork="yes">
			<classpath refid="classpath" />
		</java>
    </target>

</project>
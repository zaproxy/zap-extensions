
break.api.action.addHttpBreakpoint = Adds a custom HTTP breakpoint. The string is the string to match. Location may be one of: url, request_header, request_body, response_header or response_body. Match may be: contains or regex. Inverse (match) may be true or false. Lastly, ignorecase (when matching the string) may be true or false.  
break.api.action.addHttpBreakpoint.param.ignorecase = 
break.api.action.addHttpBreakpoint.param.inverse = 
break.api.action.addHttpBreakpoint.param.location = 
break.api.action.addHttpBreakpoint.param.match = 
break.api.action.addHttpBreakpoint.param.string = 
break.api.action.break = Controls the global break functionality. The type may be one of: http-all, http-request or http-response. The state may be true (for turning break on for the specified type) or false (for turning break off). Scope is not currently used.
break.api.action.break.param.scope = 
break.api.action.break.param.state = 
break.api.action.break.param.type = 
break.api.action.continue = Submits the currently intercepted message and unsets the global request/response breakpoints
break.api.action.drop = Drops the currently intercepted message
break.api.action.removeHttpBreakpoint = Removes the specified breakpoint
break.api.action.removeHttpBreakpoint.param.ignorecase = 
break.api.action.removeHttpBreakpoint.param.inverse = 
break.api.action.removeHttpBreakpoint.param.location = 
break.api.action.removeHttpBreakpoint.param.match = 
break.api.action.removeHttpBreakpoint.param.string = 
break.api.action.setHttpMessage = Overwrites the currently intercepted message with the data provided
break.api.action.setHttpMessage.param.httpBody = 
break.api.action.setHttpMessage.param.httpHeader = 
break.api.action.step = Submits the currently intercepted message, the next request or response will automatically be intercepted
break.api.desc = 
break.api.pconn.waitForHttpBreak = Waits until an HTTP breakpoint has been hit, at which point it returns the message. Poll is the number of milliseconds ZAP will pause between checking for breakpoints being hit (default 500). If keepalive is zero or less then the response will be returned as a Server Sent Event, otherwise it is used as the frequency in seconds at which 'keepalive' events should be returned and the response is sent as a standard response.
break.api.view.httpMessage = Returns the HTTP message currently intercepted (if any)
break.api.view.isBreakAll = Returns True if ZAP will break on both requests and responses
break.api.view.isBreakRequest = Returns True if ZAP will break on requests
break.api.view.isBreakResponse = Returns True if ZAP will break on responses

brk.add.button.add = Add
brk.add.button.cancel = Cancel
brk.add.error.history = Error getting History
brk.add.popup = Break...
brk.add.title = Add Breakpoint
brk.alwaysOnTop.message = By default ZAP will remain on top of all other windows when a breakpoint is hit.\nPress 'Cancel' to disable this feature.\nThis option can changed via Tools/Breakpoints
brk.brkpoint.add.title = Add Breakpoint
brk.brkpoint.edit.title = Edit Breakpoint
brk.brkpoint.error.nostr = You must supply a string
brk.brkpoint.error.regex = Invalid regular expression
brk.brkpoint.ignorecase.label = Ignore Case:
brk.brkpoint.inverse.label = Inverse:
brk.brkpoint.location.label = Location:
brk.brkpoint.location.request_body = Request Body
brk.brkpoint.location.request_header = Request Header
brk.brkpoint.location.response_body = Response Body
brk.brkpoint.location.response_header = Response Header
brk.brkpoint.location.url = URL
brk.brkpoint.match.contains = Contains
brk.brkpoint.match.label = Match:
brk.brkpoint.match.regex = Regex
brk.brkpoint.onscope = Break if out of scope
brk.brkpoint.string.label = String: 
brk.brkpoint.warn.urlfragment = Pattern shouldn't include URL fragment (#)
brk.checkBox.fixHostHeader = Update Host Header
brk.checkBox.fixLength = Update Content Length
brk.desc = Allows you to intercept and modify requests and responses
brk.dialogue.confirmDropMessage.button.cancel.label = Cancel
brk.dialogue.confirmDropMessage.button.confirm.label = Drop
brk.dialogue.confirmDropMessage.message = Are you sure you want to drop the trapped message?
brk.dialogue.confirmDropMessage.option.dontAskAgain = Don't ask again
brk.dialogue.confirmDropMessage.title = Confirm Drop Trapped Message
brk.edit.button.save = Save
brk.edit.popup = Edit...
brk.edit.title = Edit Breakpoint
brk.name = Breakpoint Extension
brk.optionspanel.name = Breakpoints
brk.optionspanel.option.alwaysOnTop.label = ZAP always on top when breakpoint hit.
brk.optionspanel.option.breakmode.dual.label = Separate Request and Response Buttons
brk.optionspanel.option.breakmode.label = Break Buttons Mode:
brk.optionspanel.option.breakmode.simple.label = Single Combined Button
brk.optionspanel.option.confirmDropMessage.label = Confirm drop trapped message.
brk.optionspanel.option.cssAndFontsUrlRegex.label = CSS and Fonts URL Regex:
brk.optionspanel.option.inScopeOnly.label = Only break on messages in scope.
brk.optionspanel.option.javaScriptUrlRegex.label = Javascript URL Regex:
brk.optionspanel.option.multimediaUrlRegex.label = Multimedia URL Regex:
brk.optionspanel.option.notpossibletoshowtip = Cannot show these buttons when break buttons are only shown in the main toolbar.
brk.optionspanel.option.showBreakFilteringButtons.label = Show buttons to select the requests you don't want ZAP to break on.
brk.panel.mnemonic = b
brk.panel.title = Breakpoints
brk.panel.warn.datainvalid = Unable to set the data to the message.
brk.remove.popup = Remove
brk.table.header.condition = Condition
brk.table.header.enabled = Enabled
brk.table.header.type = Type
brk.toolbar.button.all.set = Set Break on All Requests and Responses
brk.toolbar.button.all.unset = Unset break on all requests and responses
brk.toolbar.button.bin = Bin Request or Response
brk.toolbar.button.brkOnlyOnScope.set = Set break only in scope
brk.toolbar.button.brkOnlyOnScope.unset = Unset break only in scope
brk.toolbar.button.brkcssfonts.set = Set can break on CSS and Fonts
brk.toolbar.button.brkcssfonts.unset = Set ignore breaks on CSS and Fonts
brk.toolbar.button.brkjavascript.set = Set can break on JavaScript
brk.toolbar.button.brkjavascript.unset = Set ignore breaks on JavaScript files
brk.toolbar.button.brkmultimedia.set = Set can break on Multimedia
brk.toolbar.button.brkmultimedia.unset = Set ignore breaks on Multimedia
brk.toolbar.button.brkpoint = Add a custom HTTP breakpoint...
brk.toolbar.button.cont = Submit and Continue to Next Breakpoint
brk.toolbar.button.request.set = Set break on all requests
brk.toolbar.button.request.unset = Unset break on all requests
brk.toolbar.button.response.set = Set break on all responses
brk.toolbar.button.response.unset = Unset break on all responses
brk.toolbar.button.step = Submit and Step to Next Request or Response

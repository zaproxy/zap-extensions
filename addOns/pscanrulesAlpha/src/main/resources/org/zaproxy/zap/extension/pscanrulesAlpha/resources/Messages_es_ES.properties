pscanalpha.desc = Reglas de exploraci\u00f3n pasivas - alpha

pscanalpha.examplefile.name=An example passive scan rule which loads data from a file.
pscanalpha.examplefile.desc=Add more information about the vulnerability here.
pscanalpha.examplefile.other=This is for information that doesnt fit in any of the other sections.
pscanalpha.examplefile.soln=A general description of how to solve the problem.
pscanalpha.examplefile.refs=https\://www.zaproxy.org/blog/2014-04-03-hacking-zap-3-passive-scan-rules/

pscanalpha.permissionspolicymissing.name=Permissions Policy Header Not Set
pscanalpha.permissionspolicymissing.desc=Permissions Policy Header is an added layer of security that helps to restrict from unauthorized access or usage of browser/client features by web resources. This policy ensures the user privacy by limiting or specifying the features of the browsers can be used by the web resources. Permissions Policy provides a set of standard HTTP headers that allow website owners to limit which features of browsers can be used by the page such as camera, microphone, location, full screen etc.
pscanalpha.permissionspolicymissing.refs=https\://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy\nhttps\://developers.google.com/web/updates/2018/06/feature-policy\nhttps\://scotthelme.co.uk/a-new-security-header-feature-policy/\nhttps\://w3c.github.io/webappsec-feature-policy/\nhttps\://www.smashingmagazine.com/2018/12/feature-policy/
pscanalpha.permissionspolicymissing.soln=Ensure that your web server, application server, load balancer, etc. is configured to set the Permissions-Policy header.

pscanalpha.permissionspolicymissing.deprecated.name=Deprecated Feature Policy Header Set
pscanalpha.permissionspolicymissing.deprecated.desc=The header has now been renamed to Permissions-Policy. 
pscanalpha.permissionspolicymissing.deprecated.refs=https\://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy
pscanalpha.permissionspolicymissing.deprecated.soln=Ensure that your web server, application server, load balancer, etc. is configured to set the Permissions-Policy header instead of the Feature-Policy header.

pscanalpha.inpagebanner.name=In Page Banner Information Leak
pscanalpha.inpagebanner.desc=The server returned a version banner string in the response content. Such information leaks may allow attackers to further target specific issues impacting the product and version in use.
pscanalpha.inpagebanner.other=There is a chance that the highlight in the finding is on a value in the headers, versus the actual matched string in the response body.
pscanalpha.inpagebanner.soln=Configure the server to prevent such information leaks. For example\:\nUnder Tomcat this is done via the "server" directive and implementation of custom error pages.\nUnder Apache this is done via the "ServerSignature" and "ServerTokens" directives.
pscanalpha.inpagebanner.refs=https\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/08-Testing_for_Error_Handling/

pscanalpha.sourcecodedisclosure.name=Divulgaci\u00f3n de C\u00f3digo Fuente
pscanalpha.sourcecodedisclosure.desc=El c\u00f3digo de fuente de la aplicaci\u00f3n fue divulgado por el servidor web
pscanalpha.sourcecodedisclosure.soln=Aseg\u00farese que la aplicaci\u00f3n Source Code no est\u00e1 habilitada con extensiones alternativas, y aseg\u00farese que el c\u00f3digo de fuente no est\u00e1 presente dentro de otros archivos o datos desplegados al servidor web, o servidos por el servidor web. 
pscanalpha.sourcecodedisclosure.refs=http\://blogs.wsj.com/cio/2013/10/08/adobe-source-code-leak-is-bad-news-for-u-s-government/
pscanalpha.sourcecodedisclosure.extrainfo={0}

pscanalpha.base64disclosure.name=Divulgaci\u00f3n de Base64
pscanalpha.base64disclosure.desc=Base64 encoded data was disclosed by the application/web server. Note\: in the interests of performance not all base64 strings in the response were analyzed individually, the entire response should be looked at by the analyst/security team/developer(s).
pscanalpha.base64disclosure.soln=Confirmar manualmente que los datos de la Base64 no divulguen informaci\u00f3n sensible, y que los datos no pueden ser agregados/usados para explotar otras vulnerabilidades.
pscanalpha.base64disclosure.refs=http\://projects.webappsec.org/w/page/13246936/Information%20Leakage
pscanalpha.base64disclosure.extrainfo={1}

pscanalpha.base64disclosure.viewstate.name=Divulgaci\u00f3n ViewState ASP.NET
pscanalpha.base64disclosure.viewstate.desc=Un ViewState ASP.NET fue divulgado por el servidos de la aplicaci\u00f3n/el servidor
pscanalpha.base64disclosure.viewstate.soln=Manualmente confirmar que el ViewState ASP.NET no divulguen informaci\u00f3n sensible, y que los datos no pueden ser agregados/usados para explotar otras vulnerabilidades.
pscanalpha.base64disclosure.viewstate.refs=http\://msdn.microsoft.com/en-us/library/bb386448.aspx\nhttp\://projects.webappsec.org/w/page/13246936/Information%20Leakage
pscanalpha.base64disclosure.viewstate.extrainfo={0}

pscanalpha.base64disclosure.viewstatewithoutmac.name=Integridad ViewState ASP.NET
pscanalpha.base64disclosure.viewstatewithoutmac.desc=La aplicaci\u00f3n no usa un C\u00f3digo de Autenticaci\u00f3n de Mensajes (MAC) para proteger la integridad del ViewState ASP.NET, que puede ser manipulado por un cliente malintencionado
pscanalpha.base64disclosure.viewstatewithoutmac.soln=Aseg\u00farese que todos los ViewStates ASP.NET est\u00e1n protegidos de la manipulaci\u00f3n usando un MAC, generado usando un algoritmo seguro, y una clave secreta en el lado del servidor. Esta es la configuraci\u00f3n de falla en instalaci\u00f3n ASP.NET moderna, que probablemente sea montado en exceso en programaci\u00f3n, o mediante la configuraci\u00f3n de ASP.NET.
pscanalpha.base64disclosure.viewstatewithoutmac.refs=http\://msdn.microsoft.com/en-us/library/bb386448.aspx\nhttps\://www.jardinesoftware.net/2012/02/06/asp-net-tampering-with-event-validation-part-1/
pscanalpha.base64disclosure.viewstatewithoutmac.extrainfo={0}

pscanalpha.storabilitycacheability.name = Content Cacheability

pscanalpha.nonstorable.name = Contenido no almacenable
pscanalpha.nonstorable.desc = Los contenidos de respuesta no son almacenables de contenidos cach\u00e9 tales como servidores proxy. Si la respuesta no contiene informaci\u00f3n sensible, personal, o espec\u00edfico de un usuario, podr\u00eda beneficiarse de ser almacenado y en cach\u00e9, para mejorar el rendimiento.
pscanalpha.nonstorable.refs = https\://Tools.ietf.org/html/rfc7234 \nhttps\://tools.ietf.org/html/rfc7231 \nhttp\://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (sustituido por rfc7234)
pscanalpha.nonstorable.soln = El contenido podr\u00eda estar marcado como almacenable al asegurar que se cumplen las siguientes condiciones\:\nEl m\u00e9todo de petici\u00f3n debe ser entendido por el cach\u00e9 y definido como almacenable en cach\u00e9 (''''GET'''', ''''HEAD'''', y ''''POST'''' son actualmente definidos como almacenables en cach\u00e9)\nEL c\u00f3digo de estado de respuesta debe ser entendido por el cach\u00e9 (una de las 1XX, 2XX, 3XX, 4XX o 5XX tipos de respuestas son generalmente entendidas)\nLa directiva del cach\u00e9 ''''no-store'''' no debe aparecer en la petici\u00f3n o los campos de encabezado de respuesta\nPara el almacenamiento en cach\u00e9 mediante cach\u00e9s "compartidos" como cach\u00e9s "proxy", la directiva de respuesta "privada" no debe aparecer en la respuesta\nPara el almacenamiento en cach\u00e9 mediante cach\u00e9s "''compartidos'''' como cach\u00e9s ''''proxy'''', el campo de encabezado ''''Autorizaci\u00f3n"'' no debe aparecer en la petici\u00f3n, excepto que la respuesta lo permita expl\u00edcitamente (usando uno de los "debe-revalidarse'''', ''''''p\u00fablico'''' o ''''s-maxage'''' directivas de control de control-cach\u00e9)\nEn adici\u00f3n a las condiciones arriba, al menos una de las siguientes condiciones debe tambi\u00e9n cumplirse por la respuesta\:\nDebe contener un campo de encabezado "Expira"\nDebe contener una directiva de respuesta "max-age''''\nPara cach\u00e9s ''''compartidos'''' tales como cach\u00e9s ''''proxy'''', debe contener una directiva de respuesta ''''''s-maxage''''\nDebe contener una ''''\u00c9xtensi\u00f3n de control de cach\u00e9'''' que permita que sea almacenado en cach\u00e9\nDebe tener un c\u00f3digo de estado que sea definido como almacenable en cach\u00e9 por defecto (200, 203, 204, 206, 300, 301, 404, 405, 410, 414, 501).   
pscanalpha.nonstorable.extrainfo = {0}

pscanalpha.storablenoncacheable.name = Storable but Non-Cacheable Content
pscanalpha.storablenoncacheable.desc = Los contenidos de respuesta son almacenables por componentes de almacenamiento en cach\u00e9 tales como servidores proxy, pero no ser\u00e1n obtenidos directamente desde el cach\u00e9, sin validar la petici\u00f3n, en respuesta a peticiones similares de otros usuarios. 
pscanalpha.storablenoncacheable.refs = https\://Tools.ietf.org/html/rfc7234 \nhttps\://tools.ietf.org/html/rfc7231 \nhttp\://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (sustituido por rfc7234)
pscanalpha.storablenoncacheable.soln=[cadena vac\u00eda]
pscanalpha.storablenoncacheable.extrainfo = {0}}

pscanalpha.storablecacheable.name = Contenido almacenable y almacenable en cach\u00e9
pscanalpha.storablecacheable.desc = Los contenidos de respuesta son almacenables por componentes almacenables en cach\u00e9 tales como servidores proxy, y podr\u00edan ser obtenidos directamente desde el cach\u00e9, en lugar de desde el servidor de origen por los servidos de almacenamiento en cach\u00e9, en respuesta a peticiones similares de otros usuarios. Si los datos de respuesta son sensibles, personal o espec\u00edficas de un usuario, esto podr\u00eda resultar en la divulgaci\u00f3n de informaci\u00f3n sensible. En alguno casos, esto podr\u00eda incluso resultar en un usuario ganando el control completo de la sesi\u00f3n de otro usuario, dependiendo en la configuraci\u00f3n de los componentes almacenables en cach\u00e9 en uso en sus ambientes. Esto es primariamente un problema donde servidores de cach\u00e9 ''''compartidos'''' tales como cach\u00e9s ''''proxy'''' son configurados en la red local. esta configuraci\u00f3n es t\u00edpicamente encontrado en ambientes educativos o corporativos, por ejemplo.
pscanalpha.storablecacheable.refs = https\://Tools.ietf.org/html/rfc7234 \nhttps\://tools.ietf.org/html/rfc7231 \nhttp\://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (sustituido por rfc7234)
pscanalpha.storablecacheable.soln = Validar que la respuesta no contenga informaci\u00f3n sensible, personal o espec\u00edfica de un usuario. SI lo hace, considerar el uso de los siguientes encabezados de respuesta HTTP, para limitar, o prevenir el contenido siendo almacenado y recuperados del cach\u00e9 por otro usuario\:\nControl-Cach\u00e9\: no-cache, no-store, must-revalidate, private\nPragma\: no-cache\nExpires\: 0\nEsta configuraci\u00f3n dirige ambos HTTP 1.0 y HTTP 1.1 servidores de cach\u00e9 compatibles a no almacenar la respuesta, y a no recuperar la respuesta (sin validaci\u00f3n) del cach\u00e9, en respuesta a una petici\u00f3n similar. 
pscanalpha.storablecacheable.extrainfo = {0}
pscanalpha.storablecacheable.otherinfo.liberallifetimeheuristic = En la ausencia de una directiva de vida de cach\u00e9 expl\u00edcitamente especificada en la respuesta, ha sido asumido un heur\u00edstico tiempo de vida liberal de un a\u00f1o. Esto es permitido por rfc7234.
pscanalpha.storablecacheable.otherinfo.staleretrievenotblocked = The response is stale, and stale responses are not configured to be re-validated or blocked, using the 'must-revalidate', 'proxy-revalidate', 's-maxage', or 'max-age' response 'Cache-Control' directives.

pscanalpha.jso.name=Java Serialization Object
pscanalpha.jso.desc=Java Serialization seems to be in use. If not correctly validated, an attacker can send a specially crafted object. This can lead to a dangerous "Remote Code Execution". A magic sequence identifying JSO has been detected (Base64\: rO0AB, Raw\: 0xac, 0xed, 0x00, 0x05).
pscanalpha.jso.soln=Deserialization of untrusted data is inherently dangerous and should be avoided.
pscanalpha.jso.refs=https\://www.oracle.com/technetwork/java/seccodeguide-139067.html\#8

pscanalpha.sri-integrity.name=Sub Resource Integrity Attribute Missing
pscanalpha.sri-integrity.desc=The integrity attribute is missing on a script or link tag served by an external server. The integrity tag prevents an attacker who have gained access to this server from injecting a malicious content. 
pscanalpha.sri-integrity.soln=Provide a valid integrity attribute to the tag.
pscanalpha.sri-integrity.refs=https\://developer.mozilla.org/en/docs/Web/Security/Subresource_Integrity

pscanalpha.jsfunction.name=Dangerous JS Functions
pscanalpha.jsfunction.desc=A dangerous JS function seems to be in use that would leave the site vulnerable.
pscanalpha.jsfunction.soln=See the references for security advice on the use of these functions.
pscanalpha.jsfunction.refs=https\://angular.io/guide/security

pscanalpha.payloader.name=Passive Scan Rules Alpha Custom Payloads
pscanalpha.payloader.desc=Provides support for custom payloads in scan rules.

pscanalpha.site-isolation.name = Insufficient Site Isolation Against Spectre Vulnerability

pscanalpha.site-isolation.corp.name = Cross-Origin-Resource-Policy Header Missing or Invalid
pscanalpha.site-isolation.corp.desc = Cross-Origin-Resource-Policy header is an opt-in header designed to counter side-channels attacks like Spectre. Resource should be specifically set as shareable amongst different origins.
pscanalpha.site-isolation.corp.refs = https\://developer.mozilla.org/en-US/docs/Web/HTTP/Cross-Origin_Resource_Policy_(CORP)
pscanalpha.site-isolation.corp.soln = Ensure that the application/web server sets the Cross-Origin-Resource-Policy header appropriately, and that it sets the Cross-Origin-Resource-Policy header to 'same-origin' for all web pages.\n'same-site' is considered as less secured and should be avoided.\nIf resources must be shared, set the header to 'cross-origin'.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that supports the Cross-Origin-Resource-Policy header (https\://caniuse.com/mdn-http_headers_cross-origin-resource-policy).

pscanalpha.site-isolation.coep.name = Cross-Origin-Embedder-Policy Header Missing or Invalid
pscanalpha.site-isolation.coep.desc = Cross-Origin-Embedder-Policy header is a response header that prevents a document from loading any cross-origin resources that don't explicitly grant the document permission (using CORP or CORS).
pscanalpha.site-isolation.coep.refs = https\://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Embedder-Policy
pscanalpha.site-isolation.coep.soln = Ensure that the application/web server sets the Cross-Origin-Embedder-Policy header appropriately, and that it sets the Cross-Origin-Embedder-Policy header to 'require-corp' for documents.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that supports the Cross-Origin-Embedder-Policy header (https\://caniuse.com/mdn-http_headers_cross-origin-embedder-policy).

pscanalpha.site-isolation.coop.name = Cross-Origin-Opener-Policy Header Missing or Invalid
pscanalpha.site-isolation.coop.desc = Cross-Origin-Opener-Policy header is a response header that allows a site to control if others included documents share the same browsing context. Sharing the same browsing context with untrusted documents might lead to data leak.
pscanalpha.site-isolation.coop.refs = https\://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cross-Origin-Opener-Policy
pscanalpha.site-isolation.coop.soln = Ensure that the application/web server sets the Cross-Origin-Opener-Policy header appropriately, and that it sets the Cross-Origin-Opener-Policy header to 'same-origin' for documents.\n'same-origin-allow-popups' is considered as less secured and should be avoided.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that supports the Cross-Origin-Opener-Policy header (https\://caniuse.com/mdn-http_headers_cross-origin-opener-policy).

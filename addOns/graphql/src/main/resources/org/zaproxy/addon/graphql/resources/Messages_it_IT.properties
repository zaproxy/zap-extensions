graphql.api.action.importFile = Importa uno Schema GraphQL da un File.
graphql.api.action.importFile.param.endurl = L'URL dell'Endpoint.
graphql.api.action.importFile.param.file = Il File Contenente lo Schema GraphQL.
graphql.api.action.importUrl = Importa uno Schema GraphQL da un URL.
graphql.api.action.importUrl.param.endurl = L'URL dell'Endpoint.
graphql.api.action.importUrl.param.url = L'URL che Individua lo Schema GraphQL.
graphql.api.action.setOptionArgsType = Imposta come sono specificati gli argomenti.
graphql.api.action.setOptionArgsType.param.String = Può essere "IN LINEA", "VARIABILI", o "ENTRAMBI".
graphql.api.action.setOptionLenientMaxQueryDepthEnabled = Imposta se la Profondità di Richiesta Massima è applicata con indulgenza o no.
graphql.api.action.setOptionLenientMaxQueryDepthEnabled.param.Boolean = Applica con Indulgenza (true o false).
graphql.api.action.setOptionMaxAdditionalQueryDepth = Imposta la profondità aggiuntiva di generazione della richiesta massima (utilizzato se applicata con indulgenza).
graphql.api.action.setOptionMaxAdditionalQueryDepth.param.Integer = La Profondità Aggiuntiva Massima.
graphql.api.action.setOptionMaxArgsDepth = Imposta la profondità di generazione massima degli argomenti.
graphql.api.action.setOptionMaxArgsDepth.param.Integer = La Profondità Massima.
graphql.api.action.setOptionMaxQueryDepth = Imposta la profondità di generazione massima della richiesta.
graphql.api.action.setOptionMaxQueryDepth.param.Integer = La Profondità Massima.
graphql.api.action.setOptionOptionalArgsEnabled = Imposta se gli Argomenti Facoltativi dovrebbero essere specificati o no.
graphql.api.action.setOptionOptionalArgsEnabled.param.Boolean = Specifica gli Argomenti Facoltativi (true o false).
graphql.api.action.setOptionQuerySplitType = Imposta il livello per cui è generata una richiesta singola.
graphql.api.action.setOptionQuerySplitType.param.String = Può essere "LEAF", "ROOT_FIELD", od "OPERATION".
graphql.api.action.setOptionRequestMethod = Imposta il metodo di richiesta.
graphql.api.action.setOptionRequestMethod.param.String = Può essere "POST_JSON", "POST_GRAPHQL", o "GET".
graphql.api.view.optionArgsType = Restituisce come sono correntemente specificati gli argomenti.
graphql.api.view.optionLenientMaxQueryDepthEnabled = Restituisce se la profondità di generazione massima della richiesta è abilitata o no.
graphql.api.view.optionMaxAdditionalQueryDepth = Restituisce la profondità aggiuntiva di generazione massima corrente della richiesta.
graphql.api.view.optionMaxArgsDepth = Restituisce la profondità di generazione massima corrente degli argomenti.
graphql.api.view.optionMaxQueryDepth = Restituisce la profondità di generazione massima corrente della richiesta.
graphql.api.view.optionOptionalArgsEnabled = Restituisce se gli argomenti facoltativi sono correntemente specificati o no.
graphql.api.view.optionQuerySplitType = Restituisce il livello corrente per cui è generata una richiesta singola.
graphql.api.view.optionRequestMethod = Restituisce il metodo di richiesta corrente.

graphql.automation.desc = Integrazione del Quadro d'Automazione di GraphQL
graphql.automation.dialog.advanced = Mostra Opzioni Avanzate\:
graphql.automation.dialog.argstype = Tipo di Argomenti\:
graphql.automation.dialog.endpoint = Endpoint\:
graphql.automation.dialog.lenientmaxquery = Profondità Massima Tollerante della Richiesta Abilitata\:
graphql.automation.dialog.maxaddquerydepth = Profondità Aggiuntiva Massima della Richiesta\:
graphql.automation.dialog.maxargsdepth = Profondità Massima degli Argomenti\:
graphql.automation.dialog.maxquerydepth = Profondità Massima di Richiesta\:
graphql.automation.dialog.name = Nome dell'Attività\:
graphql.automation.dialog.optargsenabled = Argomenti Facoltativi Abilitati\:
graphql.automation.dialog.querysplittype = Tipo di Divisione della Richiesta\:
graphql.automation.dialog.requestmethod = Metodo di Richiesta\:
graphql.automation.dialog.schemafile = SchemaFile\:
graphql.automation.dialog.schemaurl = URL dello Schema\:
graphql.automation.dialog.summary = URL\: {0}, File\: {1}
graphql.automation.dialog.tab.adv = Avanzate
graphql.automation.dialog.tab.params = Parametri
graphql.automation.dialog.title = Attività di GraphQL
graphql.automation.error = Errore dell''attività di GraphQL\: {0}
graphql.automation.info.import.file = Schema d''importazione dell''attività di GraphQL dal file\: {0} destinazione\: {1}
graphql.automation.info.import.introspect = Schema d''importazione dell''attività di GraphQL utilizzando l''introspezione da\: {0}
graphql.automation.info.import.url = Schema d''importazione dell''attività di GraphQL dall''URL\: {0} destinazione\: {1}
graphql.automation.name = Automazione di GraphQL

graphql.cmdline.endurl.help = Imposta l'URL dell'Endpoint
graphql.cmdline.file.help = Importa uno Schema di GraphQL da un File
graphql.cmdline.url.help = Importa uno Schema di GraphQL da un URL

graphql.desc = Ti consente di ispezionare e attaccare gli endpoint di GraphQL.

graphql.engine.agoo.docsUrl = https\://github.com/ohler55/agoo
graphql.engine.agoo.name = Agoo
graphql.engine.agoo.technologies = Ruby

graphql.engine.apollo.docsUrl = https\://github.com/apollographql/apollo-server
graphql.engine.apollo.name = Apollo
graphql.engine.apollo.technologies = JavaScript, Node.js, and TypeScript

graphql.engine.ariadne.docsUrl = https\://github.com/mirumee/ariadne
graphql.engine.ariadne.name = Ariadne
graphql.engine.ariadne.technologies = Python

graphql.engine.aws-appsync.docsUrl = https\://aws.amazon.com/appsync
graphql.engine.aws-appsync.name = AWS AppSync
graphql.engine.aws-appsync.technologies = AWS

graphql.engine.caliban.docsUrl = https\://github.com/ghostdogpr/caliban
graphql.engine.caliban.name = caliban
graphql.engine.caliban.technologies = Scala

graphql.engine.dgraph.docsUrl = https\://github.com/dgraph-io/dgraph
graphql.engine.dgraph.name = Dgraph
graphql.engine.dgraph.technologies = JavaScript

graphql.engine.dianajl.docsUrl = https\://github.com/neomatrixcode/Diana.jl
graphql.engine.dianajl.name = Diana.jl
graphql.engine.dianajl.technologies = Julia

graphql.engine.directus.docsUrl = https\://github.com/directus/directus
graphql.engine.directus.name = Directus
graphql.engine.directus.technologies = TypeScript

graphql.engine.gqlgen.docsUrl = https\://github.com/99designs/gqlgen
graphql.engine.gqlgen.name = gqlgen
graphql.engine.gqlgen.technologies = Golang

graphql.engine.graphene.docsUrl = https\://github.com/graphql-python/graphene
graphql.engine.graphene.name = Graphene
graphql.engine.graphene.technologies = Python

graphql.engine.graphql-by-pop.docsUrl = https\://github.com/leoloso/PoP/tree/master/layers/GraphQLByPoP
graphql.engine.graphql-by-pop.name = GraphQL by PoP
graphql.engine.graphql-by-pop.technologies = PHP

graphql.engine.graphql-flutter.docsUrl = https\://github.com/zino-app/graphql-flutter
graphql.engine.graphql-flutter.name = graphql-flutter
graphql.engine.graphql-flutter.technologies = Flutter (Dart)

graphql.engine.graphql-go.docsUrl = https\://github.com/graphql-go/graphql
graphql.engine.graphql-go.name = graphql-go
graphql.engine.graphql-go.technologies = Golang

graphql.engine.graphql-java.docsUrl = https\://github.com/graphql-java/graphql-java
graphql.engine.graphql-java.name = graphql-java
graphql.engine.graphql-java.technologies = Java

graphql.engine.graphql-php.docsUrl = https\://github.com/webonyx/graphql-php
graphql.engine.graphql-php.name = graphql-php
graphql.engine.graphql-php.technologies = PHP

graphql.engine.graphql-ruby.docsUrl = https\://github.com/rmosolgo/graphql-ruby
graphql.engine.graphql-ruby.name = graphql-ruby
graphql.engine.graphql-ruby.technologies = Ruby

graphql.engine.graphql-yoga.docsUrl = https\://github.com/dotansimha/graphql-yoga
graphql.engine.graphql-yoga.name = GraphQL Yoga
graphql.engine.graphql-yoga.technologies = TypeScript

graphql.engine.hasura.docsUrl = https\://github.com/hasura/graphql-engine
graphql.engine.hasura.name = Hasura
graphql.engine.hasura.technologies = Haskell

graphql.engine.hypergraphql.docsUrl = https\://github.com/hypergraphql/hypergraphql
graphql.engine.hypergraphql.name = HyperGraphQL
graphql.engine.hypergraphql.technologies = Java

graphql.engine.jaal.docsUrl = https\://github.com/appointy/jaal
graphql.engine.jaal.name = jaal
graphql.engine.jaal.technologies = Golang

graphql.engine.juniper.docsUrl = https\://github.com/graphql-rust/juniper
graphql.engine.juniper.name = Juniper
graphql.engine.juniper.technologies = Rust

graphql.engine.lacinia.docsUrl = https\://github.com/walmartlabs/lacinia
graphql.engine.lacinia.name = lacinia
graphql.engine.lacinia.technologies = Clojure

graphql.engine.lighthouse.docsUrl = https\://github.com/nuwave/lighthouse
graphql.engine.lighthouse.name = Lighthouse
graphql.engine.lighthouse.technologies = PHP

graphql.engine.mercurius.docsUrl = https\://github.com/mercurius-js/mercurius
graphql.engine.mercurius.name = mercurius
graphql.engine.mercurius.technologies = JavaScript, Node.js, and TypeScript

graphql.engine.morpheus.docsUrl = https\://github.com/morpheusgraphql/morpheus-graphql
graphql.engine.morpheus.name = morpheus-graphql
graphql.engine.morpheus.technologies = Haskell

graphql.engine.sangria.docsUrl = https\://github.com/sangria-graphql/sangria
graphql.engine.sangria.name = Sangria
graphql.engine.sangria.technologies = Scala

graphql.engine.strawberry.docsUrl = https\://github.com/strawberry-graphql/strawberry
graphql.engine.strawberry.name = Strawberry
graphql.engine.strawberry.technologies = Python

graphql.engine.tartiflette.docsUrl = https\://github.com/tartiflette/tartiflette
graphql.engine.tartiflette.name = tartiflette
graphql.engine.tartiflette.technologies = Python

graphql.engine.wpgraphql.docsUrl = https\://github.com/wp-graphql/wp-graphql
graphql.engine.wpgraphql.name = WPGraphQL WordPress Plugin
graphql.engine.wpgraphql.technologies = PHP

graphql.error.filenotfound = Cannot find the file\:\n{0}
graphql.error.importfile = Si è verificato un errore importando dal file.
graphql.error.invalidurl = Sei pregato di inserire un URL valido.\n{0}

graphql.fingerprinting.alert.desc = The server is using "{0}", which is a GraphQL implementation for {1}.
graphql.fingerprinting.alert.name = GraphQL Server Implementation Identified

graphql.formhandler.desc = Integrazione del Gestore di Moduli di GraphQL
graphql.formhandler.name = Gestore di Moduli di GraphQL

graphql.importfromdialog.importbutton = Importa
graphql.importfromdialog.labelendpoint = URL dell'Endpoint
graphql.importfromdialog.message = DA FARE\: Importa e Analizza Schema
graphql.importfromdialog.pasteaction = Incolla

graphql.importfromfiledialog.choosefilebutton = Scegli File
graphql.importfromfiledialog.labelfile = File dello Schema
graphql.importfromfiledialog.title = Importa uno Schema di GraphQL da un File

graphql.importfromurldialog.labelurl = URL dello Schema (Facoltativo)
graphql.importfromurldialog.title = Importa uno Schema di GraphQL da un URL

graphql.info.emptyendurl = Nessun URL di GraphQL specificato.

graphql.introspection.alert.desc = The GraphQL endpoint has Introspection enabled. Introspection allows clients to query the schema and retrieve detailed information about the fields, types, inputs, etc. supported by the GraphQL endpoint. This may be valuable to an attacker, as it could enable them to craft more targeted queries.
graphql.introspection.alert.name = GraphQL Endpoint Supports Introspection
graphql.introspection.alert.ref = https\://spec.graphql.org/October2021/\#sec-Introspection
graphql.introspection.alert.soln = Disable Introspection on the GraphQL endpoint.

graphql.options.label.additionalQueryDepth = Profondità Aggiuntiva della Richiesta\:
graphql.options.label.argsDepth = Profondità Massima degli Argomenti\:
graphql.options.label.argsType = Specifica Argomenti\:
graphql.options.label.lenientMaxQueryDepthEnabled = Profondità Massima Tollerante della Richiesta
graphql.options.label.lenientMaxQueryDepthEnabled.tooltip = Impedisci le richieste non valide consentendo la profondità aggiuntiva per i campi privi di tipi di scheda.
graphql.options.label.optionalArgsEnabled = Specifica Argomenti Facoltativi
graphql.options.label.queryDepth = Profondità Massima della Richiesta\:
graphql.options.label.requestMethod = Metodo di Richiesta\:
graphql.options.label.split = Genera Richiesta Per\:
graphql.options.panelName = GraphQL
graphql.options.value.args.both = Entrambi
graphql.options.value.args.inline = Inline
graphql.options.value.args.variables = Utilizzare le Variabili
graphql.options.value.request.postJson = POST (con corpo JSON)
graphql.options.value.split.get = GET
graphql.options.value.split.leaf = Ogni Scheda (Scalare o Enumerazione)
graphql.options.value.split.operation = Ogni Operazione
graphql.options.value.split.postGraphql = POST (con corpo GraphQL)
graphql.options.value.split.rootField = Ogni Campo di un'Operazione

graphql.spider.desc = Integrazione GraphQL Spider
graphql.spider.name = GraphQL Spider

graphql.topmenu.import.importgraphql = Importa uno Schema di GraphQL da un File
graphql.topmenu.import.importgraphql.tooltip = Il file dev'essere uno schema di GraphQL descritto formalmente.
graphql.topmenu.import.importremotegraphql = Importa uno Schema di GraphQL da un URL
graphql.topmenu.import.importremotegraphql.tooltip = L'URL che individua uno schema di GraphQL. Se non specificato, sarà utilizzata l'Introspezione.

ascanbeta.desc = Beta status active scan rules
ascanbeta.name = Active Scan Rules - beta

ascanbeta.backupfiledisclosure.name = \u5907\u4efd\u6587\u4ef6\u6cc4\u9732
ascanbeta.backupfiledisclosure.desc = \u8be5\u6587\u4ef6\u7684\u5907\u4efd\u7531Web\u670d\u52a1\u5668\u6240\u516c\u5f00
ascanbeta.backupfiledisclosure.soln = \u4e0d\u539f\u4f4dWeb\u670d\u52a1\u5668\u4e0a\u7f16\u8f91\u6587\u4ef6\uff0c\u5e76\u4e14\u786e\u4fdd\u975e\u5fc5\u8981\u7684\u6587\u4ef6\uff08\u5305\u62ec\u9690\u85cf\u6587\u4ef6\uff09\u4eceWeb\u670d\u52a1\u5668\u4e0a\u5220\u9664\u3002
ascanbeta.backupfiledisclosure.evidence = \u5728[{1}]\u6709\u4e00\u4efd[{0}]\u7684\u5907\u4efd\u53ef\u7528
ascanbeta.backupfiledisclosure.refs = https\://cwe.mitre.org/data/definitions/530.html\n\
https\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/04-Review_Old_Backup_and_Unreferenced_Files_for_Sensitive_Information.html

ascanbeta.cookieslack.name = Cookie Slack Detector
ascanbeta.cookieslack.desc = Repeated GET requests\: drop a different cookie each time, followed by normal request with all cookies to stabilize session, compare responses against original baseline GET. This can reveal areas where cookie based authentication/attributes are not actually enforced.
ascanbeta.cookieslack.otherinfo.intro = Cookies that don't have expected effects can reveal flaws in application logic. In the worst case, this can reveal where authentication via cookie token(s) is not actually enforced.\n\

ascanbeta.cookieslack.session.warning = NOTE\: Because of its name this cookie may be important, but dropping it appears to have no effect\: [{0}] \n\

ascanbeta.cookieslack.affect.response.yes = These cookies affected the response\: 
ascanbeta.cookieslack.affect.response.no = These cookies did NOT affect the response\: 
ascanbeta.cookieslack.session.destroyed = Dropping this cookie appears to have invalidated the session\: [{0}] A follow-on request with all original cookies still had a different response than the original request. \n\

ascanbeta.cookieslack.separator = ,
ascanbeta.cookieslack.endline = \n\


ascanbeta.cors.info.name=CORS Header
ascanbeta.cors.info.desc=Cross-Origin Resource Sharing (CORS) is an HTTP-header based mechanism that allows a server to indicate any other origins (domain, scheme, or port) than its own from which a browser should permit loading of resources. It relaxes the Same-Origin Policy (SOP).
ascanbeta.cors.vuln.name=CORS Misconfiguration
ascanbeta.cors.vuln.desc=This CORS misconfiguration could allow an attacker to perform AJAX queries to the vulnerable website from a malicious page loaded by the victim's user agent.\n\
In order to perform authenticated AJAX queries, the server must specify the header "Access-Control-Allow-Credentials\: true" and the "Access-Control-Allow-Origin" header must be set to null or the malicious page's domain. Even if this misconfiguration doesn't allow authenticated AJAX requests, unauthenticated sensitive content can still be accessed (e.g intranet websites).\n\
A malicious page can belong to a malicious website but also a trusted website with flaws (e.g XSS, support of HTTP without TLS allowing code injection through MITM, etc).
ascanbeta.cors.soln=If a web resource contains sensitive information, the origin should be properly specified in the Access-Control-Allow-Origin header. Only trusted websites needing this resource should be specified in this header, with the most secured protocol supported.
ascanbeta.cors.refs=https\://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\n\
https\://portswigger.net/web-security/cors

ascanbeta.crossdomain.name = \u8de8\u57df\u914d\u7f6e\u9519\u8bef
#the refs cannot be customised for each sub-category (Adobe, Silverlight, etc.)
ascanbeta.crossdomain.refs = http\://www.adobe.com/devnet/articles/crossdomain_policy_file_spec.html\n\
http\://www.adobe.com/devnet-docs/acrobatetk/tools/AppSec/CrossDomain_PolicyFile_Specification.pdf\n\
http\://msdn.microsoft.com/en-US/library/cc197955%28v\=vs.95%29.aspx\n\
http\://msdn.microsoft.com/en-us/library/cc838250%28v\=vs.95%29.aspx
ascanbeta.crossdomain.adobe.read.name = \u8de8\u57df\u914d\u7f6e\u9519\u8bef - Adobe - Read
ascanbeta.crossdomain.adobe.send.name = \u8de8\u57df\u914d\u7f6e\u9519\u8bef - Adobe - Send
ascanbeta.crossdomain.adobe.desc = \u7531\u4e8eWeb\u670d\u52a1\u5668\u4e0a\u7684\u9519\u8bef\u914d\u7f6e\uff0c\u57fa\u4e8eFlash/Silverlight\u7684\u8de8\u7ad9\u70b9\u8bf7\u6c42\u4f2a\u9020\u6709\u53ef\u80fd\u53d1\u751f\u3002 
ascanbeta.crossdomain.adobe.read.soln = \u4f7f\u7528<allow-access-from domain\="example.com">\uff0c\u914d\u7f6ecrossdomain.xml\u6587\u4ef6\u6765\u6536\u7a84\u90a3\u4e9b\u88ab\u5141\u8bb8\u5411\u6b64Web\u670d\u52a1\u5668\u8fdb\u884c\u8de8\u57df\u8bfb\u53d6\u8bf7\u6c42\u7684\u57df\u7684\u540d\u5355\u3002\u53ea\u6709\u5f53\u4f60\u786e\u5b9a\u6b64\u670d\u52a1\u4e0d\u6258\u7ba1\u4efb\u4f55\u53d7\u8bbf\u95ee\u6743\u9650\u63a7\u5236\u7684\u3001\u4e2a\u6027\u5316\u7684\u6216\u79c1\u6709\u7684\u6570\u636e\u65f6\uff0c\u4f60\u624d\u5e94\u8be5\u5411\u201c*\u201d\uff08\u6240\u6709\u57df\uff09\u6388\u4e88\u8bbf\u95ee\u6743\u9650\u3002
ascanbeta.crossdomain.adobe.read.extrainfo = Web\u670d\u52a1\u5668\u5141\u8bb8\u6076\u610f\u7684\u8de8\u57df\u6570\u636e\u8bfb\u53d6\u6765\u81ea\u4efb\u4f55\u7b2c\u4e09\u65b9\u57df\u7684Flash/Silverlight\u7ec4\u4ef6\u5411\u6b64\u57df\u53d1\u9001\u7684\u8bf7\u6c42\u3002\u5982\u679c\u53d7\u5bb3\u8005\u7528\u6237\u767b\u5f55\u4e86\u6b64\u670d\u52a1\uff0c\u90a3\u4e48\u5c06\u4f7f\u7528\u53d7\u5bb3\u8005\u7684\u7279\u6743\u5904\u7406\u8fd9\u4e2a\u6076\u610f\u7684\u8bfb\u53d6\u8bf7\u6c42\uff0c\u5e76\u53ef\u80fd\u5bfc\u81f4\u6b64\u670d\u52a1\u53d1\u9001\u7684\u6570\u636e\u88ab\u672a\u7ecf\u6388\u6743\u7684\u7b2c\u4e09\u65b9\u7f51\u7ad9\u4ee5\u53d7\u5bb3\u8005\u7684\u7f51\u9875\u6d4f\u89c8\u5668\u4e3a\u4e2d\u4ecb\u6cc4\u9732\u51fa\u53bb\u3002\u5982\u679c\u4f7f\u7528\u7684\u662f\u57fa\u4e8eCookie\u7684\u4f1a\u8bdd\u5b9e\u73b0\uff0c\u8fd9\u79cd\u60c5\u51b5\u5c31\u5f88\u53ef\u80fd\u53d1\u751f\u3002 
ascanbeta.crossdomain.adobe.send.soln = \u4f7f\u7528<allow-http-request-headers-from domain\="example.com" headers\="Authorization,X-Blahh">\uff0c\u914d\u7f6ecrossdomain.xml\u6587\u4ef6\u6765\u6536\u7a84\u90a3\u4e9b\u88ab\u5141\u8bb8\u5411\u6b64Web\u670d\u52a1\u5668\u8de8\u57df\u53d1\u9001\uff08\u4f46\u4e0d\u4e00\u5b9a\u8bfb\u53d6\uff09\u8bf7\u6c42\u7684\u57df\u7684\u540d\u5355\u3002\u53ea\u6709\u5f53\u4f60\u786e\u5b9a\u6b64\u670d\u52a1\u4e0d\u5bb9\u6613\u906d\u53d7\u8de8\u7ad9\u70b9\u8bf7\u6c42\u4f2a\u9020\uff08CSRF\uff09\u653b\u51fb\u65f6\u624d\u5e94\u8be5\u5411\u201c*\u201d\uff08\u6240\u6709\u57df\uff09\u6388\u4e88\u8bbf\u95ee\u6743\u9650\u3002
ascanbeta.crossdomain.adobe.send.extrainfo = Web\u670d\u52a1\u5668\u5141\u8bb8\u6076\u610f\u7684\u8de8\u57df\u6570\u636e\u5411\u6b64\u57df\u53d1\u9001\uff08\u4f46\u4e0d\u4e00\u5b9a\u8bfb\u53d6\uff09\u6765\u81ea\u4efb\u4f55\u7b2c\u4e09\u65b9\u57df\u7684Flash/Silverlight\u7ec4\u4ef6\u7684\u8bf7\u6c42\u3002\u5982\u679c\u53d7\u5bb3\u8005\u7528\u6237\u767b\u5f55\u4e86\u6b64\u670d\u52a1\uff0c\u5c31\u4f1a\u4f7f\u7528\u53d7\u5bb3\u8005\u7684\u7279\u6743\u6765\u5904\u7406\u8fd9\u4e2a\u6076\u610f\u7684\u53d1\u9001\u8bf7\u6c42\uff0c\u5e76\u5c06\u5bfc\u81f4\u4ee5\u53d7\u5bb3\u8005\u7684\u7f51\u9875\u6d4f\u89c8\u5668\u4e3a\u4e2d\u4ecb\u7684\u8de8\u7ad9\u70b9\u8bf7\u6c42\u4f2a\u9020\uff08CSRF\uff09\u4e00\u7c7b\u7684\u653b\u51fb\u3002\u5982\u679c\u4f7f\u7528\u7684\u662f\u57fa\u4e8eCookie\u7684\u4f1a\u8bdd\u5b9e\u73b0\uff0c\u8fd9\u79cd\u60c5\u51b5\u5c31\u5f88\u53ef\u80fd\u53d1\u751f\u3002
ascanbeta.crossdomain.silverlight.name = Cross-Domain Misconfiguration - Silverlight
ascanbeta.crossdomain.silverlight.desc = \u7531\u4e8eweb\u670d\u52a1\u5668\u4e0a\u7684\u9519\u8bef\u914d\u7f6e\uff0c\u57fa\u4e8eSilverlight\u7684\u8de8\u7ad9\u70b9\u4f2a\u9020\u8bf7\u6c42\u662f\u53ef\u80fd\u7684\u3002
ascanbeta.crossdomain.silverlight.soln = \u4f7f\u7528<domain uri\="https\://example.com" />\u6765\u914d\u7f6eclientaccesspolicy.xml\u6587\u4ef6\uff0c\u6765\u6536\u7a84\u90a3\u4e9b\u88ab\u5141\u8bb8\u5411\u6b64Web\u670d\u52a1\u5668\u53d1\u9001\u8de8\u57df\u8bf7\u6c42\u7684\u57df\u7684\u540d\u5355\u3002\u53ea\u6709\u5f53\u4f60\u786e\u5b9a\u6b64\u670d\u52a1\u672a\u6258\u7ba1\u4efb\u4f55\u53d7\u8bbf\u95ee\u6743\u9650\u63a7\u5236\u7684\u3001\u4e2a\u6027\u5316\u7684\u6216\u79c1\u6709\u7684\u6570\u636e\u65f6\uff0c\u4f60\u624d\u5e94\u8be5\u5411\u201c*\u201d\uff08\u6240\u6709\u57df\uff09\u6388\u4e88\u8bbf\u95ee\u6743\u9650\u3002
ascanbeta.crossdomain.silverlight.extrainfo = Web\u670d\u52a1\u5668\u5141\u8bb8\u6765\u81ea\u4efb\u4f55\u7b2c\u4e09\u65b9\u7684Silverlight\u7ec4\u4ef6\u5411\u672c\u57df\u53d1\u9001\u6076\u610f\u7684\u8de8\u57df\u8bf7\u6c42\u3002\u5728\u53d7\u5bb3\u8005\u7528\u6237\u767b\u5f55\u4e86\u6b64\u670d\u52a1\u7684\u60c5\u51b5\u4e0b\uff0c\u5c31\u4f1a\u4f7f\u7528\u53d7\u5bb3\u8005\u7684\u7279\u6743\u5904\u7406\u8fd9\u4e9b\u6076\u610f\u8bf7\u6c42\uff0c\u5e76\u53ef\u80fd\u5bfc\u81f4\u6765\u81ea\u6b64\u670d\u52a1\u7684\u6570\u636e\u7ecf\u7531\u53d7\u5bb3\u8005\u7684\u7f51\u9875\u6d4f\u89c8\u5668\uff0c\u88ab\u672a\u7ecf\u6388\u6743\u7684\u7b2c\u4e09\u65b9\u7f51\u7ad9\u7834\u574f\u3002\u5b83\u8fd8\u53ef\u4ee5\u5bfc\u81f4\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\uff08CSRF\uff09\u4e00\u7c7b\u7684\u653b\u51fb\u3002\u5f53\u4f7f\u7528\u4e86\u57fa\u4e8eCookie\u7684\u4f1a\u8bdd\u64cd\u4f5c\u65f6\uff0c\u5c24\u5176\u53ef\u80fd\u53d1\u751f\u8fd9\u4e2a\u95ee\u9898\u3002

ascanbeta.csrftoken.name=Anti-CSRF Tokens Check
ascanbeta.csrftoken.extrainfo.annotation = This is an informational alert as the form has a security annotation indicating that it does not need an anti-CSRF Token. This should be tested manually to ensure the annotation is correct.

ascanbeta.entityExpansion.name=Exponential Entity Expansion (Billion Laughs Attack)
ascanbeta.entityExpansion.desc=An exponential entity expansion, or "billion laughs" attack is a type of denial-of-service (DoS) attack. It is aimed at parsers of markup languages like XML or YAML that allow macro expansions.
ascanbeta.entityExpansion.soln=Defenses against this kind of attack include capping the memory allocated in an individual parser if loss of the document is acceptable, or treating entities symbolically and expanding them lazily only when (and to the extent) their content is to be used.
ascanbeta.entityExpansion.refs=https\://en.wikipedia.org/wiki/Billion_laughs_attack\n\
http\://projects.webappsec.org/XML-Entity-Expansion\n\
http\://cwe.mitre.org/data/definitions/776.html
ascanbeta.entityExpansion.other=The attack HTTP request received a response after {0} seconds.

ascanbeta.forbiddenBypass.name=Bypassing 403
ascanbeta.forbiddenBypass.desc=Bypassing 403 endpoints may be possible, the scan rule sent a payload that caused the response to be accessible (status code 200).
ascanbeta.forbiddenBypass.refs=https\://www.acunetix.com/blog/articles/a-fresh-look-on-reverse-proxy-related-attacks/\n\
https\://i.blackhat.com/us-18/Wed-August-8/us-18-Orange-Tsai-Breaking-Parser-Logic-Take-Your-Path-Normalization-Off-And-Pop-0days-Out-2.pdf\n\
https\://www.contextis.com/en/blog/server-technologies-reverse-proxy-bypass

ascanbeta.HTTPParamPoll.name = HTTP Parameter Pollution
ascanbeta.HTTPParamPoll.desc = HTTP\u53c2\u6570\u6c61\u67d3\uff08HPP\uff09\u653b\u51fb\u5305\u62ec\u5c06\u7f16\u7801\u7684\u67e5\u8be2\u5b57\u7b26\u4e32\u5206\u9694\u7b26\u6ce8\u5165\u5230\u5176\u4ed6\u73b0\u6709\u53c2\u6570\u4e2d\u3002\u5982\u679cweb\u5e94\u7528\u7a0b\u5e8f\u6ca1\u6709\u9002\u5f53\u51c0\u5316\u7528\u6237\u6240\u8f93\u5165\u7684\u6570\u636e\uff0c\u6076\u610f\u7528\u6237\u5c31\u53ef\u80fd\u7834\u574f\u5e94\u7528\u7a0b\u5e8f\u7684\u903b\u8f91\uff0c\u6765\u6267\u884c\u5ba2\u6237\u7aef\u6216\u670d\u52a1\u5668\u7aef\u7684\u653b\u51fb\u3002HPP\u653b\u51fb\u7684\u4e00\u4e2a\u540e\u679c\u662f\uff0c\u653b\u51fb\u8005\u6709\u673a\u4f1a\u8986\u76d6\u73b0\u6709\u7684\u786c\u7f16\u7801HTTP\u53c2\u6570\uff0c\u4ece\u800c\u4fee\u6539\u5e94\u7528\u7a0b\u5e8f\u7684\u884c\u4e3a\uff0c\u7ed5\u8fc7\u8f93\u5165\u9a8c\u8bc1\u68c0\u67e5\u70b9\uff0c\u4ee5\u53ca\u8bbf\u95ee\u5e76\u6709\u673a\u4f1a\u5229\u7528\u539f\u672c\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u7684\u53d8\u91cf\u3002
ascanbeta.HTTPParamPoll.sol =  Properly sanitize the user input for parameter delimiters
ascanbeta.HTTPParamPoll.alert.attack = HTTP Parameter Pollution
ascanbeta.HTTPParamPoll.extrainfo = http\://www.google.com/search?q\=http+parameter+pollution

ascanbeta.httponlysite.name = HTTP Only Site
ascanbeta.httponlysite.desc = The site is only served under HTTP and not HTTPS.
ascanbeta.httponlysite.soln = Configure your web or application server to use SSL (https).
ascanbeta.httponlysite.refs = https\://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html\n\
https\://letsencrypt.org/
ascanbeta.httponlysite.otherinfo = {0}\n\
ZAP attempted to connect via\: {1}
ascanbeta.httponlysite.otherinfo.connectionfail = Failed to connect.
ascanbeta.httponlysite.otherinfo.differenthosts = Different Hosts.
ascanbeta.httponlysite.otherinfo.redirectionlimit = Redirection limit reached.
ascanbeta.httponlysite.otherinfo.noredirection = There was no automatic redirection.
ascanbeta.httponlysite.otherinfo.nossl = Site has no SSL/TLS support.
ascanbeta.httponlysite.otherinfo.redirecttohttp = Redirected to HTTP.
ascanbeta.httponlysite.otherinfo.urinotencoded = Redirection URI couldn't be encoded.

ascanbeta.httpoxy.name = Httpoxy - Proxy Header Misuse
ascanbeta.httpoxy.desc = The server initiated a proxied request via the proxy specified in the HTTP Proxy header of the request.\n\
Httpoxy typically affects code running in CGI or CGI like environments.\n\
\n\
This may allow attackers to\:\n\
\n\
* Proxy the outgoing HTTP requests made by the web application\n\
\n\
* Direct the server to open outgoing connections to an address and port of their choosing or\n\
\n\
* Tie up server resources by forcing the vulnerable software to use a malicious proxy
ascanbeta.httpoxy.otherinfo = An outgoing message to {0} was proxied via the host and port that ZAP injected into the HTTP Proxy header.
ascanbeta.httpoxy.soln = The best immediate mitigation is to block Proxy request headers as early as possible, and before they hit your application.
ascanbeta.httpoxy.refs = https\://httpoxy.org/
ascanbeta.httpoxy.skipped = the Network extension is disabled

ascanbeta.httpsashttp.name = HTTPS Content Available via HTTP
ascanbeta.httpsashttp.desc = Content which was initially accessed via HTTPS (i.e.\: using SSL/TLS encryption) is also accessible via HTTP (without encryption). 
ascanbeta.httpsashttp.soln = Ensure that your web server, application server, load balancer, etc. is configured to only serve such content via HTTPS. Consider implementing HTTP Strict Transport Security.
ascanbeta.httpsashttp.refs = https\://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n\
https\://owasp.org/www-community/Security_Headers\n\
http\://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n\
http\://caniuse.com/stricttransportsecurity\n\
http\://tools.ietf.org/html/rfc6797
ascanbeta.httpsashttp.otherinfo=ZAP attempted to connect via\: {0}

ascanbeta.insecurehttpmethod.name = \u4e0d\u5b89\u5168\u7684HTTP\u65b9\u6cd5
ascanbeta.insecurehttpmethod.detailed.name = \u4e0d\u5b89\u5168\u7684HTTP\u65b9\u6cd5\uff1a{0}
ascanbeta.insecurehttpmethod.potentiallyinsecure = response code {0} for potentially insecure HTTP METHOD
ascanbeta.insecurehttpmethod.insecure = response code {0} for insecure HTTP METHOD
ascanbeta.insecurehttpmethod.desc = \u5728Web\u670d\u52a1\u5668\u4e0a\u4e3a\u6b64\u8d44\u6e90\u542f\u7528\u4e86\u4e0d\u5b89\u5168\u7684HTTP\u65b9\u6cd5[{0}]\u3002\u6839\u636eWeb\u670d\u52a1\u5668\u914d\u7f6e\u7684\u4e0d\u540c\uff0c\u4ee5\u53ca\u8d1f\u8d23\u670d\u52a1\u6b64\u8d44\u6e90\u7684\u5e95\u5c42\u5b9e\u73b0\u7684\u4e0d\u540c\uff0c\u8fd9\u6837\u505a\u6216\u8bb8\u53ef\u88ab\u5229\u7528\uff0c\u4e5f\u6216\u8bb8\u4e0d\u53ef\u88ab\u5229\u7528\u3002\u653b\u51fb\u8005\u53ef\u80fd\u5229\u7528\u201c\u8ddf\u8e2a\u548c\u8ffd\u8e2a\u201d\u65b9\u6cd5\u6765\u83b7\u5f97\u5e94\u7528\u7a0b\u5e8f\u7528\u6237\u7684\u6388\u6743\u4ee4\u724c/\u4f1a\u8bddcookie\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u5373\u4f7f\u4f1a\u8bddcookie\u5df2\u4f7f\u7528\u201cHttpOnly\u201d\u6807\u8bb0\u8fdb\u884c\u4fdd\u62a4\u3002\u653b\u51fb\u82e5\u8981\u6210\u529f\uff0c\u5e94\u7528\u7a0b\u5e8f\u7528\u6237\u901a\u5e38\u5fc5\u987b\u4f7f\u7528\u8f83\u65e7\u7684\u7f51\u9875\u6d4f\u89c8\u5668\uff0c\u6216\u4f7f\u7528\u5177\u6709\u540c\u6e90\u7b56\u7565\uff08SOP\uff09\u7ed5\u8fc7\u6f0f\u6d1e\u7684\u7f51\u9875\u6d4f\u89c8\u5668\u3002\u5ba2\u6237\u7aef\u53ef\u4ee5\u4f7f\u7528\u201cCONNECT\u201d\u65b9\u6cd5\u4e3a\u7b2c\u4e09\u65b9\u7f51\u7ad9\u6216\u670d\u52a1\u521b\u5efa\u4e00\u4e2aHTTP\u96a7\u9053\u3002
ascanbeta.insecurehttpmethod.trace.exploitable.desc = \u5411\u6b64\u8d44\u6e90\u542f\u7528\u4e0d\u5b89\u5168\u7684HTTP\u65b9\u6cd5[{0}]\uff0c\u8fd9\u662f\u53ef\u88ab\u5229\u7528\u7684\u3002\u653b\u51fb\u8005\u53ef\u80fd\u5229\u7528\u201c\u8ddf\u8e2a\u548c\u8ffd\u8e2a\u201d\u65b9\u6cd5\u6765\u83b7\u5f97\u5e94\u7528\u7a0b\u5e8f\u7528\u6237\u7684\u6388\u6743\u4ee4\u724c/\u4f1a\u8bddcookie\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u5373\u4f7f\u4f1a\u8bddcookie\u4f7f\u7528\u4e86\u201cHttpOnly\u201d\u6807\u8bb0\u8fdb\u884c\u4fdd\u62a4\u3002\u653b\u51fb\u82e5\u8981\u6210\u529f\uff0c\u5e94\u7528\u7a0b\u5e8f\u7528\u6237\u901a\u5e38\u5fc5\u987b\u4f7f\u7528\u8f83\u65e7\u7684\u7f51\u9875\u6d4f\u89c8\u5668\uff0c\u6216\u4f7f\u7528\u5177\u6709\u540c\u6e90\u7b56\u7565\uff08SOP\uff09\u7ed5\u8fc7\u6f0f\u6d1e\u7684\u7f51\u9875\u6d4f\u89c8\u5668\u3002
ascanbeta.insecurehttpmethod.trace.exploitable.extrainfo = \u5df2\u7ecf\u4e3a\u8fd9\u4e2a\u8bf7\u6c42\u53d1\u9001\u8ddf\u8e2a\u8bf7\u6c42\uff0c\u5e76\u5e26\u6709\u81ea\u5b9a\u4e49\u7684cookie\u503c[{0}]\u3002\u8fd9\u4e2acookie\u503c\u5728HTTP\u54cd\u5e94\u4e2d\u516c\u5f00\uff0c\u5e76\u5bf9\u8fd9\u4e2a\u6f0f\u6d1e\u8fdb\u884c\u4e86\u786e\u8ba4\u3002
ascanbeta.insecurehttpmethod.connect.exploitable.desc = \u5411\u6b64\u8d44\u6e90\u542f\u7528\u4e0d\u5b89\u5168\u7684HTTP\u65b9\u6cd5[{0}]\uff0c\u8fd9\u662f\u53ef\u88ab\u5229\u7528\u7684\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u901a\u8fc7\u4f7f\u7528\u8fd9\u79cdHTTP\u65b9\u6cd5\uff0c\u6709\u53ef\u80fd\u4e0e\u7b2c\u4e09\u65b9\u670d\u52a1\u5efa\u7acb\u8d77\u4e00\u4e2a\u96a7\u9053\u5f0f\u7684\u5957\u63a5\u5b57\u8fde\u63a5\u3002\u8fd9\u6837\u5c06\u5141\u8bb8\u6b64\u670d\u52a1\u4f5c\u4e3a\u533f\u540d\u5783\u573e\u90ae\u4ef6\u4f20\u9012\uff0c\u6216\u4f5c\u4e3aWeb\u4ee3\u7406\u6765\u7ed5\u8fc7\u7f51\u7edc\u9650\u5236\u3002\u800c\u4e14\uff0c\u8fd8\u5141\u8bb8\u4f7f\u7528\u6b64\u670d\u52a1\u6765\u5efa\u7acb\u4e00\u4e2a\u96a7\u9053\u5f0fVPN\uff0c\u6709\u6548\u5730\u6269\u5c55\u7f51\u7edc\u5468\u754c\uff0c\u5c06\u4e0d\u53d7\u4fe1\u4efb\u7684\u7ec4\u4ef6\u4e5f\u5305\u62ec\u8fdb\u6765\u3002 
ascanbeta.insecurehttpmethod.extrainfo = The OPTIONS method disclosed the following enabled HTTP methods for this resource\: [{0}]
ascanbeta.insecurehttpmethod.connect.exploitable.extrainfo = \u8fd9\u79cd\u8fde\u63a5\u65b9\u6cd5\u7528\u6765\u5efa\u7acb\u4e00\u4e2a\u901a\u8fc7web\u670d\u52a1\u5668\u8fde\u63a5\u5230[{0}]\u7684\u5957\u63a5\u5b57\u3002
ascanbeta.insecurehttpmethod.soln = \u505c\u7528\u4e0d\u5b89\u5168\u7684web\u670d\u52a1\u5668\u8ddf\u8e2a\u548c\u8fde\u63a5\u7b49\u65b9\u6cd5\uff0c\u5e76\u786e\u4fdd\u5b9e\u73b0\u57fa\u7840\u670d\u52a1\u65f6\u4e0d\u652f\u6301\u4e0d\u5b89\u5168\u7684\u65b9\u6cd5\u3002
ascanbeta.insecurehttpmethod.delete.exploitable.desc = This method is most commonly used in REST services, It is used to delete a resource.
ascanbeta.insecurehttpmethod.delete.exploitable.extrainfo = See the discussion on stackexchange\: https\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods, for understanding REST operations see http\://www.restapitutorial.com/lessons/httpmethods.html
ascanbeta.insecurehttpmethod.options.exploitable.desc = This is a diagnostic method and should never be turned on in production mode.
ascanbeta.insecurehttpmethod.options.exploitable.extrainfo = See the discussion on stackexchange\: https\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods
ascanbeta.insecurehttpmethod.put.exploitable.desc = This method was originally intended for file managemant operations. It is now most commonly used in REST services, PUT is most-often utilized for **update** capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource..
ascanbeta.insecurehttpmethod.put.exploitable.extrainfo = See the discussion on stackexchange\: https\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods, for understanding REST operations see http\://www.restapitutorial.com/lessons/httpmethods.html
ascanbeta.insecurehttpmethod.patch.exploitable.desc = This method is now most commonly used in REST services, PATCH is used for **modify** capabilities. The PATCH request only needs to contain the changes to the resource, not the complete resource.
ascanbeta.insecurehttpmethod.patch.exploitable.extrainfo = See the discussion on stackexchange\: https\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods, for understanding REST operations see http\://www.restapitutorial.com/lessons/httpmethods.html
ascanbeta.insecurehttpmethod.webdav.exploitable.desc = This HTTP method is a WEBDAV method\: {0}. If this server is not offering any WEBDAV services, these methods should not be available.
ascanbeta.insecurehttpmethod.webdav.exploitable.extrainfo = See the discussion on stackexchange\: https\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods

ascanbeta.integeroverflow.name = \u6574\u6570\u6ea2\u51fa\u9519\u8bef
ascanbeta.integeroverflow.desc = An integer overflow condition exists when an integer used in a compiled program extends beyond the range limits and has not been properly checked from the input stream.
ascanbeta.integeroverflow.soln = In order to prevent overflows and divide by 0 (zero) errors in the application, please rewrite the backend program, checking if the values of integers being processed are within the application's allowed range. This will require a recompilation of the backend executable.
ascanbeta.integeroverflow.refs = https\://en.wikipedia.org/wiki/Integer_overflow\n\
https\://cwe.mitre.org/data/definitions/190.html\n\
http\://projects.webappsec.org/w/page/13246946/Integer%20Overflows
ascanbeta.integeroverflow.error1 = \u53ef\u80fd\u53d1\u751f\u7684\u6574\u6570\u6ea2\u51fa\u7684\u60c5\u51b5\u3002\u5728\u8f93\u5165\u4e00\u957f\u4e32\u968f\u673a\u6574\u6570\u65f6\uff0c\u72b6\u6001\u4ee3\u7801\u53d1\u751f\u4e86\u53d8\u5316\u3002
ascanbeta.integeroverflow.error2 = \u53ef\u80fd\u53d1\u751f\u7684\u6574\u6570\u6ea2\u51fa\u7684\u60c5\u51b5\u3002\u5728\u8f93\u5165\u4e00\u957f\u4e32\u96f6\u65f6\uff0c\u72b6\u6001\u4ee3\u7801\u53d1\u751f\u4e86\u53d8\u5316\u3002
ascanbeta.integeroverflow.error3 = \u53ef\u80fd\u53d1\u751f\u7684\u6574\u6570\u6ea2\u51fa\u7684\u60c5\u51b5\u3002\u5728\u8f93\u5165\u4e00\u957f\u4e32\u76841\u65f6\uff0c\u72b6\u6001\u4ee3\u7801\u53d1\u751f\u4e86\u53d8\u5316\u3002
ascanbeta.integeroverflow.error4 = \u53ef\u80fd\u53d1\u751f\u7684\u6574\u6570\u6ea2\u51fa\u7684\u60c5\u51b5\u3002\u5728\u8f93\u5165\u4e00\u957f\u4e32\u76849\u65f6\uff0c\u72b6\u6001\u4ee3\u7801\u53d1\u751f\u4e86\u53d8\u5316\u3002

ascanbeta.log4shell.name=Log4Shell
ascanbeta.log4shell.skipped=no Active Scan OAST service is selected.

ascanbeta.log4shell.cve44228.name=Log4Shell (CVE-2021-44228)
ascanbeta.log4shell.cve44228.desc=Apache Log4j2 <\=2.14.1 JNDI features used in configuration, log messages, and parameters do not protect against attacker controlled LDAP and other JNDI related endpoints. An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled. From log4j 2.15.0, this behavior has been disabled by default.
ascanbeta.log4shell.cve44228.soln=Upgrade Log4j2 to version 2.17.1 or newer. In previous releases (>2.10) this behavior can be mitigated by setting system property "log4j2.formatMsgNoLookups" to "true" or by removing the JndiLookup class from the classpath (example\: zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class). Java 8u121 (see https\://www.oracle.com/java/technologies/javase/8u121-relnotes.html) protects against remote code execution by defaulting "com.sun.jndi.rmi.object.trustURLCodebase" and "com.sun.jndi.cosnaming.object.trustURLCodebase" to "false".
ascanbeta.log4shell.cve44228.refs=https\://www.cve.org/CVERecord?id\=CVE-2021-44228\n\
https\://www.lunasec.io/docs/blog/log4j-zero-day/\n\
https\://nvd.nist.gov/vuln/detail/CVE-2021-44228

ascanbeta.log4shell.cve45046.name=Log4Shell (CVE-2021-45046)
ascanbeta.log4shell.cve45046.desc=It was found that the fix to address CVE-2021-44228 in Apache Log4j 2.15.0 was incomplete in certain non-default configurations. This could allow attackers to craft malicious input data using a JNDI Lookup pattern resulting in an information leak and remote code execution in some environments.
ascanbeta.log4shell.cve45046.soln=Upgrade Log4j2 to version 2.17.1 or newer.
ascanbeta.log4shell.cve45046.refs=https\://www.cve.org/CVERecord?id\=CVE-2021-45046\n\
https\://www.lunasec.io/docs/blog/log4j-zero-day/\n\
https\://nvd.nist.gov/vuln/detail/CVE-2021-45046

ascanbeta.noanticsrftokens.name=\u7f3a\u5c11\u53cdCSRF\u4ee4\u724c
ascanbeta.noanticsrftokens.desc=\u5728\u63d0\u4ea4\u7684HTML\u8868\u5355\u4e2d\u4e2d\u627e\u4e0d\u5230\u53cdCSRF\u4ee4\u724c\u3002

ascanbeta.oobxss.name=Out of Band XSS
ascanbeta.oobxss.skipped=no Active Scan OAST service is selected.

ascanbeta.proxydisclosure.name=Proxy Disclosure
ascanbeta.proxydisclosure.desc={0} proxy server(s) were detected or fingerprinted. This information helps a potential attacker to determine \n\
 - A list of targets for an attack against the application.\n\
 - Potential vulnerabilities on the proxy servers that service the application.\n\
 - The presence or absence of any proxy-based components that might cause attacks against the application to be detected, prevented, or mitigated. 
ascanbeta.proxydisclosure.soln=Disable the 'TRACE' method on the proxy servers, as well as the origin web/application server.\n\
Disable the 'OPTIONS' method on the proxy servers, as well as the origin web/application server, if it is not required for other purposes, such as 'CORS' (Cross Origin Resource Sharing).\n\
Configure the web and application servers with custom error pages, to prevent 'fingerprintable' product-specific error pages being leaked to the user in the event of HTTP errors, such as 'TRACK' requests for non-existent pages.\n\
Configure all proxies, application servers, and web servers to prevent disclosure of the technology and version information in the 'Server' and 'X-Powered-By' HTTP response headers.\n\

ascanbeta.proxydisclosure.refs=https\://tools.ietf.org/html/rfc7231\#section-5.1.2
ascanbeta.proxydisclosure.attack=TRACE, OPTIONS methods with 'Max-Forwards' header. TRACK method.
ascanbeta.proxydisclosure.extrainfo.unknown=\u672a\u77e5
ascanbeta.proxydisclosure.extrainfo.proxyserver.header=Using the TRACE, OPTIONS, and TRACK methods, the following proxy servers have been identified between OWASP ZAP and the application/web server\: 
ascanbeta.proxydisclosure.extrainfo.proxyserver= - {0}
ascanbeta.proxydisclosure.extrainfo.webserver.header=The following web/application server has been identified\: 
ascanbeta.proxydisclosure.extrainfo.webserver= - {0}
ascanbeta.proxydisclosure.extrainfo.silentproxyserver.header=The following 'silent' proxy servers were identified. Due to their behaviour, it is not known at which point in the network topology these proxy servers reside\:
ascanbeta.proxydisclosure.extrainfo.silentproxyserver= - {0}
ascanbeta.proxydisclosure.extrainfo.traceenabled=The 'TRACE' method is enabled on one or more of the proxy servers, or on the origin server. This method leaks all information submitted from the web browser and proxies back to the user agent. This may facilitate 'Cross Site Tracing' attacks. 

ascanbeta.relativepathconfusion.name=Relative Path Confusion
ascanbeta.relativepathconfusion.desc=The web server is configured to serve responses to ambiguous URLs in a manner that is likely to lead to confusion about the correct "relative path" for the URL. Resources (CSS, images, etc.) are also specified in the page response using relative, rather than absolute URLs. In an attack, if the web browser parses the "cross-content" response in a permissive manner, or can be tricked into permissively parsing the "cross-content" response, using techniques such as framing, then the web browser may be fooled into interpreting HTML as CSS (or other content types), leading to an XSS vulnerability.
ascanbeta.relativepathconfusion.soln=Web servers and frameworks should be updated to be configured to not serve responses to ambiguous URLs in such a way that the relative path of such URLs could be mis-interpreted by components on either the client side, or server side.\n\
Within the application, the correct use of the "<base>" HTML tag in the HTTP response will unambiguously specify the base URL for all relative URLs in the document.\n\
Use the "Content-Type" HTTP response header to make it harder for the attacker to force the web browser to mis-interpret the content type of the response.\n\
Use the "X-Content-Type-Options\: nosniff" HTTP response header to prevent the web browser from "sniffing" the content type of the response.\n\
Use a modern DOCTYPE such as "<\!doctype html>" to prevent the page from being rendered in the web browser using "Quirks Mode", since this results in the content type being ignored by the web browser.\n\
Specify the "X-Frame-Options" HTTP response header to prevent Quirks Mode from being enabled in the web browser using framing attacks. 
ascanbeta.relativepathconfusion.refs=http\://www.thespanner.co.uk/2014/03/21/rpo/\n\
https\://hsivonen.fi/doctype/\n\
http\://www.w3schools.com/tags/tag_base.asp
ascanbeta.relativepathconfusion.extrainfo.morethanonebasetag=More than one <base> tag was specified in the HTML <head> tag to define the location for relative URLs, which is not valid.
ascanbeta.relativepathconfusion.extrainfo.nobasetag=No <base> tag was specified in the HTML <head> tag to define the location for relative URLs.
ascanbeta.relativepathconfusion.extrainfo.contenttypeenabled=A Content Type of "{0}" was specified. If the web browser is employing strict parsing rules, this will prevent cross-content attacks from succeeding. Quirks Mode in the web browser would disable strict parsing.  
ascanbeta.relativepathconfusion.extrainfo.quirksmodeenabledexplicitly=Quirks Mode is explicitly enabled via <meta http-equiv\="{0}", allowing the specified Content Type to be bypassed.
ascanbeta.relativepathconfusion.extrainfo.quirksmodeenabledimplicitly=Quirks Mode is implicitly enabled via the use of an old DOCTYPE with PUBLIC id "{0}", allowing the specified Content Type to be bypassed in some web browsers.
ascanbeta.relativepathconfusion.extrainfo.quirksmodeenabledimplicitlynodoctype=Quirks Mode is implicitly enabled via the absence of a DOCTYPE, allowing the specified Content Type to be bypassed.
ascanbeta.relativepathconfusion.extrainfo.nocontenttype=No Content Type was specified, so Quirks Mode is not required to exploit the vulnerability in the web browser. 
ascanbeta.relativepathconfusion.extrainfo.framingallowed=No X-Frame-Options header was specified, so the page can be framed, and this can be used to enable Quirks Mode, allowing the specified Content Type to be bypassed.

ascanbeta.sessionfixation.name=Session Fixation
ascanbeta.sessionfixation.desc=\u201c\u4f1a\u8bdd\u56fa\u5b9a\u201d\u653b\u51fb\u662f\u6709\u53ef\u80fd\u53d1\u751f\u7684\u3002\u5982\u679c\u8fd9\u4e2a\u95ee\u9898\u53d1\u751f\u5728\u4e00\u4e2a\u767b\u5f55URL\u4e0a\uff08\u5728\u767b\u5f55URL\u4e0a\u7528\u6237\u81ea\u5df1\u9a8c\u8bc1\u81ea\u5df1\u5728\u5e94\u7528\u7a0b\u5e8f\u4e0a\u7684\u8eab\u4efd\uff09\uff0c\u90a3\u4e48\u653b\u51fb\u8005\u5c31\u53ef\u80fd\u5c06\u8fd9\u4e2aURL\u8fde\u540c\u4e00\u4e2a\u56fa\u5b9a\u4f1a\u8bddID\u4e00\u540c\u53d1\u7ed9\u53d7\u5bb3\u8005\uff0c\u4ee5\u4fbf\u7a0d\u540e\u7528\u8fd9\u4e2a\u7ed9\u5b9a\u7684\u4f1a\u8bddID\u6765\u5047\u88c5\u53d7\u5bb3\u8005\u7684\u8eab\u4efd\u3002\u5982\u679c\u8fd9\u4e2a\u95ee\u9898\u53d1\u751f\u5728\u672a\u767b\u5f55\u9875\u9762\uff0c\u90a3\u4e48URL\u548c\u56fa\u5b9a\u4f1a\u8bddID\u5c31\u53ea\u80fd\u88ab\u653b\u51fb\u8005\u7528\u4e8e\u8ffd\u8e2a\u672a\u7ecf\u8eab\u4efd\u9a8c\u8bc1\u7684\u7528\u6237\u7684\u884c\u4e3a\u3002\u5982\u679c\u8fd9\u4e2a\u6f0f\u6d1e\u53d1\u751f\u5728cookie\u5b57\u6bb5\u6216\u8868\u5355\u5b57\u6bb5\uff08POST\u53c2\u6570\uff09\u800c\u4e0d\u662fURL\uff08GET\uff09\u53c2\u6570\u4e0a\uff0c\u90a3\u5c31\u53ef\u80fd\u9700\u8981\u66f4\u591a\u4e00\u4e9b\u5176\u4ed6\u7684\u6f0f\u6d1e\u624d\u80fd\u5728\u53d7\u5bb3\u8005\u7684\u6d4f\u89c8\u5668\u4e0a\u8bbe\u7f6ecookie\u5b57\u6bb5\uff0c\u6765\u4f7f\u5f97\u8fd9\u4e2a\u6f0f\u6d1e\u80fd\u88ab\u5229\u7528\u3002
ascanbeta.sessionfixation.soln=1\uff09\u5f3a\u5236\u6267\u884c\u4e25\u683c\u7684\u4f1a\u8bddID\uff0c\u4e14\u53ea\u5728\u5bf9\u5e94\u7528\u7a0b\u5e8f\u7684\u4f7f\u7528\u8005\u7684\u8eab\u4efd\u9a8c\u8bc1\u6210\u529f\u540e\u624d\u5206\u914d\u4f1a\u8bddID\uff0c\u901a\u8fc7\u8fd9\u4e9b\u65b9\u6cd5\u6765\u9632\u6b62\u653b\u51fb\u8005\u83b7\u5f97\u4f1a\u8bddID\u3002\n\
2\uff09\u65e0\u8bba\u4f1a\u8bdd\u662f\u5426\u5df2\u7ecf\u5b58\u5728\uff0c\u670d\u52a1\u5668\u90fd\u5e94\u5f53\u5728\u8eab\u4efd\u9a8c\u8bc1\u65f6\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4f1a\u8bddID\u3002\n\
3\uff09\u5c06\u4f1a\u8bddID\u7ed1\u5b9a\u5230\u4e00\u4e9b\u53ef\u8bc6\u522b\u7684\u5ba2\u6237\u7aef\u5c5e\u6027\u7ec4\u5408\uff0c\u5982IP\u5730\u5740\u3001SSL\u5ba2\u6237\u7aef\u8bc1\u4e66\u3002\n\
4\uff09\u8981\u9500\u6bc1\u4f1a\u8bdd\u65f6\uff0c\u5fc5\u987b\u5728\u670d\u52a1\u5668\u4e0a\u9500\u6bc1\uff0c\u540c\u65f6\u4e5f\u5728\u5ba2\u6237\u673a\u4e0a\u9500\u6bc1\u3002\n\
5\uff09\u5b9e\u65bd\u4e00\u79cd\u4f1a\u9500\u6bc1\u5ba2\u6237\u7aef\u4e4b\u524d\u7684\u6240\u6709\u4f1a\u8bdd\u7684\u6ce8\u9500\u673a\u5236\u3002\n\
6\uff09\u5b9e\u73b0\u65e0\u6761\u4ef6\u7684\u4f1a\u8bdd\u8d85\u65f6\u3002\n\
7\uff09\u5c06\u57fa\u4e8eURL\u7684\u4f1a\u8bddID\u5b9e\u73b0\u8f6c\u6362\u4e3a\u57fa\u4e8ecookie\u6216\u8868\u5355\u7684\u4f1a\u8bddID\u5b9e\u73b0\uff0c\u56e0\u4e3a\u540e\u8005\u8981\u88ab\u653b\u51fb\u8005\u5229\u7528\u7684\u8bdd\uff0c\u901a\u5e38\u9700\u8981\u66f4\u591a\u7684\u6f0f\u6d1e\u3002
ascanbeta.sessionfixation.refs=https\://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A2-Broken_Authentication\n\
https\://owasp.org/www-community/attacks/Session_fixation\n\
http\://www.acros.si/papers/session_fixation.pdf\n\
http\://www.technicalinfo.net/papers/WebBasedSessionManagement.html
ascanbeta.sessionfixation.alert.cookie.extrainfo=Cookie set in response when cookie field [{0}] is set to NULL\: [{1}]\n\
Cookie set in response with borrowed (valid) cookie value in request [{1}] \: [{2}]
ascanbeta.sessionfixation.alert.cookie.extrainfo.loginpage=The url on which the issue was discovered was flagged as a logon page.\n\
\n\
This issue should be manually validated by checking that the session token set on the logon page is still valid once logged in, and that the token can be used to directly access a page/resource which should require the user to be logged in.
ascanbeta.sessionfixation.alert.url.extrainfo=A likely session value has appeared in URLs in the HTML output when URL parameter/pseudo URL parameter [{0}] is set to NULL\: [{1}]\n\
When this ''borrowed'' session [{1}] is used in a subsequent request for this URL, a new session is not created.
ascanbeta.sessionfixation.alert.url.extrainfo.loginpage=\u88ab\u68c0\u51fa\u6709\u6b64\u95ee\u9898\u7684URL\u88ab\u6807\u8bb0\u4e3a\u767b\u5f55\u9875\u3002
ascanbeta.sessionfixation.alert.attack={0} field\: [{1}]
#Exposed Session Id messages
ascanbeta.sessionidexposedinurl.name=Exposed Session ID
ascanbeta.sessionidexposedinurl.desc=URL\u4e2d\u66b4\u9732\u4e86\u4e00\u4e2a\u4f1a\u8bddID\u3002\u4e00\u540d\u65b0\u624b\u7528\u6237\u53ef\u80fd\u4f1a\u901a\u8fc7\u5206\u4eab\u8fd9\u6837\u7684\u4e00\u4e2a\u7f51\u7ad9URL\uff08\u5305\u542b\u4f1a\u8bddID\uff09\uff0c\u800c\u65e0\u610f\u4e2d\u628a\u81ea\u5df1\u7684\u6570\u636e\u7684\u8bbf\u95ee\u6743\u6388\u6743\u4e86\u51fa\u53bb\uff0c\u5f71\u54cd\u4e86\u6570\u636e\u7684\u673a\u5bc6\u6027\u3001\u5b8c\u6574\u6027\u548c\u53ef\u7528\u6027\u3002\u542b\u6709\u4f1a\u8bdd\u6807\u8bc6\u7b26\u7684URL\u4e5f\u4f1a\u5728\u7f51\u9875\u6d4f\u89c8\u5668\u4e66\u7b7e\u3001Web\u670d\u52a1\u5668\u65e5\u5fd7\u6587\u4ef6\u548c\u4ee3\u7406\u670d\u52a1\u5668\u65e5\u5fd7\u6587\u4ef6\u4e2d\u51fa\u73b0\u3002 
ascanbeta.sessionidexposedinurl.soln=\u4f7f\u7528\u4e00\u79cd\u66f4\u4e3a\u5b89\u5168\u7684\u4f1a\u8bdd\u7ba1\u7406\u5b9e\u73b0\u65b9\u6cd5\uff0c\u4f8b\u5982\u4f7f\u7528\u4f1a\u8bddcookie\u8fd9\u79cd\u5b9e\u73b0\u65b9\u6cd5\uff0c\u5c31\u4e0d\u90a3\u4e48\u5bb9\u6613\u5728\u65e0\u610f\u95f4\u5206\u4eab\u4e86\u4f1a\u8bdd\u6807\u8bc6\u7b26\uff0c\u4e5f\u4e0d\u4f1a\u5728\u670d\u52a1\u5668\u65e5\u5fd7\u6587\u4ef6\u6216\u7f51\u9875\u6d4f\u89c8\u5668\u4e66\u7b7e\u91cc\u51fa\u73b0\u4f1a\u8bdd\u6807\u8bc6\u7b26\u3002
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidexposedinurl.refs=https\://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A2-Broken_Authentication
ascanbeta.sessionidexposedinurl.alert.extrainfo={0}\u5b57\u6bb5[{1}]\u542b\u6709\u4e00\u4e2a\u516c\u5f00\u7684\u4f1a\u8bdd\u6807\u8bc6\u7b26[{2}]
ascanbeta.sessionidexposedinurl.alert.extrainfo.loginpage=\u88ab\u68c0\u51fa\u6709\u6b64\u95ee\u9898\u7684URL\u88ab\u6807\u8bb0\u4e3a\u767b\u5f55\u9875\u3002
ascanbeta.sessionidexposedinurl.alert.attack={0}\u5b57\u6bb5\uff1a[{1}]
#Session Id Cookie not sent securely
ascanbeta.sessionidsentinsecurely.name=\u6240\u4f20\u8f93\u7684\u4f1a\u8bddID\u4e0d\u5b89\u5168
ascanbeta.sessionidsentinsecurely.desc=\u6709\u53ef\u80fd\u7ecf\u7531\u4e0d\u5b89\u5168\u7684\u673a\u5236\u5c06\u4f1a\u8bddID\u53d1\u9001\u51fa\u53bb\u3002\u5728\u8bf7\u6c42\u4e2d\u53d1\u9001cookie\u65f6\uff0c\u82e5\u4f7f\u7528\u7684\u662fHTTP\u800c\u4e0d\u662fHTTPS\uff0c\u5c31\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\u3002\u5f53\u670d\u52a1\u5668\u6839\u636e\u54cd\u5e94\u53d1\u9001cookie\u65f6\uff08\u5728\u901a\u8fc7\u5c06\u547d\u540d\u53c2\u6570\u5b57\u6bb5\u8bbe\u7f6e\u4e3aNULL\u6765\u4fee\u6539URL\u65f6\uff09\uff0c\u6ca1\u6709\u8bbe\u7f6e\u201c\u5b89\u5168\u201d\u6807\u5fd7\uff0c\u5c31\u4f1a\u5141\u8bb8cookie\u5728\u8fc7\u540e\u901a\u8fc7HTTP\u800c\u4e0d\u662fHTTPS\u6765\u53d1\u9001\u51fa\u53bb\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u7f51\u7edc\u8def\u5f84\u4e0a\u7684\u4e00\u540d\u88ab\u52a8\u7a83\u542c\u8005\u5c31\u6709\u53ef\u80fd\u83b7\u53d6\u8bbf\u95ee\u53d7\u5bb3\u8005\u7684\u4f1a\u8bdd\u7684\u5b8c\u5168\u8bbf\u95ee\u6743\u9650\u3002  
ascanbeta.sessionidsentinsecurely.soln=1) Use the latest available version of SSL/TLS (for HTTPS) for all pages where a session id is communicated between the browser and the web server.\n\
2) Do not allow the communication to be forced down to the unencrypted HTTP protocol.\n\
3) Use the 'secure' flag when setting a cookie containing a session id, to prevent its subsequent transmission by an insecure mechanism.\n\
4) Forward non-secure HTTP page requests to the secure HTTPS equivalent page.  
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidsentinsecurely.refs=https\://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A2-Broken_Authentication
ascanbeta.sessionidsentinsecurely.alert.extrainfo=\u53ef\u80fd\u901a\u8fc7\u4e0d\u5b89\u5168\u7684\u673a\u5236\u6765\u53d1\u9001\u4f1a\u8bdd\u6807\u8bc6\u7b26{0}\u5b57\u6bb5[{1}]\u3001\u503c[{2}]\u3002  
ascanbeta.sessionidsentinsecurely.alert.extrainfo.secureflagnotset=\u5728\u7531\u670d\u52a1\u5668\u63d0\u4f9b\u7684\u4f1a\u8bddcookie\u4e2d\u6ca1\u6709\u8bbe\u7f6e\u201c\u5b89\u5168\u201d\u6807\u5fd7\u3002
ascanbeta.sessionidsentinsecurely.alert.extrainfo.loginpage=\u88ab\u68c0\u51fa\u6709\u6b64\u95ee\u9898\u7684URL\u5df2\u6807\u8bb0\u4e3a\u767b\u5f55\u9875\u9762\u3002
ascanbeta.sessionidsentinsecurely.alert.attack={0} field\: [{1}]
#Session Id Cookie accessible by JavaScript
ascanbeta.sessionidaccessiblebyjavascript.name=Session ID Cookie Accessible to JavaScript
ascanbeta.sessionidaccessiblebyjavascript.desc=\u670d\u52a1\u5668\u53d1\u9001\u7684\u4f1a\u8bddID cookie\uff08\u901a\u8fc7\u5c06\u547d\u540d\u53c2\u6570\u5b57\u6bb5\u8bbe\u7f6e\u4e3aNULL\u6765\u4fee\u6539URL\u65f6\uff09\u53ef\u80fd\u88ab\u5ba2\u6237\u7aef\u4e0a\u7684JavaScript\u8bbf\u95ee\u3002\u82e5\u7ed3\u5408\u53e6\u4e00\u4e2a\u6f0f\u6d1e\uff0c\u8fd9\u5c06\u6709\u673a\u4f1a\u9020\u6210\u4f1a\u8bdd\u88ab\u52ab\u6301\u3002  
ascanbeta.sessionidaccessiblebyjavascript.soln=1) Use the 'httponly' flag when setting a cookie containing a session id, to prevent it from being accessed by JavaScript in the web browser.  
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidaccessiblebyjavascript.refs=
ascanbeta.sessionidaccessiblebyjavascript.alert.extrainfo=\u53ef\u4ee5\u4f7f\u7528\u7f51\u9875\u6d4f\u89c8\u5668\u7684JavaScript\u6765\u8bbf\u95ee\u4f1a\u8bdd\u6807\u8bc6\u7b26{0}\u5b57\u6bb5[{1}]\u3001\u503c[{2}]
ascanbeta.sessionidaccessiblebyjavascript.alert.extrainfo.loginpage=\u88ab\u68c0\u51fa\u6709\u6b64\u95ee\u9898\u7684URL\u88ab\u6807\u8bb0\u4e3a\u767b\u5f55\u9875\u3002
ascanbeta.sessionidaccessiblebyjavascript.alert.attack={0} field\: [{1}]
#Session Id Cookie Expiry
ascanbeta.sessionidexpiry.name=Session ID Expiry Time/Max-Age is Excessive
ascanbeta.sessionidexpiry.desc=\u670d\u52a1\u5668\u53d1\u9001\u7684\u4f1a\u8bddID cookie\uff08\u901a\u8fc7\u5c06\u547d\u540d\u53c2\u6570\u5b57\u6bb5\u8bbe\u7f6e\u4e3aNULL\u6765\u4fee\u6539URL\u65f6\uff09\u88ab\u8bbe\u7f6e\u4e3a\u5728\u4e00\u6bb5\u8fc7\u957f\u65f6\u95f4\u5185\u6709\u6548\u3002\u5982\u679c\u7528\u6237\u5fd8\u8bb0\u6ce8\u9500\uff0c\u6216\u6ce8\u9500\u529f\u80fd\u6ca1\u80fd\u6b63\u786e\u5730\u9500\u6bc1\u4f1a\u8bdd\uff0c\u53c8\u6216\u8005\u4f1a\u8bddID\u901a\u8fc7\u67d0\u4e9b\u5176\u4ed6\u65b9\u6cd5\u6cc4\u9732\uff0c\u90a3\u4e48\u653b\u51fb\u8005\u5c31\u53ef\u80fd\u5229\u7528\u8fd9\u4e00\u70b9\u3002     
ascanbeta.sessionidexpiry.soln=1\uff09\u5728\u8bbe\u7f6e\u5305\u542b\u4f1a\u8bddID\u7684cookie\u65f6\uff0c\u4f7f\u7528\u201cExpire\u201d\u6216\u201cMax-Age\u201dcookie\u6307\u4ee4\uff0c\u6765\u907f\u514d\u5b83\u5728\u8fc7\u957f\u65f6\u95f4\u5185\u53ef\u7528\u3002\n\
2\uff09\u786e\u4fdd\u6ce8\u9500\u529f\u80fd\u5b58\u5728\uff0c\u5e76\u786e\u4fdd\u5b83\u80fd\u6b63\u786e\u5730\u9500\u6bc1\u4f1a\u8bdd\u3002\n\
3\uff09\u4f7f\u7528\u5176\u4ed6\u9884\u9632\u63aa\u65bd\u6765\u786e\u4fdd\u5373\u4f7f\u4f1a\u8bddID\u88ab\u6cc4\u9732\uff0c\u4e5f\u4e0d\u80fd\u88ab\u5229\u7528\u3002
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidexpiry.refs=
ascanbeta.sessionidexpiry.alert.extrainfo=\u53ef\u4ee5\u8bbf\u95ee\u4f1a\u8bdd\u6807\u8bc6\u7b26{0}\u5b57\u6bb5[{1}]\u3001\u503c[{2}]\uff0c\u76f4\u5230[{3}]\u65f6\uff08\u56e0\u4e3a\u5728{4}\u6536\u5230cookie\uff09\uff0c\u9664\u975e\u4f1a\u8bdd\u88ab\u9500\u6bc1\u3002
ascanbeta.sessionidexpiry.alert.extrainfo.loginpage=\u88ab\u68c0\u51fa\u6709\u6b64\u95ee\u9898\u7684URL\u88ab\u6807\u8bb0\u4e3a\u767b\u5f55\u9875\u3002
ascanbeta.sessionidexpiry.alert.attack={0} \u5b57\u6bb5\uff1a[{1}]
ascanbeta.sessionidexpiry.browserclose=browser close
ascanbeta.sessionidexpiry.timemorethanoneweek=\u8d85\u8fc71\u661f\u671f
ascanbeta.sessionidexpiry.timemorethanoneday=\u8d85\u8fc71\u5929
ascanbeta.sessionidexpiry.timemorethanonehour=\u8d85\u8fc71\u5c0f\u65f6
ascanbeta.sessionidexpiry.timelessthanonehour=\u5c0f\u4e8e1\u5c0f\u65f6
ascanbeta.sessionidexpiry.timeexpired=Expired

ascanbeta.shellshock.name = Remote Code Execution - Shell Shock
ascanbeta.shellshock.desc = The server is running a version of the Bash shell that allows remote attackers to execute arbitrary code 
ascanbeta.shellshock.extrainfo = From CVE-2014-6271\: GNU Bash through 4.3 processes trailing strings after function definitions in the values of environment variables, which allows remote attackers to execute arbitrary code via a crafted environment, as demonstrated by vectors involving the ForceCommand feature in OpenSSH sshd, the mod_cgi and mod_cgid modules in the Apache HTTP Server, scripts executed by unspecified DHCP clients, and other situations in which setting the environment occurs across a privilege boundary from Bash execution, aka "ShellShock." NOTE\: the original fix for this issue was incorrect; CVE-2014-7169 has been assigned to cover the vulnerability that is still present after the incorrect fix.
ascanbeta.shellshock.soln = Update Bash on the server to the latest version
ascanbeta.shellshock.ref = http\://web.nvd.nist.gov/view/vuln/detail?vulnId\=CVE-2014-6271\n\
http\://www.troyhunt.com/2014/09/everything-you-need-to-know-about.html
ascanbeta.shellshock.timingbased.evidence = Using the attack, a delay of [{0}] milliseconds was induced and detected

ascanbeta.sourcecodedisclosure.desc = \u5f53\u524d\u9875\u9762\u7684\u6765\u6e90\u4ee3\u7801\u88abWeb\u670d\u52a1\u5668\u62ab\u9732
ascanbeta.sourcecodedisclosure.lfibased.name = Source Code Disclosure - File Inclusion
ascanbeta.sourcecodedisclosure.lfibased.soln = Ensure that arbitrary files specified by the user are not included in the output
ascanbeta.sourcecodedisclosure.lfibased.extrainfo = The output for the source code filename [{0}] differs sufficiently from that of the random parameter [{1}], at [{2}%], compared to a threshold of [{3}%]
ascanbeta.sourcecodedisclosure.lfibased.evidence=

ascanbeta.sourcecodedisclosure.gitbased.name = Source Code Disclosure - Git 
ascanbeta.sourcecodedisclosure.gitbased.soln = Ensure that Git metadata files are not deployed to the web server or application server
ascanbeta.sourcecodedisclosure.gitbased.extrainfo=
ascanbeta.sourcecodedisclosure.gitbased.evidence = The source code for [{0}] was extracted using [{1}]


ascanbeta.sourcecodedisclosurecve-2012-1823.name = Source Code Disclosure - CVE-2012-1823
ascanbeta.sourcecodedisclosurecve-2012-1823.desc = Some PHP versions, when configured to run using CGI, do not correctly handle query strings that lack an unescaped "\=" character, enabling PHP source code disclosure, and arbitrary code execution. In this case, the contents of the PHP file were served directly to the web browser. This output will typically contain PHP, although it may also contain straight HTML.
ascanbeta.sourcecodedisclosurecve-2012-1823.soln = \u5347\u7ea7\u5230PHP\u6700\u65b0\u7684\u7a33\u5b9a\u7248\u672c\uff0c\u6216\u4f7f\u7528Apache Web\u670d\u52a1\u5668\u548cmod_rewrite\u6a21\u5757\uff0c\u7528\u201cRewriteCond\u201d\u548c\u201cRewriteRule\u201d\u6307\u4ee4\u6765\u8fc7\u6ee4\u6389\u6076\u610f\u8bf7\u6c42\u3002

ascanbeta.sourcecodedisclosure.svnbased.name = Source Code Disclosure - SVN
ascanbeta.sourcecodedisclosure.svnbased.soln = Ensure that SVN metadata files are not deployed to the web server or application server
ascanbeta.sourcecodedisclosure.svnbased.extrainfo = The source code for [{0}] was found at [{1}]

ascanbeta.spring4shell.name=Spring4Shell
ascanbeta.spring4shell.desc=The application appears to be vulnerable to CVE-2022-22965 (otherwise known as Spring4Shell) - remote code execution (RCE) via data binding.
ascanbeta.spring4shell.soln=Upgrade Spring Framework to versions 5.3.18, 5.2.20, or newer.
ascanbeta.spring4shell.refs=https\://www.rapid7.com/blog/post/2022/03/30/spring4shell-zero-day-vulnerability-in-spring-framework/\n\
https\://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement\#vulnerability\n\
https\://tanzu.vmware.com/security/cve-2022-22965

ascanbeta.springactuator.name=Spring Actuator Information Leak
ascanbeta.springactuator.desc=Spring Actuator for Health is enabled and may reveal sensitive information about this application. Spring Actuators can be used for real monitoring purposes, but should be used with caution as to not expose too much information about the application or the infrastructure running it.
ascanbeta.springactuator.soln=Disable the Health Actuators and other actuators, or restrict them to administrative users.
ascanbeta.springactuator.refs=https\://docs.spring.io/spring-boot/docs/current/actuator-api/htmlsingle/\#overview

ascanbeta.sstiblind.name = Server Side Template Injection (Blind)
ascanbeta.sstiblind.desc = When the user input is inserted in the template instead of being used as argument in rendering is evaluated by the template engine. Depending on the template engine it can lead to remote code execution.
ascanbeta.sstiblind.soln = Instead of inserting the user input in the template, use it as rendering argument.
ascanbeta.sstiblind.refs = https\://portswigger.net/blog/server-side-template-injection
ascanbeta.sstiblind.alert.recvdcallback.otherinfo = Received callback from the server.

ascanbeta.ssti.name = Server Side Template Injection
ascanbeta.ssti.desc = When the user input is inserted in the template instead of being used as argument in rendering is evaluated by the template engine. Depending on the template engine it can lead to remote code execution.
ascanbeta.ssti.soln = Instead of inserting the user input in the template, use it as rendering argument.
ascanbeta.ssti.refs = https\://portswigger.net/blog/server-side-template-injection
ascanbeta.ssti.alert.otherinfo = Proof found at [{0}] \n\
content\:\n\
[{1}]

ascanbeta.usernameenumeration.name=Possible Username Enumeration
ascanbeta.usernameenumeration.desc=It may be possible to enumerate usernames, based on differing HTTP responses when valid and invalid usernames are provided. This would greatly increase the probability of success of password brute-forcing attacks against the system. Note that false positives may sometimes be minimised by increasing the 'Attack Strength' Option in ZAP.  Please manually check the 'Other Info' field to confirm if this is actually an issue. 
ascanbeta.usernameenumeration.soln=Do not divulge details of whether a username is valid or invalid. In particular, for unsuccessful login attempts, do not differentiate between an invalid user and an invalid password in the error message, page title, page contents, HTTP headers, or redirection logic.
ascanbeta.usernameenumeration.refs=https\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/03-Identity_Management_Testing/04-Testing_for_Account_Enumeration_and_Guessable_User_Account.html\n\
http\://sebastian-schinzel.de/_download/ifip-sec2011.pdf
ascanbeta.usernameenumeration.alert.extrainfo=[{0}] parameter [{1}] leaks information on whether a user exists. The [{5}] differences in output, for the valid original username value [{2}], and invalid username value [{3}] are\:\n\
[{4}]
ascanbeta.usernameenumeration.alert.attack=Manipulate [{0}] field\: [{1}] and monitor the output 

ascanbeta.elinjection.name = \u8868\u8fbe\u5f0f\u8bed\u8a00\u7c7b\u6ce8\u5165\u653b\u51fb
ascanbeta.elinjection.desc = \u8fd9\u4e2a\u8f6f\u4ef6\u53ef\u4ee5\u4f7f\u7528\u4fe1\u606f\u6d41\u4e0a\u6e38\u7ec4\u4ef6\u4f5c\u4e3a\u8f93\u5165\u6784\u9020JSP\u8868\u8fbe\u5f0f\u8bed\u8a00\u7c7b\uff08EL\uff09\u3002\u4f46\u662f\u5728\u6267\u884c\u4e4b\u524d\u4e0d\u80fd\u9664\u53bb\u53ef\u4ee5\u66f4\u6539EL\u8868\u8fbe\u7684\u7279\u6b8a\u5143\u7d20\u3002\u5728Spring3.0.5\u53ca\u5176\u66f4\u65e9\u7684\u67d0\u4e9b\u7248\u672c\uff0c\u7531\u4e8eEL\u6807\u8bb0\u7b26\u4f1a\u88ab\u89e3\u91ca\u4e24\u6b21\uff0c\u4e00\u4e9b\u7f51\u7edc\u7a0b\u5e8f\u5f88\u5bb9\u6613\u53d7\u5230EL\u6ce8\u5165\u653b\u51fb\uff08\u8be6\u89c1CVE-2011-2730\uff09\u3002\u4f46\u662fSpring\u540e\u7eed\u7248\u672c\u7531\u4e8e\u914d\u7f6e\u7684\u539f\u56e0\u4ecd\u53ef\u80fd\u6709\u540c\u6837\u7684\u6f0f\u6d1e\u3002
ascanbeta.elinjection.soln = \u4e0d\u53ef\u4fe1\u8f93\u5165\u6570\u636e\u6709\u6548\u6027\u68c0\u9a8c\u548c\u4fdd\u8bc1\u8f93\u51fa\u7ed3\u679c\u6b63\u786e\u7f16\u7801\u7684\u6700\u597d\u65f6\u673a\u662f\u5f53\u6570\u636e\u5230\u8fbeEL\u5c42\u7684\u65f6\u5019\u3002\u8fd9\u662f\u56e0\u4e3a\u6b64\u65f6\u5728\u7528\u6237\u63d0\u4ea4\u7684\u5185\u5bb9\u5728\u88ab\u5904\u7406\u4e4b\u524d\u6ca1\u6709\u89e3\u91ca\u5668\u9700\u8981\u5904\u7406\u7684\u5143\u5b57\u7b26\u3002\u6700\u660e\u663e\u7684EL\u8868\u8fbe\u5f0f\u5305\u62ec ${ \u548c\#{\uff0c \u4f46\u8fd9\u5199\u8868\u8fbe\u5f0f\u53ef\u80fd\u4f1a\u88ab\u7f16\u7801\u5904\u7406\u6389\u6216\u662f\u88ab\u5206\u89e3\u5904\u7406\u3002
ascanbeta.elinjection.refs = https\://owasp.org/www-community/vulnerabilities/Expression_Language_Injection\n\
http\://cwe.mitre.org/data/definitions/917.html

ascanbeta.xpathinjection.name=XPath Injection

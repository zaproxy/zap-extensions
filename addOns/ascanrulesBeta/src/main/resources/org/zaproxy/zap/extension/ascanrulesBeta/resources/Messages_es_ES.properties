ascanbeta.desc = Reglas de escaneo activo en estado Beta
ascanbeta.name = Reglas de Escaneo Activo - beta

ascanbeta.backupfiledisclosure.name = Divulgaci\u00f3n del archivo de respaldo
ascanbeta.backupfiledisclosure.desc = Una copia de seguridad del archivo fue divulgada por el servidor web
ascanbeta.backupfiledisclosure.soln = No editar archivos in-situ en el servidor web y aseg\u00farese de que se eliminan archivos no necesarios (incluyendo archivos ocultos) desde el servidor web.
ascanbeta.backupfiledisclosure.evidence = Una copia de [{0}] est\u00e1 disponible en [{1}]
ascanbeta.backupfiledisclosure.refs = https\://cwe.mitre.org/data/definitions/530.html\n\
https\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/04-Review_Old_Backup_and_Unreferenced_Files_for_Sensitive_Information.html

ascanbeta.cookieslack.name = Detector de Cookie Slack
ascanbeta.cookieslack.desc = Solicitudes GET repetidas\: crean una cookie diferente, seguida de una solicitud normal con todas las cookies para estabilizar la sesi\u00f3n, compara las respuestas con el GET original. Esto puede revelar \u00e1reas donde la autenticaci\u00f3n o los atributos basados en cookies no se apliquen.
ascanbeta.cookieslack.otherinfo.intro = Las cookies que no tienen los efectos deseados pueden revelar fallos en la l\u00f3gica de la aplicaci\u00f3n. En el peor de los casos, puede mostrar d\u00f3nde no se aplica la autenticaci\u00f3n a trav\u00e9s de tokens de cookies.
ascanbeta.cookieslack.session.warning = NOTA\: Debido a su nombre, esta cookie puede ser importante, pero usarla parece no tener efecto\: [{0}] \n\

ascanbeta.cookieslack.affect.response.yes = Estas cookies influyen en la respuesta\: 
ascanbeta.cookieslack.affect.response.no = Estas cookies NO influyen en la respuesta\: 
ascanbeta.cookieslack.session.destroyed = La eliminaci\u00f3n de esta cookie parece haber invalidado la sesi\u00f3n\: [{0}] Una solicitud de seguimiento con todas las cookies originales todav\u00eda tuvo una respuesta diferente a la solicitud original. \n\

ascanbeta.cookieslack.separator = ,
ascanbeta.cookieslack.endline = \n\


ascanbeta.cors.info.name=CORS Header
ascanbeta.cors.info.desc=El intercambio de recursos de origen cruzado (CORS) es un mecanismo basado en el encabezado HTTP que permite que un servidor indique cualquier otro origen (dominio, esquema o puerto) que el suyo propio desde el cual un navegador deber\u00eda permitir la carga de recursos. Relaja la Pol\u00edtica del Mismo Origen (SOP).
ascanbeta.cors.vuln.name=Configuraci\u00f3n incorrecta de CORS
ascanbeta.cors.vuln.desc=Esta configuraci\u00f3n incorrecta de CORS podr\u00eda permitir que un atacante realice consultas AJAX al sitio web vulnerable desde una p\u00e1gina maliciosa cargada por el user agent de la v\u00edctima.\n\
Para realizar consultas AJAX autenticadas, el servidor debe especificar el encabezado "Access-Control-Allow-Credentials\: true" y el encabezado "Access-Control-Allow-Origin" debe establecerse en nulo o el dominio de la p\u00e1gina maliciosa. Incluso si esta configuraci\u00f3n incorrecta no permite solicitudes AJAX autenticadas, a\u00fan se puede acceder a contenido confidencial no autenticado (por ejemplo, sitios web de intranet).\n\
Una p\u00e1gina maliciosa puede pertenecer a un sitio web malicioso, pero tambi\u00e9n a un sitio web de confianza, pero con fallos (por ejemplo, XSS, compatibilidad con HTTP sin TLS que permite la inyecci\u00f3n de c\u00f3digo a trav\u00e9s de MITM, etc.).
ascanbeta.cors.soln=Si un recurso web contiene informaci\u00f3n confidencial, el origen debe especificarse correctamente en el encabezado Access-Control-Allow-Origin. Solo los sitios web de confianza que necesiten este recurso deben especificarse en el encabezado, con el protocolo m\u00e1s seguro posible.
ascanbeta.cors.refs=https\://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\n\
https\://portswigger.net/web-security/cors

ascanbeta.crossdomain.name = Desconfiguraci\u00f3n de Dominio cruzado
#the refs cannot be customised for each sub-category (Adobe, Silverlight, etc.)
ascanbeta.crossdomain.refs = http\://www.adobe.com/devnet/articles/crossdomain_policy_file_spec.html\n\
http\://www.adobe.com/devnet-docs/acrobatetk/tools/AppSec/CrossDomain_PolicyFile_Specification.pdf\n\
http\://msdn.microsoft.com/en-US/library/cc197955%28v\=vs.95%29.aspx\n\
http\://msdn.microsoft.com/en-us/library/cc838250%28v\=vs.95%29.aspx
ascanbeta.crossdomain.adobe.read.name = Desconfiguraci\u00f3n de Dominio cruzado - Adobe - Leer
ascanbeta.crossdomain.adobe.send.name = Desconfiguraci\u00f3n de Dominio Cruzado - Adobe - Enviar
ascanbeta.crossdomain.adobe.desc = La falsificaci\u00f3n de solicitud entre sitios basada en Flash / Silverlight puede ser posible debido a una configuraci\u00f3n incorrecta en el servidor web. 
ascanbeta.crossdomain.adobe.read.soln = Configure el archivo crossdomain.xml para restringir la lista de dominios que pueden realizar solicitudes de lectura entre dominios a este servidor web, usando <allow-access-from domain\="example.com">. S\u00f3lo debe conceder acceso a "*" (todos los dominios) si est\u00e1 seguro de que este servicio no hospeda ning\u00fan dato controlado, personalizado o privado.
ascanbeta.crossdomain.adobe.read.extrainfo = El servidor web permite las solicitudes de lectura de datos entre dominios maliciosos procedentes de componentes Flash/Silverlight servidos desde cualquier dominio de terceros, hacia este dominio. Si el nombre de usuario de la v\u00edctima ha iniciado sesi\u00f3n en este servicio, las solicitudes de lectura maliciosa se procesan utilizando los privilegios de la v\u00edctima y pueden resultar en que los datos de este servicio sean comprometidos por un sitio web de terceros no autorizados, a trav\u00e9s del navegador web de la v\u00edctima. Esto es muy probable que sea un problema si se est\u00e1 utilizando una implementaci\u00f3n de sesi\u00f3n que se basa en cookies. 
ascanbeta.crossdomain.adobe.send.soln = Configure el archivo crossdomain.xml para restringir la lista de dominios que pueden realizar solicitudes de env\u00edo entre dominios (pero no necesariamente ser le\u00eddas) a este servidor web, utilizando <allow-http-request-headers-from domain\="example.com" headers\="Authorization,X-Blahh">. S\u00f3lo debe conceder acceso a "*" (todos los dominios) si est\u00e1 seguro de que este servicio no es vulnerable a ataques de falsificaci\u00f3n de solicitudes de sitios cruzados (CSRF).
ascanbeta.crossdomain.adobe.send.extrainfo = El servidor web permite que los datos maliciosos entre dominios env\u00eden (pero no necesariamente se lean) solicitudes procedentes de componentes Flash/Silverlight servidos desde cualquier dominio de terceras partes, a este dominio. Si el nombre de usuario de la v\u00edctima ha iniciado sesi\u00f3n en este servicio, las solicitudes de env\u00edo maliciosos se procesan utilizando los privilegios de la v\u00edctima y pueden resultar en ataques de tipo falsificaci\u00f3n (CSRF) de solicitud de sitio cruzado, a trav\u00e9s del explorador web de la v\u00edctima. Esto es muy posible que sea un problema si se est\u00e1 utilizando una implementaci\u00f3n de sesi\u00f3n basada en cookies.
ascanbeta.crossdomain.silverlight.name = Desconfiguraci\u00f3n de Dominio Cruzado - LuzPlateada
ascanbeta.crossdomain.silverlight.desc = Puede ser posible la falsificaci\u00f3n de solicitudes entre sitios basada en Silverlight, debido a una configuraci\u00f3n err\u00f3nea en el servidor web.
ascanbeta.crossdomain.silverlight.soln = Configure el archivo clientaccesspolicy.xml para restringir la lista de dominios que pueden realizar solicitudes entre dominios a este servidor web, mediante <domain uri\="https\://example.com"/>. S\u00f3lo debe conceder acceso a "*" (todos los dominios) si est\u00e1 seguro de que este servicio no hospeda ning\u00fan dato controlado, personalizado o privado.
ascanbeta.crossdomain.silverlight.extrainfo = Un servidor web con los componentes de Silverlight, servidos desde cualquier dominio de terceros, a este dominio, le permite solicitudes maliciosas de dominios cruzados. Si la v\u00edctima est\u00e1 conectada a este servicio, las solicitudes maliciosas se har\u00e1n usando los privilegios de la v\u00edctima, y adem\u00e1s se puede hacer que los datos del servicio sean expuestos por un sitio web de terceros sin autorizaci\u00f3n, usando los navegadores web de la v\u00edctima. Esto puede resultar en ataques de tipo "Cross Site Request Forgery" (CSRF). Esto ser\u00e1 un problema muy probable, si una sesi\u00f3n basada en Cookie est\u00e1 en implementada y en uso.

ascanbeta.csrftoken.name=Comprobaci\u00f3n de tokens anti-CSRF
ascanbeta.csrftoken.extrainfo.annotation = Esta es una alerta informativa, porque el formulario tiene una anotaci\u00f3n de seguridad que indica que no necesita un token anti-CSRF. Esto debe probarse manualmente para asegurar que la anotaci\u00f3n es correcta.

ascanbeta.entityExpansion.name=Expansi\u00f3n de entidad exponencial (Billion Laughs Attack)
ascanbeta.entityExpansion.desc=Una expansi\u00f3n de entidad exponencial, o ataque de "billon laughs" es un tipo de ataque de denegaci\u00f3n de servicio (DoS). Est\u00e1 dirigido a analizadores sint\u00e1cticos como XML o YAML que permiten expansiones en macros.
ascanbeta.entityExpansion.soln=La defensa contra este tipo de ataque incluye limitar la memoria asignada a un analizador sint\u00e1ctico si la p\u00e9rdida del documento no es importante, o tratar las entidades simb\u00f3licamente y expandirlas de forma perezosa solo cuando (y en la medida en que) se vaya a usar su contenido.
ascanbeta.entityExpansion.refs=https\://en.wikipedia.org/wiki/Billion_laughs_attack\n\
http\://projects.webappsec.org/XML-Entity-Expansion\n\
http\://cwe.mitre.org/data/definitions/776.html
ascanbeta.entityExpansion.other=La solicitud HTTP de ataque recibi\u00f3 una respuesta despu\u00e9s de {0} segundos.

ascanbeta.forbiddenBypass.name=Saltando 403
ascanbeta.forbiddenBypass.desc=Es posible saltarse los endpoints 403, la regla de escaneo envi\u00f3 una carga \u00fatil que hizo que la respuesta fuera accesible (c\u00f3digo de estado 200).
ascanbeta.forbiddenBypass.refs=https\://www.acunetix.com/blog/articles/a-fresh-look-on-reverse-proxy-related-attacks/\n\
https\://i.blackhat.com/us-18/Wed-August-8/us-18-Orange-Tsai-Breaking-Parser-Logic-Take-Your-Path-Normalization-Off-And-Pop-0days-Out-2.pdf\n\
https\://www.contextis.com/en/blog/server-technologies-reverse-proxy-bypass

ascanbeta.HTTPParamPoll.name = Infecci\u00f3n de los par\u00e1metros HTTP
ascanbeta.HTTPParamPoll.desc = Los ataques de "par\u00e1metros de contaminaci\u00f3n HTTP" (HPP) funcionan inyectando delimitadores de cadenas de consulta, que han sido codificadas en los otros par\u00e1metros ya existentes. De una aplicaci\u00f3n web no desinfectar en \u00e9xito la entrada del usuario, entonces un usuario malintencionado pudiera poner en peligro la l\u00f3gica de la aplicaci\u00f3n, para as\u00ed realizar ataques desde el cliente o desde el servidor. Las consecuencias de los ataques HPP es que el atacante pudiera anular por completo los par\u00e1metros codificados HTTP ya existentes, y as\u00ed modificar el comportamiento de una aplicaci\u00f3n, evadir los puntos de verificaci\u00f3n de validaci\u00f3n de entrada y adem\u00e1s poder acceder y explotar las variables que puedan estar m\u00e1s all\u00e1 del alcance directo del mismo.
ascanbeta.HTTPParamPoll.sol =  Desinfectar la entrada del usuario de forma correcta para los delimitadores de los par\u00e1metros
ascanbeta.HTTPParamPoll.alert.attack = Infecci\u00f3n de los par\u00e1metros HTTP
ascanbeta.HTTPParamPoll.extrainfo = http\://www.google.com/search?q\=http+parameter+pollution

ascanbeta.httponlysite.name = Sitio solo HTTP
ascanbeta.httponlysite.desc = El sitio solo se sirve bajo HTTP y no HTTPS.
ascanbeta.httponlysite.soln = Configura tu servidor web o de aplicaciones para usar SSL (https).
ascanbeta.httponlysite.refs = https\://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html\n\
https\://letsencrypt.org/
ascanbeta.httponlysite.otherinfo = {0}\n\
ZAP intent\u00f3 conectarse por\: {1}
ascanbeta.httponlysite.otherinfo.connectionfail = Fallo al conectar.
ascanbeta.httponlysite.otherinfo.differenthosts = Hosts Diferentes.
ascanbeta.httponlysite.otherinfo.redirectionlimit = L\u00edmite de redirecci\u00f3n alcanzado.
ascanbeta.httponlysite.otherinfo.noredirection = No hubo redirecci\u00f3n autom\u00e1tica.
ascanbeta.httponlysite.otherinfo.nossl = El sitio no tiene soporte para SSL/TLS.
ascanbeta.httponlysite.otherinfo.redirecttohttp = Redirigido a HTTP.
ascanbeta.httponlysite.otherinfo.urinotencoded = No se pudo codificar el URI de redirecci\u00f3n.

ascanbeta.httpoxy.name = Httpoxy - Uso indebido del encabezado del proxy
ascanbeta.httpoxy.desc = El servidor inici\u00f3 una solicitud de proxy a trav\u00e9s del proxy especificado en el encabezado HTTP Proxy de la solicitud.\n\
Httpoxy normalmente afecta a c\u00f3digo que se ejecuta en CGI o entornos tipo CGI.\n\
\n\
Esto puede permitir a los atacantes\:\n\
\n\
* Canalizar a un Proxy las solicitudes HTTP salientes realizadas por la aplicaci\u00f3n web\n\
\n\
* Indicar al servidor que abra conexiones salientes a una direcci\u00f3n y puerto de tu elecci\u00f3n o\n\
\n\
* Inmovilizar los recursos del servidor al obligar al software vulnerable a usar un proxy malicioso
ascanbeta.httpoxy.otherinfo = Se envi\u00f3 un mensaje saliente a {0} a trav\u00e9s del host y el puerto que ZAP inyect\u00f3 en el encabezado del proxy HTTP.
ascanbeta.httpoxy.soln = La mitigaci\u00f3n m\u00e1s r\u00e1pida consiste en bloquear los encabezados de solicitud de proxy lo antes posible y antes de que lleguen a la aplicaci\u00f3n.
ascanbeta.httpoxy.refs = https\://httpoxy.org/
ascanbeta.httpoxy.skipped = la extensi\u00f3n de red est\u00e1 deshabilitada

ascanbeta.httpsashttp.name = Contenido HTTPS Disponible v\u00eda HTTP
ascanbeta.httpsashttp.desc = El contenido al que se accedi\u00f3 inicialmente por HTTPS (es decir, usando cifrado SSL/TLS) tambi\u00e9n es accesible por HTTP (sin cifrar). 
ascanbeta.httpsashttp.soln = Aseg\u00farese de que su servidor web, servidor de aplicaciones, balanceador de carga, etc. est\u00e9 configurado para servir dicho contenido solo a trav\u00e9s de HTTPS. Considere implementar, seguridad de transporte estricta para HTTP.
ascanbeta.httpsashttp.refs = https\://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n\
https\://owasp.org/www-community/Security_Headers\n\
http\://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n\
http\://caniuse.com/stricttransportsecurity\n\
http\://tools.ietf.org/html/rfc6797
ascanbeta.httpsashttp.otherinfo=ZAP intent\u00f3 conectarse a trav\u00e9s de\: {0}

ascanbeta.insecurehttpmethod.name = M\u00e9todo HTTP inseguro
ascanbeta.insecurehttpmethod.detailed.name = M\u00e9todo inseguro de HTTP - {0}
ascanbeta.insecurehttpmethod.potentiallyinsecure = C\u00f3digo de respuesta {0} para el M\u00c9TODO HTTP potencialmente inseguro
ascanbeta.insecurehttpmethod.insecure = c\u00f3digo de respuesta {0} para m\u00e9todo HTTP inseguro
ascanbeta.insecurehttpmethod.desc = El m\u00e9todo HTTP inseguro [{0}] est\u00e1 activado en este servidor web, para este recurso. Depende de la configuraci\u00f3n del servidor web y de la implementaci\u00f3n subyacente, responsable de proporcionar el recurso, pudiera ser explotable o no. Es posible que los m\u00e9todos TRACK y TRACE sean utilizados por un atacante, para as\u00ed ganar acceso a la cookie de la sesi\u00f3n/token de autorizaci\u00f3n que tiene un usuario de la aplicaci\u00f3n, incluyendo si la cookie de sesi\u00f3n est\u00e1 protegida con el indicador ''HttpOnly''. El ataque sea exitoso si el usuario de la aplicaci\u00f3n debe usar un navegador web antiguo o un navegador web que tenga la vulnerabilidad que omita la Pol\u00edtica de Origen (SOP). Tambi\u00e9n el m\u00e9todo ''CONNECT'' lo puede usar un cliente web para crear un t\u00fanel HTTP hacia sitios web o hacia servicios de terceros.
ascanbeta.insecurehttpmethod.trace.exploitable.desc = El m\u00e9todo HTTP inseguro [{0}] est\u00e1 habilitado para este recurso y es explotable. Un atacante puede utilizar los m\u00e9todos "Track and Trace" para obtener acceso a la cookie del token o sesi\u00f3n de autorizaci\u00f3n de un usuario de la aplicaci\u00f3n, incluso si la cookie de sesi\u00f3n est\u00e1 protegida con el indicador ''HttpOnly''. Para que el ataque tenga \u00e9xito, el usuario de la aplicaci\u00f3n debe utilizar normalmente un explorador web antiguo o un explorador web que tenga una vulnerabilidad de "bypass" de la misma directiva de origen (SOP).
ascanbeta.insecurehttpmethod.trace.exploitable.extrainfo = Se ha enviado una solicitud RASTRO para esta solicitud, con un valor de cookie personalizado [{0}]. Este valor de la cookie se propag\u00f3 en la respuesta HTTP, lo que confirma la existencia de la vulnerabilidad.
ascanbeta.insecurehttpmethod.connect.exploitable.desc = El m\u00e9todo HTTP insegurp [{0}] se encuentra habilitado para este recurso, y es explotable. Se encontr\u00f3 que era probable establecer una conexi\u00f3n de socket en el t\u00fanel dirigido a un servicio de terceros, utilizando este m\u00e9todo HTTP. Esto podr\u00e1 permitir que el servidor se utilice como un retransmisor de spam an\u00f3nimo, o como un proxy web, evadiendo de estar forma las restricciones de la red. Tambi\u00e9n podr\u00e1 permitir que se utilice para poder establecer una VPN en el t\u00fanel, expandiendo de un forma efectiva el per\u00edmetro de la red para poder incluir los componentes no confiables. 
ascanbeta.insecurehttpmethod.extrainfo = El m\u00e9todo OPCIONES revel\u00f3 los siguientes m\u00e9todos HTTP habilitados para este recurso\: [{0}]
ascanbeta.insecurehttpmethod.connect.exploitable.extrainfo = El m\u00e9todo CONNECT se us\u00f3 para establecer una conexi\u00f3n de socket a [{0}], a trav\u00e9s del servidor web.
ascanbeta.insecurehttpmethod.soln = Deshabilite m\u00e9todos inseguros como TRACK, TRACE y CONNECT en el servidor web, y aseg\u00farese de que la implementaci\u00f3n del servicio subyacente no admita m\u00e9todos inseguros.
ascanbeta.insecurehttpmethod.delete.exploitable.desc = Este m\u00e9todo se usa en los servicios REST, para eliminar un recurso.
ascanbeta.insecurehttpmethod.delete.exploitable.extrainfo = Consulte la discusi\u00f3n en stackexchange\: https\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods, para comprender las operaciones REST, consulte http\://www.restapitutorial.com/lessons/httpmethods.html
ascanbeta.insecurehttpmethod.options.exploitable.desc = Este es un m\u00e9todo de diagn\u00f3stico y nunca debe activarse en el modo de producci\u00f3n.
ascanbeta.insecurehttpmethod.options.exploitable.extrainfo = Consulte la discusi\u00f3n en stackexchange\: https\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods
ascanbeta.insecurehttpmethod.put.exploitable.desc = Este m\u00e9todo fue dise\u00f1ado originalmente para operaciones de administraci\u00f3n de archivos. Ahora se usa m\u00e1s com\u00fanmente en los servicios REST, PUT se usa con mayor frecuencia para las capacidades de **actualizaci\u00f3n**, PUT-ing (Usando PUT) a un URI de un recurso conocido con el cuerpo de la solicitud que contiene la representaci\u00f3n reci\u00e9n actualizada del recurso original.
ascanbeta.insecurehttpmethod.put.exploitable.extrainfo = Consulte la discusi\u00f3n en stackexchange\: https\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods, para comprender las operaciones REST, consulte http\://www.restapitutorial.com/lessons/httpmethods.html
ascanbeta.insecurehttpmethod.patch.exploitable.desc = Este m\u00e9todo ahora se usa m\u00e1s com\u00fanmente en los servicios REST, PATCH se usa para las capacidades de **modificar**. La solicitud PATCH solo debe contener los cambios en el recurso, no el recurso completo.
ascanbeta.insecurehttpmethod.patch.exploitable.extrainfo = Consulte la discusi\u00f3n en stackexchange\: https\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods, para comprender las operaciones REST, consulte http\://www.restapitutorial.com/lessons/httpmethods.html
ascanbeta.insecurehttpmethod.webdav.exploitable.desc = Este m\u00e9todo HTTP es un m\u00e9todo WEBDAV\: {0}. Si este servidor no ofrece ning\u00fan servicio WEBDAV, estos m\u00e9todos no deber\u00edan estar disponibles.
ascanbeta.insecurehttpmethod.webdav.exploitable.extrainfo = Consulte la discusi\u00f3n en stackexchange\: https\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods

ascanbeta.integeroverflow.name = Falla de desbordamiento de enteros
ascanbeta.integeroverflow.desc = Existe una condici\u00f3n de desbordamiento de enteros (integer overflow) cuando un entero utilizado en un programa compilado se extiende m\u00e1s all\u00e1 de los l\u00edmites del rango y no se ha verificado correctamente desde el flujo de datos de entrada.
ascanbeta.integeroverflow.soln = Para evitar desbordamientos y errores de divisi\u00f3n por 0 (cero) en la aplicaci\u00f3n, vuelva a escribir el programa de backend y verifique si los valores de los n\u00fameros enteros que se procesan est\u00e1n dentro del rango permitido por la aplicaci\u00f3n. Para ello tendr\u00e1s que volver a compilar ejecutable de backend.
ascanbeta.integeroverflow.refs = https\://en.wikipedia.org/wiki/Integer_overflow\n\
https\://cwe.mitre.org/data/definitions/190.html\n\
http\://projects.webappsec.org/w/page/13246946/Integer%20Overflows
ascanbeta.integeroverflow.error1 = Desbordamiento potencial de entero. El c\u00f3digo de estado se modific\u00f3 en la entrada de una cadena larga de enteros que son aleatorios.
ascanbeta.integeroverflow.error2 = Desbordamiento potencial de entero. El c\u00f3digo de estado se modific\u00f3 en la entrada de una cadena larga de ceros.
ascanbeta.integeroverflow.error3 = Desbordamiento potencial de entero. El c\u00f3digo de estado se modific\u00f3 en la entrada de una cadena larga de unidades.
ascanbeta.integeroverflow.error4 = Desbordamiento potencial de entero. El c\u00f3digo de estado se modific\u00f3 en la entrada de una cadena larga de nueves.

ascanbeta.log4shell.name=Log4Shell
ascanbeta.log4shell.skipped=no se ha seleccionado ning\u00fan servicio de Escaneo Activo OAST.

ascanbeta.log4shell.cve44228.name=Log4Shell (CVE-2021-44228)
ascanbeta.log4shell.cve44228.desc=Apache Log4j2 <\=2.14.1 Las caracter\u00edsticas de JNDI utilizadas en la configuraci\u00f3n, los mensajes de registro y los par\u00e1metros no protegen contra un LDAP controlado por atacantes y otros endpoints relacionados con JNDI. Un atacante que puede controlar los mensajes de registro o los par\u00e1metros de los mensajes de registro puede ejecutar c\u00f3digo arbitrario cargado desde servidores LDAP cuando la sustituci\u00f3n de mensajes est\u00e1 habilitada. Desde log4j 2.15.0, este comportamiento est\u00e1 desactivado de forma predeterminada.
ascanbeta.log4shell.cve44228.soln=Actualice Log4j2 a la versi\u00f3n 2.17.1 o superior. En versiones anteriores (>2.10), este comportamiento se puede mitigar configurando la propiedad del sistema "log4j2.formatMsgNoLookups" en "true" o eliminando la clase JndiLookup del classpath (ejemplo\: zip -q -d log4j-core-*.jar org /apache/logging/log4j/core/lookup/JndiLookup.class). Java 8u121 (consulte https\://www.oracle.com/java/technologies/javase/8u121-relnotes.html) protege contra la ejecuci\u00f3n remota de c\u00f3digo al establecer de manera predeterminada "com.sun.jndi.rmi.object.trustURLCodebase" y "com. sun.jndi.cosnaming.object.trustURLCodebase" a "falso".
ascanbeta.log4shell.cve44228.refs=https\://www.cve.org/CVERecord?id\=CVE-2021-44228\n\
https\://www.lunasec.io/docs/blog/log4j-zero-day/\n\
https\://nvd.nist.gov/vuln/detail/CVE-2021-44228

ascanbeta.log4shell.cve45046.name=Log4Shell (CVE-2021-45046)
ascanbeta.log4shell.cve45046.desc=Se encontr\u00f3 que la soluci\u00f3n para abordar CVE-2021-44228 en Apache Log4j 2.15.0 estaba incompleta en algunas configuraciones no predeterminadas. Esto podr\u00eda permitir a los atacantes crear datos de entrada maliciosos mediante un patr\u00f3n de b\u00fasqueda JNDI, lo que provocar\u00eda una fuga de informaci\u00f3n y la ejecuci\u00f3n remota de c\u00f3digo en algunos entornos.
ascanbeta.log4shell.cve45046.soln=Actualiza Log4j2 a la versi\u00f3n 2.17.1 o una superior.
ascanbeta.log4shell.cve45046.refs=https\://www.cve.org/CVERecord?id\=CVE-2021-45046\n\
https\://www.lunasec.io/docs/blog/log4j-zero-day/\n\
https\://nvd.nist.gov/vuln/detail/CVE-2021-45046

ascanbeta.noanticsrftokens.name=Ausencia de fichas (tokens) Anti-CSRF
ascanbeta.noanticsrftokens.desc=No se encontraron fichas (tokens) Anti-CSRF en un formulario HTML.

ascanbeta.oobxss.name=Fuera de banda XSS
ascanbeta.oobxss.skipped=no se ha seleccionado ning\u00fan servicio de Escaneo Activo OAST.

ascanbeta.proxydisclosure.name=Disvulgaci\u00f3n de Proxy
ascanbeta.proxydisclosure.desc=Se detectaron o tomaron huellas de {0} servidor(es) proxy. Esta informaci\u00f3n ayuda a un atacante potencial a determinar \n\
 - Una lista de objetivos para un ataque contra la aplicaci\u00f3n.\n\
 - Vulnerabilidades potenciales en los servidores proxy que dan servicio a la aplicaci\u00f3n.\n\
 - La presencia o ausencia de cualquier componente basado en proxy que pueda provocar la detecci\u00f3n, prevenci\u00f3n o mitigaci\u00f3n de ataques contra la aplicaci\u00f3n. 
ascanbeta.proxydisclosure.soln=Desactivar el m\u00e9todo 'TRACE' en los servidores proxy, as\u00ed como el servidor web/aplicaci\u00f3n de origen. \n\
Desactivar el m\u00e9todo de 'OPTIONS' en los servidores proxy, as\u00ed como el servidor web/aplicaci\u00f3n de origen, si no es necesario para otros fines, tales como 'CORS' (Cross Origin Resource Sharing). \n\
Configurar los servidores web y de aplicaciones con p\u00e1ginas de error personalizadas, para evitar que las p\u00e1ginas de error espec\u00edfico muestren 'huellas' de productos, filtrando al usuario en caso de errores HTTP, tales como peticiones 'TRACK' de p\u00e1ginas inexistentes.\n\
Configurar todos los proxies, servidores de aplicaciones y servidores web para impedir la divulgaci\u00f3n de la informaci\u00f3n de la tecnolog\u00eda usada en el 'Servidor' y cabeceras de respuesta HTTP 'X-Powered-By'.\n\

ascanbeta.proxydisclosure.refs=https\://tools.ietf.org/html/rfc7231\#section-5.1.2
ascanbeta.proxydisclosure.attack=Metodos TRACE, OPTIONS con cabecera 'Max-Forwards'. Metodo TRACK.
ascanbeta.proxydisclosure.extrainfo.unknown=Desconocido
ascanbeta.proxydisclosure.extrainfo.proxyserver.header=Utilizando los m\u00e9todos TRACE, OPTIONS y TRACK, se han identificado los siguientes servidores proxy entre OWASP ZAP y el servidor de aplicaci\u00f3n/web\: 
ascanbeta.proxydisclosure.extrainfo.proxyserver= - {0}
ascanbeta.proxydisclosure.extrainfo.webserver.header=Se ha identificado el siguiente servidor web/aplicaci\u00f3n\: 
ascanbeta.proxydisclosure.extrainfo.webserver= - {0}
ascanbeta.proxydisclosure.extrainfo.silentproxyserver.header=Se identificaron los siguientes servidores proxy 'silent' (silenciosos). Debido a su comportamiento, no se sabe en que punto en la topolog\u00eda de red residen estos servidores proxy\:
ascanbeta.proxydisclosure.extrainfo.silentproxyserver= - {0}
ascanbeta.proxydisclosure.extrainfo.traceenabled=El m\u00e9todo 'TRACE' est\u00e1 activado en uno o m\u00e1s de los servidores proxy, o en el servidor de origen. Este m\u00e9todo filtra toda la informaci\u00f3n enviada desde el navegador web y proxies al usuario agente. Esto puede facilitar ataques 'Cross Site Tracing'. 

ascanbeta.relativepathconfusion.name=Confusi\u00f3n de Ruta Relativa
ascanbeta.relativepathconfusion.desc=El servidor web est\u00e1 configurado para proporcionar respuestas a URL ambiguas de una manera que probablemente genere confusi\u00f3n sobre la "ruta relativa" correcta para la URL. Los recursos (CSS, im\u00e1genes, etc.) tambi\u00e9n se especifican en la respuesta de la p\u00e1gina mediante direcciones URL relativas en lugar de absolutas. En un ataque, si el navegador web analiza la respuesta de "cross-content" de manera permisiva, o si se le puede enga\u00f1ar para que analice permisivamente la respuesta de "cross-contet", utilizando t\u00e9cnicas como framing, se podr\u00eda enga\u00f1ar al navegador web para que interprete HTML como CSS (u otros tipos de contenido), lo que llevaria a una vulnerabilidad XSS.
ascanbeta.relativepathconfusion.soln=Los servidores web y los marcos deben actualizarse para configurarse de modo que no proporcionen respuestas a URL ambiguas, de tal manera que la ruta relativa de dichas URL pueda ser malinterpretada por los componentes del lado del cliente o del lado del servidor.\n\
Dentro de la aplicaci\u00f3n, el uso correcto de la etiqueta HTML "<base>" en la respuesta HTTP especificar\u00e1 sin ambig\u00fcedades la URL base para todas las URL relativas en el documento.\n\
Utilice el encabezado de respuesta HTTP "Content-Type" para que al atacante le resulte m\u00e1s dif\u00edcil obligar al navegador web a malinterpretar el tipo de contenido de la respuesta.\n\
Utilice el encabezado de respuesta HTTP "X-Content-Type-Options\: nosniff" para evitar que el navegador web "olfatee" el tipo de contenido de la respuesta.\n\
Use un DOCTYPE moderno como "<\!doctype html>" para evitar que la p\u00e1gina se represente en el navegador web usando el "Modo Quirks", ya que esto hace que el navegador web ignore el tipo de contenido.\n\
Especifique el encabezado de respuesta HTTP "X-Frame-Options" para evitar que el modo Quirks se habilite en el navegador web mediante ataques framing. 
ascanbeta.relativepathconfusion.refs=http\://www.thespanner.co.uk/2014/03/21/rpo/\n\
https\://hsivonen.fi/doctype/\n\
http\://www.w3schools.com/tags/tag_base.asp
ascanbeta.relativepathconfusion.extrainfo.morethanonebasetag=Se especific\u00f3 m\u00e1s de una etiqueta <base> en la etiqueta HTML <head> para definir la ubicaci\u00f3n de las URL relativas, lo cual no es v\u00e1lido.
ascanbeta.relativepathconfusion.extrainfo.nobasetag=No se especific\u00f3 ninguna etiqueta <base> en la etiqueta HTML <head> para definir la ubicaci\u00f3n de las URL relativas.
ascanbeta.relativepathconfusion.extrainfo.contenttypeenabled=Se especific\u00f3 un tipo de contenido de "{0}". Si el navegador web est\u00e1 empleando reglas de an\u00e1lisis estrictas, esto evitar\u00e1 que los ataques de contenido cruzado tengan \u00e9xito. El modo Quirks en el navegador web deshabilitar\u00eda el an\u00e1lisis estricto.  
ascanbeta.relativepathconfusion.extrainfo.quirksmodeenabledexplicitly=El modo Quirks se habilita expl\u00edcitamente a trav\u00e9s de <meta http-equiv\="{0}", lo que permite omitir el tipo de contenido especificado.
ascanbeta.relativepathconfusion.extrainfo.quirksmodeenabledimplicitly=El modo Quirks se habilita impl\u00edcitamente mediante el uso de un DOCTYPE antiguo con PUBLIC id "{0}", lo que permite omitir el tipo de contenido especificado en algunos navegadores web.
ascanbeta.relativepathconfusion.extrainfo.quirksmodeenabledimplicitlynodoctype=El modo Quirks est\u00e1 habilitado impl\u00edcitamente a trav\u00e9s de la ausencia de un DOCTYPE, lo que permite omitir el tipo de contenido especificado.
ascanbeta.relativepathconfusion.extrainfo.nocontenttype=No se especific\u00f3 ning\u00fan tipo de contenido, por lo que no se requiere el modo Quirks para explotar la vulnerabilidad en el navegador web. 
ascanbeta.relativepathconfusion.extrainfo.framingallowed=No se especific\u00f3 ning\u00fan encabezado para X-Frame-Options, por lo que la p\u00e1gina se puede enmarcar y esto se puede usar para habilitar el modo Quirks, lo que permite omitir el tipo de contenido especificado.

ascanbeta.sessionfixation.name=Fijaci\u00f3n de Sesi\u00f3n
ascanbeta.sessionfixation.desc=Es posible fijar la sesi\u00f3n. De ocurrir ese problema con una URL de inicio de sesi\u00f3n (en donde el usuario es autenticado en la aplicaci\u00f3n), la URL pudiera ser proporcionada por un atacante, con una identificaci\u00f3n de sesi\u00f3n fija, a la v\u00edctima, para as\u00ed tomar la identidad de la v\u00edctima, usando la identificaci\u00f3n de sesi\u00f3n otorgada. Si el problema ocurriera con una p\u00e1gina que no es para el inicio de sesi\u00f3n, la URL y la identificaci\u00f3n de sesi\u00f3n fija solamente pudieran ser utilizados por un atacante para rastrear acciones de un usuario que no est\u00e9 autenticado. De producirse la vulnerabilidad en un campo de cookies o en un campo de formulario (par\u00e1metro POST) en vez de en un par\u00e1metro URL (GET), tambi\u00e9n ser\u00e1 necesaria otra vulnerabilidad para poder configurar el campo de cookies en el navegador de la v\u00edctima, para permitir que la vulnerabilidad sea explotada.
ascanbeta.sessionfixation.soln=1) Prevenir que el atacante adquiera un ID de sesi\u00f3n, mediante el uso identificadores de sesi\u00f3n estrictos, y asignando \u00fanicamente identificadores de sesi\u00f3n, cuando se autentica con \u00e9xito en la aplicaci\u00f3n.\n\
2) El servidor deber\u00e1 siempre crear una nueva identificaci\u00f3n de sesi\u00f3n, en cada autenticaci\u00f3n, sin importar si ya existe una sesi\u00f3n que ya est\u00e1 en funcionamiento.\n\
3) Vincular una identificaci\u00f3n de sesi\u00f3n con algo que combine un atributo de cliente identificable, como una direcci\u00f3n IP, o el certificado de SSL del cliente.\n\
4) Cuando se destruyen las sesiones, se deben destruir en ambos, tanto en el servidor, como en el cliente.\n\
5) Agregar un mecanismo de cierre de sesi\u00f3n que destruya las sesiones anteriores del cliente.\n\
6) Agregar tiempos de espera de sesi\u00f3n exactos.\n\
7) Dejar de usar URLs basadas en cookies o en identificaci\u00f3n de sesi\u00f3n basada en formularios, porque estos estos \u00faltimos suelen requerir m\u00e1s vulnerabilidades que un atacante puede aprovechar\n\

ascanbeta.sessionfixation.refs=https\://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A2-Broken_Authentication\n\
https\://owasp.org/www-community/attacks/Session_fixation\n\
http\://www.acros.si/papers/session_fixation.pdf\n\
http\://www.technicalinfo.net/papers/WebBasedSessionManagement.html
ascanbeta.sessionfixation.alert.cookie.extrainfo=La Cookie se configura en respuesta cuando el campo de la cookie [{0}] se encuentra establecido en NULL\: [{1}]\n\
La Cookie se configura en respuesta con el valor de la cookie otorgada (v\u00e1lida) en la solicitud [{1}] \: [{2}]
ascanbeta.sessionfixation.alert.cookie.extrainfo.loginpage=La URL en la que se descubri\u00f3 el problema se marc\u00f3 como una p\u00e1gina de inicio de sesi\u00f3n.\n\
\n\
Este problema debe validarse manualmente comprobando que el token de sesi\u00f3n establecido en la p\u00e1gina de inicio de sesi\u00f3n siga siendo v\u00e1lido una vez que haya iniciado sesi\u00f3n, y que el token se pueda usar para acceder directamente a una p\u00e1gina/recurso que deber\u00eda requerir que el usuario inicie sesi\u00f3n.
ascanbeta.sessionfixation.alert.url.extrainfo=Un valor de una sesi\u00f3n predecible aparece en las URL que se encuentran en el resultado HTML cuando el par\u00e1metro URL/pseudo par\u00e1metro URL [{0}] se establece en NULL\: [{1}]\n\
Cuando se utiliza esta sesi\u00f3n que es ''prestada\u00b4[{1}] en una solicitud posterior para esta misma URL, no se origina una sesi\u00f3n nueva.
ascanbeta.sessionfixation.alert.url.extrainfo.loginpage=La Url en la que se descubri\u00f3 el problema se marc\u00f3 como una p\u00e1gina de inicio de sesi\u00f3n.
ascanbeta.sessionfixation.alert.attack={0} campo\: [{1}]
#Exposed Session Id messages
ascanbeta.sessionidexposedinurl.name=La identificaci\u00f3n de la sesi\u00f3n est\u00e1 expuesta
ascanbeta.sessionidexposedinurl.desc=Un identificador de sesi\u00f3n en la direcci\u00f3n URL es expuesto. Al compartir dicha URL del sitio web (que contiene el identificador de sesi\u00f3n), un nombre de usuario de un ingenuo puediera estar concediendo inadvertidamente el acceso a sus datos, comprometiendo su confidencialidad, integridad y disponibilidad. Las direcciones URL que contienen el identificador de sesi\u00f3n tambi\u00e9n aparecen en los marcadores del explorador web, los archivos de registro del servidor web y los archivos de registro del servidor proxy. 
ascanbeta.sessionidexposedinurl.soln=Use una implementaci\u00f3n de administraci\u00f3n de sesi\u00f3n m\u00e1s segura, como la que utiliza cookies de sesi\u00f3n, que no se comparten tan f\u00e1cilmente sin aviso, y que normalmente no aparecen en los archivos de registro del servidor o en los marcadores del explorador Web.
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidexposedinurl.refs=https\://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A2-Broken_Authentication
ascanbeta.sessionidexposedinurl.alert.extrainfo=El campo {0} [{1}] contiene un identificador de la sesi\u00f3n que est\u00e1 expuesta [{2}]
ascanbeta.sessionidexposedinurl.alert.extrainfo.loginpage=La Url en la que se descubri\u00f3 el problema se marc\u00f3 como una p\u00e1gina de inicio de sesi\u00f3n.
ascanbeta.sessionidexposedinurl.alert.attack={0} campo\: [{1}]
#Session Id Cookie not sent securely
ascanbeta.sessionidsentinsecurely.name=La ID de la sesi\u00f3n fue transmitida de una manera insegura
ascanbeta.sessionidsentinsecurely.desc=Se puede enviar una identificaci\u00f3n de sesi\u00f3n, usando un mecanismo inseguro. Si una cookie es enviada en la solicitud, significa que se est\u00e1 utilizando HTTP, en lugar de HTTPS. Si una cookie enviada por el servidor como una respuesta (cuando la URL es modificada al configurar el campo en el par\u00e1metro NULL), significa que este indicador 'seguro' no est\u00e1 configurado, lo que le permite enviar la cookie m\u00e1s tarde por HTTP, y no a trav\u00e9s de HTTPS. Esto le da acceso a un esp\u00eda pasivo, en la ruta de la red, a que tenga acceso completo a la sesi\u00f3n de la v\u00edctima.  
ascanbeta.sessionidsentinsecurely.soln=1) Use la \u00faltima versi\u00f3n disponible de SSL/TLS (para HTTPS) para todas las p\u00e1ginas en las que se comunique un identificador de sesi\u00f3n entre el navegador y el servidor Web.\n\
2) No permita que la comunicaci\u00f3n sea forzada al protocolo HTTP no encriptado.\n\
3) Utilice el indicador 'Secure' (seguro) al establecer una cookie que contenga un identificador de sesi\u00f3n, para as\u00ed impedir su posterior transmisi\u00f3n mediante un mecanismo inseguro.\n\
4) Remita las solicitudes de p\u00e1ginas HTTP no seguras a la p\u00e1gina equivalente de HTTPS seguro.  
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidsentinsecurely.refs=https\://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A2-Broken_Authentication
ascanbeta.sessionidsentinsecurely.alert.extrainfo=el identificador de la sesi\u00f3n {0} campo [{1}], el valor [{2}] quizas pueda enviarse por medio de un mecanismo que es inseguro.  
ascanbeta.sessionidsentinsecurely.alert.extrainfo.secureflagnotset=El indicador 'seguro' no se configur\u00f3 en la cookie de sesi\u00f3n proporcionada por el servidor.
ascanbeta.sessionidsentinsecurely.alert.extrainfo.loginpage=La Url en la que se descubri\u00f3 el problema se marc\u00f3 como una p\u00e1gina de inicio de sesi\u00f3n.
ascanbeta.sessionidsentinsecurely.alert.attack={0} campo\: [{1}]
#Session Id Cookie accessible by JavaScript
ascanbeta.sessionidaccessiblebyjavascript.name=La cookie de la ID de la sesi\u00f3n accesible para JavaScript
ascanbeta.sessionidaccessiblebyjavascript.desc=Un cookie de ID de sesi\u00f3n enviado por el servidor (cuando la URL se modifica el estableciendo del campo de par\u00e1metros con el nombre en null) puede ser accedida por JavaScript en el cliente. En conjunci\u00f3n con otra vulnerabilidad, esto puede permitir que la sesi\u00f3n sea secuestrada.  
ascanbeta.sessionidaccessiblebyjavascript.soln=1) Utilice el indicador 'httponly' cuando se modifique la cookie que contenga una identificaci\u00f3n de la sesi\u00f3n, para poder prevenir que JavaScript ingrese a ella en el navegador web.  
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidaccessiblebyjavascript.refs=[cadena vac\u00eda]
ascanbeta.sessionidaccessiblebyjavascript.alert.extrainfo=se puede ingresar al identificador de la sesi\u00f3n {0} campo [{1}], valor [{2}] utilizando JavaScript en el navegador web
ascanbeta.sessionidaccessiblebyjavascript.alert.extrainfo.loginpage=La Url en la que se descubri\u00f3 el problema se marc\u00f3 como una p\u00e1gina de inicio de sesi\u00f3n.
ascanbeta.sessionidaccessiblebyjavascript.alert.attack={0} campo\: [{1}]
#Session Id Cookie Expiry
ascanbeta.sessionidexpiry.name=El tiempo de terminaci\u00f3n de la ID de la sesi\u00f3n/Max-Age es demasiado
ascanbeta.sessionidexpiry.desc=La cookie de una ID de sesi\u00f3n enviada por el servidor (cuando la URL se modifica estableciendo el campo de par\u00e1metros con el nombre en null) se establece para que sea v\u00e1lida durante un per\u00edodo de tiempo excesivo. Esto puede ser explotado por un atacante si el usuario se olvida de desconectarse, si la funcionalidad de cierre de sesi\u00f3n no acaba correctamente con el per\u00edodo de sesiones, o si el identificador de sesi\u00f3n est\u00e1 comprometido por otros medios.     
ascanbeta.sessionidexpiry.soln=1) Utiliza las directivas de cookies 'Expire' o 'Max-Age' al establecer una cookie que contenga un identificador de sesi\u00f3n, para evitar que est\u00e9 disponible por per\u00edodos prolongados.\n\
2) Aseg\u00farese de que la funcionalidad de cierre de sesi\u00f3n existe y que termina correctamente el per\u00edodo de sesiones.\n\
3) Utilizar otras medidas preventivas para asegurar que si un identificador de sesi\u00f3n est\u00e1 comprometido, no pueda ser explotado.
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidexpiry.refs=[cadena vac\u00eda]
ascanbeta.sessionidexpiry.alert.extrainfo=se puede ingresar al identificador de la sesi\u00f3n {0} campo [{1}], valor [{2}] hasta el valor [{3}] (ya que la cookie se obtuvo en {4}), a menos de que se elimine la sesi\u00f3n.
ascanbeta.sessionidexpiry.alert.extrainfo.loginpage=La Url en la que se descubri\u00f3 el problema se marc\u00f3 como una p\u00e1gina de inicio de sesi\u00f3n.
ascanbeta.sessionidexpiry.alert.attack={0} campo\: [{1}]
ascanbeta.sessionidexpiry.browserclose=navegador cerrado
ascanbeta.sessionidexpiry.timemorethanoneweek=M\u00e1s de una semana
ascanbeta.sessionidexpiry.timemorethanoneday=M\u00e1s de un d\u00eda
ascanbeta.sessionidexpiry.timemorethanonehour=M\u00e1s de una hora
ascanbeta.sessionidexpiry.timelessthanonehour=Menos de una hora
ascanbeta.sessionidexpiry.timeexpired=Caducado

ascanbeta.shellshock.name = Ejecuci\u00f3n remota de c\u00f3digo - Shell Shock
ascanbeta.shellshock.desc = El servidor est\u00e1 ejecutando una versi\u00f3n del Bash shell que permite a los atacantes remotos ejecutar un c\u00f3digo arbitrario 
ascanbeta.shellshock.extrainfo = Desde la CVE-2014-6271\: El GNU Bash a 4.3 es el que procesa cadenas de caracteres de entorno, posteriores a las definiciones de funci\u00f3n en los valores variables, lo que permite a un atacante remoto ejecutar un c\u00f3digo a su antojo a trav\u00e9s de un entorno dise\u00f1ado para ellos, como se ve con los vectores que involucran la funci\u00f3n "ForceCommand" en el "OpenSSH" sshd, tambi\u00e9n en m\u00f3dulos mod_cgi y mod_cgid, presentes en el Servidor Apache HTTP, adem\u00e1s de los scripts ejecutados por los clientes DHCP que hayan sido especificados, y as\u00ed como el resto de situaciones en las que es establecido el entorno, por el cual ocurre una ejecuci\u00f3n de Bash a trav\u00e9s de un l\u00edmite de privilegios, conocido tambi\u00e9n como "ShellShock". NOTA\: La primera soluci\u00f3n a este problema era incorrecta; Se asign\u00f3 el CVE-2014-7169 para tapar la vulnerabilidad que todav\u00eda est\u00e1 presente despu\u00e9s de la correcci\u00f3n no correcta.
ascanbeta.shellshock.soln = Actualizar bash en el servidor, a la \u00faltima versi\u00f3n
ascanbeta.shellshock.ref = http\://web.nvd.nist.gov/view/vuln/detail?vulnId\=CVE-2014-6271 \n\
http\://www.troyhunt.com/2014/09/everything-you-need-to-know-about.html
ascanbeta.shellshock.timingbased.evidence = Usando el ataque, se indujo y detect\u00f3 un retraso de [{0}] milisegundos

ascanbeta.sourcecodedisclosure.desc = El c\u00f3digo fuente de la p\u00e1gina actual se dio a conocer por el servidor web
ascanbeta.sourcecodedisclosure.lfibased.name = Divulgaci\u00f3n de C\u00f3digo Fuente - Inclusi\u00f3n de archivos
ascanbeta.sourcecodedisclosure.lfibased.soln = Asegurar que los archivos arbitrarios especificados por el usuario no se incluyen en la salida
ascanbeta.sourcecodedisclosure.lfibased.extrainfo = La salida para el nombre del archivo de c\u00f3digo fuente [{0}] se diferencia suficientemente de la del par\u00e1metro aleatorio [{1}], a [{2}%], en comparaci\u00f3n con un umbral de [{3}%]
ascanbeta.sourcecodedisclosure.lfibased.evidence=[cadena vac\u00eda]

ascanbeta.sourcecodedisclosure.gitbased.name = Divulgaci\u00f3n de C\u00f3digo Fuente - Git
ascanbeta.sourcecodedisclosure.gitbased.soln = Aseg\u00farate de que los archivos de metadatos de Git no se implementen en el servidor web o el servidor de aplicaciones
ascanbeta.sourcecodedisclosure.gitbased.extrainfo=[cadena vac\u00eda]
ascanbeta.sourcecodedisclosure.gitbased.evidence = El c\u00f3digo fuente de [{0}] se extrajo usando [{1}]


ascanbeta.sourcecodedisclosurecve-2012-1823.name = Divulgaci\u00f3n del c\u00f3digo fuente - CVE-2012-1823
ascanbeta.sourcecodedisclosurecve-2012-1823.desc = Existen versiones de PHP, que cuando est\u00e1n configuradas para ejecutarse con CGI, no pueden manejar de manera correcta las cadenas de consulta, que no cuentan con el car\u00e1cter "\=", permitiendo as\u00ed que c\u00f3digo fuente de PHP sea revelado, adem\u00e1s de la ejecuci\u00f3n de cualquier c\u00f3digo. En casos como este se sirvieron directamente en el navegador web los contenidos del archivo PHP. Esta salida seguramente contendr\u00e1 PHP, pero tambi\u00e9n pudiera contener HTML directo.
ascanbeta.sourcecodedisclosurecve-2012-1823.soln = Actualice a la \u00faltima versi\u00f3n estable de PHP, o utilice el servidor web Apache y el m\u00f3dulo mod_rewrite para filtrar solicitudes maliciosas mediante las directivas "RewriteCond" y "RewriteRule".

ascanbeta.sourcecodedisclosure.svnbased.name = Divulgaci\u00f3n del c\u00f3digo fuente - SVN
ascanbeta.sourcecodedisclosure.svnbased.soln = Aseg\u00farese de que los archivos de metadatos SVN no se implementen en el servidor web o servidor de aplicaciones
ascanbeta.sourcecodedisclosure.svnbased.extrainfo = El c\u00f3digo fuente de [{0}] se encontr\u00f3 en [{1}]

ascanbeta.spring4shell.name=Spring4Shell
ascanbeta.spring4shell.desc=La aplicaci\u00f3n parece ser vulnerable a CVE-2022-22965 (tambi\u00e9n conocido como Spring4Shell)\: ejecuci\u00f3n remota de c\u00f3digo (RCE) a trav\u00e9s del enlace de datos.
ascanbeta.spring4shell.soln=Actualiza el Marco de trabajo Spring a las versiones 5.3.18, 5.2.20 o superiores.
ascanbeta.spring4shell.refs=https\://www.rapid7.com/blog/post/2022/03/30/spring4shell-zero-day-vulnerability-in-spring-framework/\n\
https\://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement\#vulnerability\n\
https\://tanzu.vmware.com/security/cve-2022-22965

ascanbeta.springactuator.name=Fuga de informaci\u00f3n del actuador de Spring
ascanbeta.springactuator.desc=Spring Actuator for Health est\u00e1 habilitado y puede revelar informaci\u00f3n confidencial sobre esta aplicaci\u00f3n. Los Spring Actuators se pueden usar con fines de monitoreo real, pero se deben usar con precauci\u00f3n para no exponer demasiada informaci\u00f3n sobre la aplicaci\u00f3n o la infraestructura que la ejecuta.
ascanbeta.springactuator.soln=Deshabilite los Health Actuators y otros Actuators, o lim\u00edtelos a usuarios administrativos.
ascanbeta.springactuator.refs=https\://docs.spring.io/spring-boot/docs/current/actuator-api/htmlsingle/\#overview

ascanbeta.sstiblind.name = Server Side Template Injection (Blind)
ascanbeta.sstiblind.desc = Cuando la entrada del usuario se inserta en la plantilla en lugar de usarse como argumento en el renderizado, el motor de plantilla eval\u00faa. Dependiendo del motor de plantillas, puede producir ejecuci\u00f3n remota de c\u00f3digo.
ascanbeta.sstiblind.soln = En lugar de insertar la entrada del usuario en la plantilla, util\u00edcela como argumento de renderizado.
ascanbeta.sstiblind.refs = https\://portswigger.net/blog/server-side-template-injection
ascanbeta.sstiblind.alert.recvdcallback.otherinfo = Devoluci\u00f3n de llamada recibida del servidor.

ascanbeta.ssti.name = Server Side Template Injection (SSTI) Plantilla de Inyecci\u00f3n del Lado del Servidor
ascanbeta.ssti.desc = Cuando la entrada del usuario se inserta en la plantilla en lugar de usarse como argumento en la representaci\u00f3n, el motor de plantilla eval\u00faa. Dependiendo del motor de plantillas, puede conducir a la ejecuci\u00f3n remota de c\u00f3digo.
ascanbeta.ssti.soln = En lugar de insertar la entrada del usuario en la plantilla, util\u00edcela como argumento de representaci\u00f3n.
ascanbeta.ssti.refs = https\://portswigger.net/blog/server-side-template-injection
ascanbeta.ssti.alert.otherinfo = Prueba encontrada en [{0}]\n\
contenido\:\n\
[{1}]

ascanbeta.usernameenumeration.name=Posible enumeraci\u00f3n de nombre de usuario
ascanbeta.usernameenumeration.desc=Se pueden enumerar los nombres de usuario, basados en distintas respuestas de HTTP, al momento que se proporcionan  los nombres de usuario v\u00e1lidos e inv\u00e1lidos. Esto aumenta much\u00edsimo la posibilidad de \u00e9xito de ataques de contrase\u00f1a realizados por fuerza bruta, contra el sistema. Se debe tener en cuenta que se pueden disminuir los falsos positivos incrementando la opci\u00f3n 'Fuerza de ataque' en ZAP. Debe comprobar manualmente el campo "Otra Informaci\u00f3n" para saber si esto es un problema. realmente. 
ascanbeta.usernameenumeration.soln=No debe divulgar detalles sobre si un nombre de usuario es v\u00e1lido o no es v\u00e1lido. En particular, para intentos fallidos de inicio de sesi\u00f3n, no distinga entre un usuario no v\u00e1lido y una contrase\u00f1a no v\u00e1lida en el mensaje de error, el t\u00edtulo de la p\u00e1gina, el contenido de la p\u00e1gina, los encabezados HTTP o la l\u00f3gica de redirecci\u00f3n.
ascanbeta.usernameenumeration.refs=https\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/03-Identity_Management_Testing/04-Testing_for_Account_Enumeration_and_Guessable_User_Account.html\n\
http\://sebastian-schinzel.de/_download/ifip-sec2011.pdf
ascanbeta.usernameenumeration.alert.extrainfo=El par\u00e1metro [{0}] [{1}] se encarga de filtrar la informaci\u00f3n acerca de si un usuario existe. Las [{5}] diferencias que se encuentra en el resultado, para e lvalor del nombre de usuario original v\u00e1lido [{2}], y el valor del nombre de usuario no v\u00e1lido [{3}] son\: [{4}]
ascanbeta.usernameenumeration.alert.attack=Manipule el [{0}] campo\: [{1}] y controle la salida 

ascanbeta.elinjection.name = Inyecci\u00f3n Expresi\u00f3n de Lenguaje
ascanbeta.elinjection.desc = El software construye todo o parte de una instrucci\u00f3n de lenguaje de expresi\u00f3n (EL) en una p\u00e1gina de servidor Java (JSP) con entrada influenciado externamente de un componente upstream, pero no neutraliza o incorrectamente neutraliza elementos especiales que podr\u00edan modificar la declaraci\u00f3n de EL previsto antes de ejecutarse. En ciertas versiones de Spring 3.0.5 y anteriores, hab\u00eda una vulnerabilidad (CVE-2011-2730) en que lenguaje de expresi\u00f3n de etiquetas se evaluar\u00edan dos veces, que expone con eficacia cualquier aplicaci\u00f3n de la inyecci\u00f3n EL. Sin embargo, incluso para las versiones posteriores, esta debilidad es posible dependiendo de la configuraci\u00f3n.
ascanbeta.elinjection.soln = Realizar la mejores pr\u00e1cticas de validaci\u00f3n de datos de entrada en la que no se conf\u00eda y para garantizar que se aplica la codificaci\u00f3n de salida cuando llega datos sobre la capa EL, para que el metacaracter sea encontrado por el int\u00e9rprete dentro del contenido del usuario antes de la evaluaci\u00f3n. Los patrones m\u00e1s evidentes para detectar incluyen ${ y \#{, pero puede ser posible codificar o fragmento estos datos.
ascanbeta.elinjection.refs = https\://owasp.org/www-community/vulnerabilities/Expression_Language_Injection\n\
http\://cwe.mitre.org/data/definitions/917.html

ascanbeta.xpathinjection.name=Inyecci\u00f3n XPath

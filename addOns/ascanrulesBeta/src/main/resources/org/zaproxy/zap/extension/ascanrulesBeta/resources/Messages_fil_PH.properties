#X-Generator: crowdin.com
# This file defines the default (English) variants of all of the internationalised messages

ascanbeta.desc=Ang mga Panuntunan sa Aktibong Pag-scan - beta

ascanbeta.backupfiledisclosure.name=Paglilitaw ng Backup ng File
ascanbeta.backupfiledisclosure.desc=Ang isang backup ng file ay isiwalat ng web server
ascanbeta.backupfiledisclosure.soln=Huwag baguhin ang mga file na in-situ sa server ng web, at tiyakin na ang mga hindi kinakailangang mga file (kabilang ang mga nakatagong file) ay aalisin mula sa web server.
ascanbeta.backupfiledisclosure.evidence=Ang isang backup ng [{0}] ay makukuha sa [{1}]

ascanbeta.crossdomain.name=Pag-configure ng Cross-Domain
#the refs cannot be customised for each sub-category (Adobe, Silverlight, etc)
ascanbeta.crossdomain.refs=http\://www.adobe.com/devnet/articles/crossdomain_policy_file_spec.html\nhttp\://www.adobe.com/devnet-docs/acrobatetk/tools/AppSec/CrossDomain_PolicyFile_Specification.pdf\nhttp\://msdn.microsoft.com/en-US/library/cc197955%28v\=vs.95%29.aspx\nhttp\://msdn.microsoft.com/en-us/library/cc838250%28v\=vs.95%29.aspx
ascanbeta.crossdomain.adobe.read.name=Pag-configure ng Cross-Domain - Adobe - Basahin
ascanbeta.crossdomain.adobe.send.name=Ang pag-configure ng Cross-Domain - Adobe - Ipadala
ascanbeta.crossdomain.adobe.desc=Maaaring posible ang posibleng pagpapasok ng kahilingan sa pamamagitan ng Flash/Silverlight sa pamamagitan ng isang misconfiguration sa web server. 
ascanbeta.crossdomain.adobe.read.soln=I-configure ang file na crossdomain.xml upang paghigpitan ang listahan ng mga domain na pinapayagang gumawa ng mga hiling sa cross-domain na basahin sa web server na ito, gamit <allow-access-from domain\="example.com">. Dapat mo lamang bigyan ng access sa "*" (all domains) kung ikaw ay tiyak na ang serbisyong ito ay hindi nagho-host ng anumang access-controlled, personalized, o pribadong data.
ascanbeta.crossdomain.adobe.read.extrainfo=Pinapayagan ng web server ang mga nakakahamak na data ng cross-domain na mga kahilingan sa pagbabasa mula sa mga bahagi ng Flash/Silverlight na nagsilbi mula sa anumang ikatlong partido na domain, sa domain na ito. Kung ang user ng biktima ay naka-log in sa serbisyong ito, ang mga kahina-hinalang read request ay pinoproseso gamit ang mga pribilehiyo ng biktima, at maaaring magresulta sa data mula sa serbisyong ito na nakompromiso ng isang hindi awtorisadong third party na web site, sa pamamagitan ng web browser ng biktima. Ito ay partikular na malamang na maging isang isyu kung ang pagpapatupad ng pagpapatupad ng session na Cookie ay ginagamit. 
ascanbeta.crossdomain.adobe.send.soln=I-configure ang file ng crossdomain.xml upang paghigpitan ang listahan ng mga domain na pinapayagang gumawa ng cross-domain na ipadala (ngunit hindi kinakailangang magbasa) ng mga kahilingan sa web server na ito, gamit <allow-http-request-headers-from domain\="example.com" headers\="Authorization,X-Blahh">. You should only grant access to "*" (all domains) kung ikaw ay tiyak na ang serbisyong ito ay hindi maaaring mahina sa pag-atake ng Cross Site Request Forgery (CSRF).
ascanbeta.crossdomain.adobe.send.extrainfo=Pinapayagan ng web server ang nakahahamak na data ng cross-domain na ipadala (ngunit hindi kinakailangan basahin) ang mga kahilingan na nagmula sa mga bahagi ng Flash/Silverlight na nagsilbi mula sa anumang ikatlong partido na domain, sa domain na ito. Kung ang user ng biktima ay naka-log in sa serbisyong ito, ang mga kahilingan sa pagpapadala ng mga nakakahamak ay pinoproseso gamit ang mga pribilehiyo ng biktima, at maaaring magresulta sa pag-atake ng Cross Site Request Forgery (CSRF), sa pamamagitan ng web browser ng biktima. Ito ay partikular na malamang na maging isang isyu kung ang pagpapatupad ng pagpapatupad ng session na Cookie ay ginagamit.
ascanbeta.crossdomain.silverlight.name=Cross-Domain Misconfiguration - Silverlight
ascanbeta.crossdomain.silverlight.desc=Maaaring posible ang request ng palsipikado na cross-site na palsipikado sa Silverlight, dahil sa maling pag-configure sa web server.
ascanbeta.crossdomain.silverlight.soln=I-configure ang file ng clientaccesspolicy.xml upang paghigpitan ang listahan ng mga domain na pinapayagan na gumawa ng mga kahilingan sa cross-domain sa web server na ito, gamit <domain uri\="https\://example.com" />. You should only grant access to "*" (all domains) kung ikaw ay tiyak na ang serbisyong ito ay hindi nagho-host ng anumang access-controlled, personalized, o pribadong data.
ascanbeta.crossdomain.silverlight.extrainfo=Pinapayagan ng web server ang mga nakakahamak na kahilingan sa cross-domain na nagmumula sa mga sangkap ng Silverlight na nagsilbi mula sa anumang ikatlong partido na domain, sa domain na ito. Kung ang user ng biktima ay naka-log in sa serbisyong ito, ang mga nakakahamak na kahilingan ay naproseso gamit ang mga pribilehiyo ng biktima, at maaaring magresulta sa data mula sa serbisyong ito na nakompromiso ng isang hindi awtorisadong web site ng third party, sa pamamagitan ng mga web browser ng biktima. Maaari rin itong magresulta sa mga pag-atake ng Cross Site Request Forgery (CSRF). Ito ay partikular na malamang na maging isang isyu kung ang pagpapatupad ng pagpapatupad ng session na Cookie ay ginagamit.

ascanbeta.csrftokenscan.name=Anti CSRF Token Scanner
ascanbeta.csrftokenscan.extrainfo.annotation=Ito ay isang alerto sa impormasyon na ang porma ay may isang anotasyon ng seguridad na nagpapahiwatig na hindi nito kailangan ang Token ng anti-CSRF. Ito ay dapat manu-manong sinubukan upang matiyak na ang anotasyon ay tama.

ascanbeta.heartbleed.name=Heartbleed OpenSSL Vulnerability
ascanbeta.heartbleed.desc=Ang pagpapatupad ng TLS sa OpenSSL 1.0.1 bago 1.0.1g ay hindi maayos na pinangangasiwaan ang mga packet ng Heartbeat Extension, na nagpapahintulot sa mga remote attackers na makakuha ng sensitibong impormasyon mula sa memorya ng proseso sa pamamagitan ng mga naka-pack na packet na nagpapalitaw ng buffer over-read, potensyal na ibubunyag ang sensitibong impormasyon.
ascanbeta.heartbleed.soln=I-update sa OpenSSL 1.0.1g o mas bago. Muling na-isyu ang mga sertipiko ng HTTPS. Baguhin ang mga walang-pribadong mga pribadong key at nakabahagi ng mga lihim na key, dahil ang mga ito ay maaaring naka-kompromiso, na walang katibayan ng pagkompromiso sa mga file ng log ng server.
ascanbeta.heartbleed.refs=http\://cvedetails.com/cve-details.php?t\=1&cve_id\=CVE-2014-0160
ascanbeta.heartbleed.extrainfo=Ang kumpirmasyong ito ay nakumpirma sa pamamagitan ng exfiltrating data mula sa server, gamit ang {0}. Ito ay malamang na hindi isang positibong mali.

ascanbeta.HTTPParamPoll.name=Scanner ng Polusyon ng Parameter ng HTTP
ascanbeta.HTTPParamPoll.desc=Ang pag-atake ng HTTP Parameter Polusyon (HPP) ay binubuo ng pag-inject ng mga naka-encode na query string delimiter sa iba pang umiiral na mga parameter. Kung ang isang webaplikasyon ay hindi maayos na sanitize ang input ng user, ang isang nakakahamak na user ay maaaring ikompromiso ang lohika ng aplikasyon upang maisagawa ang alinman sa pag-atake ng client-side o server. Ang isang kinahinatnan ng pag-atake ng HPP ay ang pag-atake ng potensyal na pag-override ng umiiral na hard-code na mga parameter ng HTTP upang baguhin ang pag-uugali ng isang application, pag-bypass ang mga checkpoint ng pagpapatunay ng input, at pag-access at maaaring pagsamantalahan ang mga variable na maaaring direktang maabot.
ascanbeta.HTTPParamPoll.sol=Maayos na sanitize ang input ng user para sa mga delimiter ng parameter
ascanbeta.HTTPParamPoll.alert.attack=Polusyon ng Parameter ng HTTP
ascanbeta.HTTPParamPoll.extrainfo=http\://www.google.com/search?q\=http+parameter+pollution

ascanbeta.insecurehttpmethod.name=Hindi secure na Paraan ng HTTP
ascanbeta.insecurehttpmethod.detailed.name=Walang Pautang HTTP na Paraan - {0}
ascanbeta.insecurehttpmethod.desc=Ang hindi secure na paraan ng HTTP [{0}] ay pinagana sa web server para sa mapagkukunan na ito. Depende sa pagsasaayos ng web server, at ang kalakip na pagpapatupad na may pananagutan sa paghahatid ng mapagkukunan, ito ay maaaring o hindi maaaring maisasama. Ang mga pamamaraan ng TRACK and TRACE ay maaaring gamitin ng isang magsasalakay, upang makakuha ng access sa permiso ng token / session cookie ng isang gumagamit ng application, kahit na ang session cookie ay protektado gamit ang ''HttpOnly'' na bandila. Para sa matagumpay na pag-atake, ang user ng application ay kadalasang gumagamit ng isang mas lumang web browser, o isang web browser na may baluktot na bypass na Same Origin Policy (SOP). Ang ''CONNECT'' na paraan ay maaaring gamitin ng isang web client upang lumikha ng isang HTTP tunnel sa mga website o serbisyo ng ikatlong partido.
ascanbeta.insecurehttpmethod.trace.exploitable.desc=Ang hindi secure na paraan ng HTTP [{0}] ay pinagana para sa mapagkukunan na ito, at magagamit. Ang mga pamamaraan ng TRACK and TRACE ay maaaring gamitin ng isang magsasalakay, upang makakuha ng daan at permiso ng token / session cookie ng isang gumagamit ng application, kahit na ang session cookie ay protektado gamit ang ''HttpOnly'' na bandila. Para sa matagumpay na pag-atake, ang user ng application ay kadalasang gumagamit ng isang mas lumang web browser, o isang web browser na may baluktot na bypass na Same Origin Policy (SOP).
ascanbeta.insecurehttpmethod.connect.exploitable.desc=Ang hindi secure na paraan ng HTTP [{0}] ay pinagana para sa mapagkukunan na ito, at magagamit. Napag-alaman na posible na magtatag ng koneksyon ng tunneled socket sa isang third party service, gamit ang HTTP na paraan. Ito ay magpapahintulot sa serbisyo na magamit bilang isang hindi nakikilalang spam relay, o bilang isang proxy ng web, na nililimitahan ang mga paghihigpit sa network. Pinapayagan din nito na magamit upang maitatag ang isang tunneled VPN, epektibong pagpapalawak ng perimeter ng network upang isama ang mga hindi pinagkakatiwalaang mga bahagi. 
ascanbeta.insecurehttpmethod.extrainfo=Ang pamamaraan ng mga OPTION ay nagsisiwalat sa sumusunod na mga pamamaraan ng HTTP para sa mapagkukunang ito\: [
ascanbeta.insecurehttpmethod.trace.exploitable.extrainfo=Ang isang kahilingan ng TRACE ay ipinadala para sa kahilingan na ito, na may isang custom na halaga ng cookie [{0}]. Ang halaga ng cookie na ito ay isiwalat sa tugon ng HTTP, na nagpapatunay sa kahinaan.
ascanbeta.insecurehttpmethod.connect.exploitable.extrainfo=Ang pamamaraan ng CONNECT ay ginamit upang magtatag ng koneksyon ng socket sa [{0}], sa pamamagitan ng web server.
ascanbeta.insecurehttpmethod.soln=Huwag paganahin ang mga pamamaraan ng hindi secure na paraan tulad ng TRACK, TRACE, at CONNECT sa web server, at tiyakin na ang pagpapatuloy ng pagpapatupad ng serbisyo ay hindi sumusuporta sa mga pamamaraan ng hindi secure.


ascanbeta.integeroverflow.name=Error sa Pag-overlay ng Integer
ascanbeta.integeroverflow.desc=Ang isang kondisyon ng overlay ng integer ay umiiral kapag ang isang integer, na hindi maayos na naka-check mula sa input stream ay ginagamit sa loob ng isang naipon na programa. 
ascanbeta.integeroverflow.soln=Muling isulat ang programang pang-background gamit ang wastong pagsusuri ng laki ng integer na input upang maiwasan ang overflows at hatiin ng 0 mga error. Ito ay mangangailangan ng pag-recompile ng executable ng background.
ascanbeta.integeroverflow.refs=https\://www.owasp.org/index.php/Integer_overflow and http\://projects.webappsec.org/w/page/13246946/Integer%20Overflows.
ascanbeta.integeroverflow.error1=Potensyal na Integer Overflow. Ang kalagayan ng code ay nagbago sa input ng isang mahabang string ng mga random na integer.
ascanbeta.integeroverflow.error2=Potensyal na Integer Overflow. Binago ang code ng katayuan sa input ng isang mahabang string ng mga zero.
ascanbeta.integeroverflow.error3=Potensyal na Integer Overflow. Ang code ng katayuan ay nagbago sa input ng isang mahabang string ng mga bago.
ascanbeta.integeroverflow.error4=Potensyal na Integer Overflow. Ang code ng katayuan ay nagbago sa input ng isang mahabang string ng nines.

ascanbeta.noanticsrftokens.name=Kawalan ng mga Tokens ng Anti-CSRF
ascanbeta.noanticsrftokens.desc=Walang nakitang mga token ng Anti-CSRF sa isang form sa pagsumite ng HTML.

ascanbeta.remotecodeexecution.cve-2012-1823.name=Remote Code Execution - CVE-2012-1823
ascanbeta.remotecodeexecution.cve-2012-1823.desc=Ang ilang mga bersyon ng PHP, kapag na-configure upang patakbuhin ang paggamit ng CGI, ay hindi tama ang humahawak ng mga string ng query na walang kakayahang magamit na "\=" na karakter, na nagpapagana ng arbitrary na pagpapatupad ng code. Sa kasong ito, ang isang utos ng operating system ay sanhi upang maisagawa sa web server, at ang mga resulta ay ibinalik sa web browser. 
ascanbeta.remotecodeexecution.cve-2012-1823.soln=Mag-upgrade sa pinakabagong matatag na bersyon ng PHP, o gamitin ang web server ng Apache at mod_rewrite module upang i-filter ang mga nakakahamak na kahilingan gamit ang direktiba ng "RewriteCond" at "RewriteRule".

ascanbeta.sessionfixation.name=Pag-aayos ng Session
ascanbeta.sessionfixation.desc=Maaaring posible ang pag-aayos ng Session. Kung ang isyu na ito ay nangyayari sa isang login na URL (kung saan pinatutunayan ng user ang kanilang sarili sa application), maaaring maibigay ang URL ng isang magsasalakay, kasama ang isang fixed session id, sa isang biktima, upang ipagpalagay na mamaya ang pagkakakilanlan ng biktima gamit ang ibinigay na session id. Kung ang isyu ay nangyayari sa isang hindi naka-login na pahina, ang URL at fixed session id ay maaari lamang gamitin ng isang magsasalakay upang masubaybayan ang mga aksyon na hindi awtorisadong user. Kung ang kahinaan ay nangyayari sa isang patlang ng cookie o isang field ng form (POST parameter) sa halip na sa isang URL (GET) na parameter, pagkatapos ay ang ilang iba pang mga kahinaan ay maaaring kinakailangan din upang itakda ang patlang ng cookie sa browser ng biktima, upang payagan ang kahinaan upang mapagsamantalahan.
ascanbeta.sessionfixation.soln=1) Pigilan ang magsasalakay mula sa pagkakaroon ng isang session id sa pamamagitan ng pagpapatupad ng mga mahigpit na id ng session, at sa pamamagitan lamang ng paglalaan ng mga session ids sa matagumpay na pagpapatunay sa application.\n2) Ang server ay dapat laging lumikha ng isang bagong session session sa pagpapatunay, hindi alintana kung ang isang session ay nasa lugar na.\n3) Ihambing ang session id sa ilang mga nakikilalang kumbinasyon ng katangian ng client, tulad ng IP address, SSL client certificate.\n4) Ang mga sesyon, kapag nawasak, ay dapat sirain sa server, gayundin sa client.\n5) Ipatupad ang isang mekanismo ng pag-logout na sirain ang lahat ng naunang session para sa client.\n6) Ipatupad ang ganap na oras ng session.\n7) Lumipat mula sa isang URL batay sa isang cookie o form na batay sa session sa pagpapatupad, tulad ng huli ay karaniwang nangangailangan ng karagdagang mga kahinaan, upang maisasakatuparan ng isang pag-atake\n
ascanbeta.sessionfixation.refs=https\://www.owasp.org/index.php/Top_10_2010-A3-Broken_Authentication_and_Session_Management\nhttps\://www.owasp.org/index.php/Session_fixation\nhttp\://www.acros.si/papers/session_fixation.pdf\nhttp\://www.technicalinfo.net/papers/WebBasedSessionManagement.html\nhttps\://www.owasp.org/index.php/Top_10_2010-A9
ascanbeta.sessionfixation.alert.cookie.extrainfo=Itakda ang cookie bilang tugon kapag ang patlang ng cookie na [{0}] ay nakatakda sa NULL\: [{1}]\nAng cookie na itinakda bilang tugon sa halaga ng cookie (valid) na cookie sa kahilingan [{1}] \: [{2}]
ascanbeta.sessionfixation.alert.cookie.extrainfo.loginpage=Ang url kung saan natuklasan ang isyu ay na-flag bilang isang pahina ng logon.
ascanbeta.sessionfixation.alert.url.extrainfo=Ang isang malamang na halaga ng session ay lumitaw sa mga URL sa output ng HTML kapag ang parameter ng URL na pseudo URL [{0}] ay nakatakda sa NULL\: [{1}]\nKapag ang session na ''hiniram'' [{1}] ay ginagamit sa isang kasunod na kahilingan para sa URL na ito, ang isang bagong session ay hindi nilikha.
ascanbeta.sessionfixation.alert.url.extrainfo.loginpage=Ang url kung saan natuklasan ang isyu ay na-flag bilang isang pahina ng logon.
ascanbeta.sessionfixation.alert.attack={0} patlang\: [{1}]
#Exposed Session Id messages
ascanbeta.sessionidexposedinurl.name=Exposed Session ID
ascanbeta.sessionidexposedinurl.desc=Ang isang session id ay nakalantad sa URL. Sa pamamagitan ng pagbabahagi ng naturang URL ng website (na naglalaman ng session id), maaaring hindi sinasadya ng isang naiiba na gumagamit ang pag-access sa kanilang data, pag-kompromiso sa pagiging kompidensyal nito, integridad, at availability. Lumilitaw din ang mga URL na naglalaman ng tagatukoy ng session sa mga bookmark ng web browser, mga file ng log ng web server, at mga file ng log ng proxy server. 
ascanbeta.sessionidexposedinurl.soln=Gumamit ng mas ligtas na pagpapatupad ng pamamahala ng session, tulad ng isa na gumagamit ng cookies ng session, na hindi kasing madaling ibinabahagi nang hindi sinasadya, at hindi karaniwang lumilitaw sa mga file ng log ng server o mga bookmark ng web browser.
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidexposedinurl.refs=https\://www.owasp.org/index.php/Top_10_2010-A3-Broken_Authentication_and_Session_Management
ascanbeta.sessionidexposedinurl.alert.extrainfo={0} field [{1}] naglalaman ng isang nakalantad na tagatukoy ng session [{2}]
ascanbeta.sessionidexposedinurl.alert.extrainfo.loginpage=Ang url kung saan natuklasan ang isyu ay na-flag bilang isang pahina ng logon.
ascanbeta.sessionidexposedinurl.alert.attack={0} patlang\: [{1}]
#Session Id Cookie not sent securely
ascanbeta.sessionidsentinsecurely.name=Sesyon ID na nai-transmit na hindi protektado
ascanbeta.sessionidsentinsecurely.desc=Ang sesyon id ay pwedeng maipadala sa pamamagitan ng hindi maaasahan na mekanismo.  Sa case na ang cookie na ipinadala sa pakiusap,  nayayari ito kung ang HTTP, sa halip na HTTPS ay ginamit. Sa case ng ang cookie ay pinadala sa server na tugon (kung ang URL ay binago ang setting na nakapangalan sa parameter field na NULL), ang 'secure flag ay hindi naka-set, ito ay pumapayag sa cookie na maipadala mamaya sa HTTP sa halip na sa HTTPS. Ito ay maaring payagan ang passive eavesdropper sa network path para maka kuha ng buong access sa sesyon ng biktima.  
ascanbeta.sessionidsentinsecurely.soln=1) Gamitin ang pinakabagong magagamit na bersyon sa SSL/TLS (para sa HTTPS) para sa lahat ng mga pahina na ang sesyon id ay namamahagi sa pagitan ng browser at ng web server.\n2) Huwag payagan ang komunikasyon na pilitin na hindi ma encrypt ang HTTP protocol.\n3) Gamitin ang 'secure' na flag kung ikaw ay mag set sa cookie na naglalaman na session id, para maiwasan ang kasunod na mga transmisyon sa hindi secure na mekanismo.\n4) I-abante ang hindi secure na HTTP na pahina na mga kahilingan para ma-secure ang HTTPS na tugon ng pahina.  
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidsentinsecurely.refs=https\://www.owasp.org/index.php/Top_10_2010-A3-Broken_Authentication_and_Session_Management\nhttps\://www.owasp.org/index.php/Top_10_2010-A9
ascanbeta.sessionidsentinsecurely.alert.extrainfo=sesyon na identifer {0} field [{1}], halaga [{2}] ay posibleng mapadala sa pamamagitan ng hindi secure na mekanismo.  
ascanbeta.sessionidsentinsecurely.alert.extrainfo.secureflagnotset=Ang 'secure' flag ay hindi nai-set sa sesyon na cookie na ibinigay ng server.
ascanbeta.sessionidsentinsecurely.alert.extrainfo.loginpage=Ang url kung saan natuklasan ang isyu ay na-flag bilang isang pahina ng logon.
ascanbeta.sessionidsentinsecurely.alert.attack={0} patlang\: [{1}]
#Session Id Cookie accessible by JavaScript
ascanbeta.sessionidaccessiblebyjavascript.name=Sesyon ID ng Cookie na magagamit sa JavaScript
ascanbeta.sessionidaccessiblebyjavascript.desc=Ang Sesyon ID cookie na ipinadala ng server (kapag ang URL na ito ay binagong mga setting na nakapangalan sa parameter field na NULL) ito ay posibleng mapasukan ng JavaScript sa client. Kaugnay sa isa pang kahinaan, ito ay maaring payagan ng sesyon upang hijacked.  
ascanbeta.sessionidaccessiblebyjavascript.soln=1) Gamitin ang 'httponly na flag kung ang setting sa cookie ay naglalaman ng isang sesyon id, upang maiwasan ang mga ito mula sa pagiging ma-access sa JavaScript sa web browser.  
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidaccessiblebyjavascript.refs=
ascanbeta.sessionidaccessiblebyjavascript.alert.extrainfo=sesyon identifier {0} field [{1}], halaga [{2}] ay ma-access gamit ang JavaScript sa web browser
ascanbeta.sessionidaccessiblebyjavascript.alert.extrainfo.loginpage=Ang url kung saan natuklasan ang isyu ay na-flag bilang isang pahina ng logon.
ascanbeta.sessionidaccessiblebyjavascript.alert.attack={0} patlang\: [{1}]
#Session Id Cookie Expiry
ascanbeta.sessionidexpiry.name=Sesyon ID na Expiry Time/Max-Age ay sumobra
ascanbeta.sessionidexpiry.desc=Ang Sesyon ID sa cookie na ipinadala ng server (kapag ang URL na ito ay binago sa pamamagitan ng pagtatakda ng parameter na field sa NULL) ay itinakda para maging balido para sa isang sobrang tagal na panahon. Ito ay maaring pagsasamantalahan ng attacker kung ang user ay nakakalimot mag-log out, kung ang lumabas na pag-andar ay hindi tama na sirain ang sesyon, o kung ang mga id ng sesyon ay nakompromiso sa ilang iba pang mga paraan.     
ascanbeta.sessionidexpiry.soln=1) Gamitin ang 'Expire' o Max-Age' na cookie na mga directive na kung ang setting na cookie ang naglalaman na isang sesyon id, para ito ay maiwasan na pwedeng gamitin para sa pagpatagal ng punto ng oras.\n2) Pasiguro na ang mga logout na mga functionality ay umiiral, at ito ay tama ng magwawasak ng sesyon.\n3) Gamitin ang ibang mga iniiwasan na mga sukat para ito ay mapatunayan na hindi isang sesyon id ay nakumprimiso, ito ay nagdudulot ng paggamit muli.
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidexpiry.refs=
ascanbeta.sessionidexpiry.alert.extrainfo=sesyon identifier {0} patlang [{1}], halaga [{2}] ay maaring ma-access hanggang [{3}] (mula ang cookie ay natanggap sa {4}), maliban ang sesyon ay nasira.
ascanbeta.sessionidexpiry.alert.extrainfo.loginpage=Ang url kung saan natuklasan ang isyu ay na-flag bilang isang pahina ng logon.
ascanbeta.sessionidexpiry.alert.attack={0} patlang\: [{1}]
ascanbeta.sessionidexpiry.browserclose=i-browse ang sarado
ascanbeta.sessionidexpiry.timemorethanoneweek=Higit na isang linggo
ascanbeta.sessionidexpiry.timemorethanoneday=Higit na isang araw
ascanbeta.sessionidexpiry.timemorethanonehour=Higit na isang oras
ascanbeta.sessionidexpiry.timelessthanonehour=Mas mababa sa oras
ascanbeta.sessionidexpiry.timeexpired=Paso na

ascanbeta.shellshock.name=Malayong Code pagpapatupad - Shell Shock
ascanbeta.shellshock.desc=Ang server ay nagpapatakbo ng isang bersyon ng Bash shell na nagbibigay-daan sa mga malayong mga attaker na magsagawa ng arbitrary code 
ascanbeta.shellshock.extrainfo=Miula CVE-2014-6271\: GNU Bash sa pamamgitan ng 4.3 nagpoproseso ng mga trailing ng mga string matapos ang mga kahulugan ng mga values sa mga environment ng mga variables, na nagpapahintulot ng malayong mga attacker na nagsasagawa ng arbitrary code sa pamamagitan ng isang crafted na environment, tulad ng demonstrasyon sa vectors na kinasasangkutan ng ForceCommand feature sa OpenSSH sshd, ang mod_cgi na mga modyul sa Apche HTTP Server, ang mga script ay naka execute gamit ang hindi naka specify na mga DHCP clients, at ibang mga situation na setting ng environment na nagaganap sa kabila hanggang sa pribilehiyo mula sa Bash na execution, aka "ShellShock."Paunawa\: ang orihinal na ayusin para sa mga isyung hindi tama\: CVE-2014-7169 ay tinalaga upang masakop ang mga kahinaan ay pa rin sa kasalukuyan matapos ang maling pag-ayos.
ascanbeta.shellshock.soln=I-update ang Bash sa server sa pinakabagong bersyon
ascanbeta.shellshock.ref=http\://web.nvd.nist.gov/view/vuln/detail?vulnId\=CVE-2014-6271\nhttp\://www.troyhunt.com/2014/09/everything-you-need-to-know-about.html
ascanbeta.shellshock.timingbased.evidence=Gamitin ang ateke, isang abala sa [{0}] na milliseconds ay induced at na-detect

ascanbeta.sqlinjection.mysql.name=SQL Injection - MySQL
ascanbeta.sqlinjection.hypersonic.name=SQL Injection - Hypersonic SQL
ascanbeta.sqlinjection.oracle.name=SQL Injection - Oracle
ascanbeta.sqlinjection.postgres.name=SQL Injection - PostgreSQL
ascanbeta.sqlinjection.desc=Maaaring posible ang SQL injection
ascanbeta.sqlinjection.soln=Huwag pinagkakatiwalaan ang input ng client side, kahit na may pagpapatunay sa panig ng client.\nSa pangkalahatan, suriin ang uri ng lahat ng data sa hangganan ng server.\nKung ang application ay gumagamit ng JDBC, gamitin ang PreparedStatement o CallableStatement, na may mga parameter na dumaan sa '?'\nKung ang aplikasyon ay gumagamit ng ASP, gamitin ang ADO Command Objects na may malakas na uri ng checking at parameterized query.\nKung magagamit ang mga naitabing Procedure ng database, gamitin ang mga ito.\nHuwag *hindi* pagsamahin ang mga string sa mga query sa naka-imbak na pamamaraan, o gamitin ang 'exec', 'exec immediate', o katumbas na pag-andar\!\nHuwag lumikha ng mga dynamic na SQL query gamit ang simpleng string concatenation.\nI-Escape ang lahat ng data na natanggap mula sa client.\nMag-apply ng 'allow list' ng mga pinapahintulutang character, o isang 'deny list' ng mga hindi pinahintulutang mga character sa input ng user.\nIlapat ang pribilehiyo ng hindi bababa sa pribilehiyo sa pamamagitan ng paggamit ng hindi bababa sa privileged database user posible.\nSa partikular, iwasan ang paggamit ng mga taga-gamit ng database ng 'sa' o 'db-owner'. Hindi nito inalis ang iniksyon ng SQL, ngunit binabawasan ang epekto nito.\nIbigay ang minimum na pag-access sa database na kinakailangan para sa application.
ascanbeta.sqlinjection.refs=https\://www.owasp.org/index.php/Top_10_2010-A1\nhttps\://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet
#ascanbeta.sqlinjection.alert.errorbased.attack={1}
ascanbeta.sqlinjection.alert.errorbased.differentiation.attack=Orihinal na halaga\: [{0}] Binago na halaga [{1}]. Hawak ng Halaga\: [{2}]
ascanbeta.sqlinjection.alert.booleanbased.attack=patlang\: [{0}], halaga [{1}]
ascanbeta.sqlinjection.alert.unionbased.attack=[{0}] patlang\: [{1}], halaga [{2}]
ascanbeta.sqlinjection.alert.errorbased.extrainfo=RDBMS [{0}] malamang, ibinigay ang maling mensahe ng fragment [{1}] sa mga resulta ng HTML
ascanbeta.sqlinjection.alert.unionbased.extrainfo=RDBMS [{0}] malamang, ibinigay ang UNION-specific na mensahe na fragment [{1}] sa mga resulta ng HTML
ascanbeta.sqlinjection.alert.errorbased.httpstatuscode.extrainfo=HIndi nabago ang mensahe ay ibinigay sa katayuan ng HTTP [{0}], binago ang mensahe na ibinigay na katayuan ng HTTP [{1}]
ascanbeta.sqlinjection.alert.errorbased.differentiation.extrainfo=Hindi nabago ang mensahe ay ibinigay ang katayuan ng HTTP [{0}], haba ng katawan [{1}], binago na mensahe ay ibinigay sa HTTP na katayuan [{2}], haba ng katawan [{3}]. Ang pangatlong (non-SQL Injection ay naglalaman ng halaga) ibibigay ang HTTP na katayuan [{4}], haba ng katawan [{5}]
ascanbeta.sqlinjection.alert.booleanbased.extrainfo=Ang pahina ng mga resulta ay matagumpay minamanipula gamit ang boolean na mga kondisyon [{0}] at [{1}]
ascanbeta.sqlinjection.alert.timebased.extrainfo=Ang oras ng query ay nakokontrol gamit ang parameter na halaga [{0}], na naging sanhi ng kahilingan na kumuha ng [{1}] milliseconds, kapag ang orihinal na hindi binago na query na may halaga [{2}] ay umabot sa [{3}] milliseconds 

ascanbeta.sourcecodedisclosure.desc=Ang source code para sa kasalukuyang pahina ay isiwalat ng web server

ascanbeta.sourcecodedisclosurecve-2012-1823.name=Source Code Disclosure - CVE-2012-1823
ascanbeta.sourcecodedisclosurecve-2012-1823.desc=Ibang mga PHP na mga bersyon, na kung na-configure ay ito ay pinagana gamit ang CGI, huwag nang hawakan ng maayos ang query na mga string na nakukulang ng unescaped "-" na karakter, na nagpapagana ng PHP source code disclosure, at ang arbitrary code excution. sa halimbawang ito, ang mga laman ng PHP file ay maglingod ng direkta sa web browser. Ang output ay karamihan naglalaman ng PHP, Bagamat ito ay naglalaman din ng straight HTML.
ascanbeta.sourcecodedisclosurecve-2012-1823.soln=Mag-upgrade sa pinakabagong matatag na bersyon ng PHP, o gamitin ang web server ng Apache at mod_rewrite module upang i-filter ang mga nakakahamak na kahilingan gamit ang direktiba ng "RewriteCond" at "RewriteRule".

ascanbeta.sourcecodedisclosure.svnbased.name=Source Code Disclosure - SVN
ascanbeta.sourcecodedisclosure.svnbased.soln=Tiyakin na ang SVN metadata na mga file ay hindi naipadala sa web server o application server
ascanbeta.sourcecodedisclosure.svnbased.extrainfo=Ang source code ay para sa [{0}] ay matatagpuan sa [{1}]

ascanbeta.sourcecodedisclosurewebinf.name=Source Code Disclosure - /WEB-INF folder
ascanbeta.sourcecodedisclosurewebinf.desc=Java source code ay ibinunyag sa web server ng Java class na mga files na nasa WEB-INF folder. Ang class na mga file ay pwedeng ma dis-assembled sa ginawang source code na alin na naka dikit na magtutugma sa orihinal na source code.  
ascanbeta.sourcecodedisclosurewebinf.soln=Ang web server ay dapat nakaayos na hindi maglingkod sa /WEB-INF o nilalaman nito sa mga browser ng web. dahil ito ay naglalaman ng sensitibong impormasyon tulad ng tinipon na Java source code at mg akatangian ng file na maaring maglaman ng mga kredensyal. Mga klase ng Java na nakatalaga sa mga aplikasyon na ito ay dapat maging obfuscated, bilang isang karagdagang patong ng pagtatanggol sa isang "pagtatanggol-nang malalim" na diskarte.

ascanbeta.sourcecodedisclosurewebinf.propertiesfile.name=Properties File Disclosure - /WEB-INF folder
ascanbeta.sourcecodedisclosurewebinf.propertiesfile.desc=Ang Java class na nasa /WEB-INF folder ay ibinunyag ang presence sa katangian ng file. Maga katangian ng file ay hindi maging hayag sa publiko, at karaniwang ay nag lalaman ng mga kumpigurasyon ng impormasyon m ang mga kredensyal ng aplikasyon o crypyographic keys.   
ascanbeta.sourcecodedisclosurewebinf.propertiesfile.soln=Ang web sever na ito ay dapat nakaayos hindi maglingkod sa /WEB-INF folder o nilalaman nito sa mga web browser. Maari din itong maging posible upang alisin ang mga folder ng /WEB-INF folder.  
ascanbeta.sourcecodedisclosurewebinf.propertiesfile.extrainfo=Ang pagtukoy sa mga katangian ng file ay matatagpuan sa dis-nakatipong Java source code para sa mga klase ng java [{0}].

ascanbeta.usernameenumeration.name=Posibleng Username na pagbibilang
ascanbeta.usernameenumeration.desc=Ito ay maaring posibleng isa-isahin ang mga username, batay sa magkakaibang HTTP na mga sagot kapag naglaan ng balido o imbalidong mga username. Ito ay lubhang madagdagan ang posibilidad ng tagumpay ng password ng pagpwersa ng taong ganid na pag-aatake laban sa system. Tandaan na ang maling positibo maaring kung minsan ay mababawasan ng pagtaas sa 'Atake ng lakas' na Opsyon sa ZAP. Mangayaring suriin nang manu-mano ang 'Other info' field upang kumpirmahin kung ito ay talagang isang isyu. 
ascanbeta.usernameenumeration.soln=Huwag ibubunyag ang mga detalye ng kung isang username ay balido o hindi balido. Higit sa lahat, para sa mga bigong pag-login pagtatangka, hindi ikumpara ang invalid user at isang imbalidong password sa mensahe ng error, pamagat ng pahina, nilalaman ng mga pahina, HTTP ulunanm o redirection na lohika.
ascanbeta.usernameenumeration.refs=https\://www.owasp.org/index.php/Testing_for_user_enumeration_%28OWASP-AT-002%29\nhttp\://sebastian-schinzel.de/_download/ifip-sec2011.pdf
ascanbeta.usernameenumeration.alert.extrainfo=[{0}] parameter [{1}] ang may-kinalaman sa impormasyon sa kung umiiral ang isang user na umiiral. Ang [{5}] pagkakaiba ng output, para sa mga balidong orihinal na username na halaga [{2}], at imbalidong username na halaga [{3}] ay mga
ascanbeta.usernameenumeration.alert.attack=Manipulahin ang [{0}] field\: [{1}] at subaybayan ang output 

ascanbeta.paddingoracle.name=Generic Padding Oracle
ascanbeta.paddingoracle.desc=Sa pagmamagitan ng pagmanipula sa padding sa encrypted na string, ang isang attacker ay magsasagawa upang makabuo ng isang mali na mensahe na nagpapahiwatig ng isang malamang na kahinaan sa 'padding sa oracle'. Tulad ng kahinaan ay maaring makaapekto sa anumang aplikasyon o balangkas na ginagamit ng pagsasakripta nag-aakalang, tulad ng ilang mga bersyon ng ASP.net, Java Server Faces, at Mono. Ang attacker ay may issue sa pag decrypt ng data at pag-recover ng mga encryption key, posibleng pagtingin at pagbago ng kumpidensyal na data. Ang plugin at dapat titikan ang MS10-070 padding oracle vulnerability sa ASP.net kung ang CustomErrors ay pinagana para sa ganun.
ascanbeta.paddingoracle.soln=I-update ang mga apektadong server software, o baguhin ang mga script para sila ay maayos na pag-validate sa encrypted na data bago sumubok ng pag descrypton.
ascanbeta.paddingoracle.refs=http\://netifera.com/research/\nhttp\://www.microsoft.com/technet/security/bulletin/ms10-070.mspx\nhttp\://www.mono-project.com/Vulnerabilities\#ASP.NET_Padding_Oracle\nhttps\://bugzilla.redhat.com/show_bug.cgi?id\=623799

ascanbeta.elinjection.name=Expression Language Injection
ascanbeta.elinjection.desc=Ang software na gumagawa ng lahat o parte ng isang expression ng wika (EL) pahayag na nasa Java Server Page (JSP) paggamit ng externally-influenced na input galing sa upstream component, pero ito ay hindi naka-nuetralize o hindi sakto ang pag-nuetralize ng special na mga elemento na posibleng makapagbago ng intended EL Language na mga tag na mag-evaluate ng dalawang beses, na epektibong naglalabas ng kahit anong aplikasyon sa EL injection. Pero, kahit na para sa lahat ng mga bersyon, itong kahinaan ay posibleng mag depende sa configuration.
ascanbeta.elinjection.soln=Gawin ang pag-validate ng data na magandang praktis laban sa hindi pinagkakatiwalaan na mga pagpasok at pasiguro na ang output encoding ay na-apply kung ay data ay darating sa EL layer, upang walang metacharacter ang mahanap sa interpreset sa loob ng user content bago ang evaluation. Ang pinaka obvious na mga pattern ay na-derect sa pagsama ${ and \#{, pero ito ay posibleng maka encode o fragment sa data na ito.
ascanbeta.elinjection.refs=https\://www.owasp.org/index.php/Expression_Language_Injection\nhttp\://cwe.mitre.org/data/definitions/917.html

ascanbeta.xxeplugin.name=XML External Entity Attack
ascanbeta.xxeplugin.nocallback=callback na functionality ay hindi magagamit

ascanbeta.xpathinjectionplugin.name=XPath Injection


#X-Generator: crowdin.com
# This file defines the default (English) variants of all of the internationalised messages

ascanbeta.desc=R\u00e8gles de scan actif - b\u00eata

ascanbeta.backupfiledisclosure.name=Divulgation de fichier de sauvegarde
ascanbeta.backupfiledisclosure.desc=Une sauvegarde du fichier a \u00e9t\u00e9 d\u00e9voil\u00e9e par le serveur web
ascanbeta.backupfiledisclosure.soln=Ne modifiez pas les fichiers in situ sur le serveur web, et faites en sorte que les fichiers inutiles (y compris les fichiers cach\u00e9s) soient supprim\u00e9s du serveur web.
ascanbeta.backupfiledisclosure.evidence=Une sauvegarde de [{0}] est disponible \u00e0 [{1}]

ascanbeta.crossdomain.name=Mauvaise configuration inter-domaines
#the refs cannot be customised for each sub-category (Adobe, Silverlight, etc)
ascanbeta.crossdomain.refs=http\://www.adobe.com/devnet/articles/crossdomain_policy_file_spec.html\nhttp\://www.adobe.com/devnet-docs/acrobatetk/tools/AppSec/CrossDomain_PolicyFile_Specification.pdf\nhttp\://msdn.microsoft.com/en-US/library/cc197955%28v\=vs.95%29.aspx\nhttp\://msdn.microsoft.com/en-us/library/cc838250%28v\=vs.95%29.aspx
ascanbeta.crossdomain.adobe.read.name=Mauvaise configuration inter-domaine - Adobe - Read
ascanbeta.crossdomain.adobe.send.name=Mauvaise configuration inter-domaine - Adobe - Send
ascanbeta.crossdomain.adobe.desc=Contrefa\u00e7on de requ\u00eate inter-site de type Flash/Silverlight possible, en raison d'un probl\u00e8me de configuration sur le serveur web. 
ascanbeta.crossdomain.adobe.read.soln=Configurez le fichier crossdomain.xml pour restreindre la liste des domaines autoris\u00e9s \u00e0 faire des requ\u00eates inter-domaines en lecture \u00e0 ce serveur web, \u00e0 l'aide de <allow-access-from domain\="example.com">. Vous devriez donner uniquement acc\u00e8s \u00e0 "*" (tous domaines) si vous \u00eates certain que ce service n'h\u00e9berge pas des donn\u00e9es sous contr\u00f4le d'acc\u00e8s, personnalis\u00e9es ou priv\u00e9es.
ascanbeta.crossdomain.adobe.read.extrainfo=Le serveur internet permet des requ\u00eates inter-domaines malveillantes pour la lecture de donn\u00e9es en provenance des composants Flash/Silverlight, servies de n'importe quel domaine de tierce partie \u00e0 ce domaine. Si l'utilisateur et victime est connect\u00e9 \u00e0 ce service, les requ\u00eates de lecture malveillantes sont trait\u00e9es en utilisant les privil\u00e8ges de la victime, ce qui conduirait \u00e0 la compromission des donn\u00e9es de ce service par un site internet tiers non autoris\u00e9, via le navigateur internet de la victime. Ceci sera d'autant plus probl\u00e9matique si une impl\u00e9mentation de session bas\u00e9e sur les cookies est utilis\u00e9e. 
ascanbeta.crossdomain.adobe.send.soln=Configurez le fichier crossdomain.xml pour restreindre la liste des domaines autoris\u00e9s \u00e0 faire  des requ\u00eates d'envoi inter-domaines (mais pas n\u00e9cessairement de lecture) \u00e0 ce serveur internet, en utilisant <allow-http-request-headers-from domain\="example.com" headers\="Authorization,X-Blahh">. Vous ne devriez donner acc\u00e8s \u00e0 "*" (tous domaines) que si vous \u00eates certain que ce service n'est pas vuln\u00e9rable \u00e0 l'usurpation de requ\u00eates inter-site (Cross Site Request Forgery - CSRF).
ascanbeta.crossdomain.adobe.send.extrainfo=Le serveur internet permet des requ\u00eates inter-domaines malveillantes pour la lecture (mais pas  n\u00e9cessairement pour l'\u00e9criture) de donn\u00e9es en provenance des composants Flash/Silverlight, servies de n'importe quel domaine d'une tierce partie \u00e0 ce domaine. Si l'utilisateur et victime est connect\u00e9 \u00e0 ce service, les requ\u00eates d'envoi malveillantes sont trait\u00e9es en utilisant les privil\u00e8ges de la victime, conduisant ainsi \u00e0 des attaques de type contrefa\u00e7on de requ\u00eates inter-site (CSRF) via le navigateur de la victime. Ceci est particuli\u00e8rement probl\u00e9matique si l'impl\u00e9mentation de la session est bas\u00e9e sur les cookies.
ascanbeta.crossdomain.silverlight.name=Mauvaise configuration inter-domaine - Silverlight
ascanbeta.crossdomain.silverlight.desc=Contrefa\u00e7on de requ\u00eate inter-site de type Silverlight possible, en raison d'un probl\u00e8me de configuration sur le serveur web.
ascanbeta.crossdomain.silverlight.soln=Configurez le fichier clientaccesspolicy.xml pour restreindre la liste des domaines autoris\u00e9s \u00e0 faire des requ\u00eates inter-domaines en lecture \u00e0 ce serveur web, \u00e0 l'aide de <domain uri\="https\://example.com" />. Vous devriez donner acc\u00e8s \u00e0 "*" (tous domaines) que si vous \u00eates certain que ce service n'h\u00e9berge pas des donn\u00e9es sous contr\u00f4le d'acc\u00e8s, personnalis\u00e9es ou priv\u00e9es.
ascanbeta.crossdomain.silverlight.extrainfo=Le serveur internet permet des requ\u00eates inter-domaines malveillantes pour la lecture en provenance de composants Silverlight, envoy\u00e9es de n'importe quel domaine d'une tierce partie \u00e0 ce domaine. Si l'utilisateur et victime est connect\u00e9 \u00e0 ce service, les requ\u00eates sont trait\u00e9es en utilisant les privil\u00e8ges de la victime, ce qui conduirait \u00e0 la compromission des donn\u00e9es de ce service par un site internet tiers non autoris\u00e9, via le navigateur internet de la victime. Il peut \u00e9galement se pr\u00e9senter des attaques de type contrefa\u00e7on de requ\u00eates inter-site (CSRF). Ceci sera d'autant plus probl\u00e9matique si l'impl\u00e9mentation de la session est  bas\u00e9e sur les cookies.

ascanbeta.csrftokenscan.name=Scanner de jetons anti-CSRF
ascanbeta.csrftokenscan.extrainfo.annotation=Ceci est une alerte informative car le formulaire a une annotation de s\u00e9curit\u00e9 indiquant qu'il n'a pas besoin de jeton anti-CSRF. Ceci devrait \u00eatre test\u00e9 manuellement pour \u00eatre s\u00fbr que cette annotation est correcte.

ascanbeta.heartbleed.name=Vuln\u00e9rabilit\u00e9 OpenSSL Heartbleed
ascanbeta.heartbleed.desc=L'impl\u00e9mentation de TLS dans OpenSSL 1.0.1 avant 1.0.1g ne g\u00e8re pas correctement les paquets Heartbeat Extension, ce qui permet \u00e0 des attaquants distants d'obtenir des informations sensibles de la m\u00e9moire de processus via des paquets con\u00e7us pour d\u00e9clencher un d\u00e9passement de tampon, avec le potentiel de divulguer des informations sensibles.
ascanbeta.heartbleed.soln=Mettez \u00e0 jour OpenSSL avec la version 1.0.1g ou ult\u00e9rieure. R\u00e9-\u00e9mettez les certificats HTTPS. Changer les cl\u00e9s priv\u00e9es asym\u00e9triques et les cl\u00e9s secr\u00e8tes partag\u00e9es, car elles peuvent avoir \u00e9t\u00e9 compromises, sans aucun avertissement dans les fichiers journaux du serveur.
ascanbeta.heartbleed.refs=http\://cvedetails.com/cve-details.php?t\=1&cve_id\=CVE-2014-0160
ascanbeta.heartbleed.extrainfo=Ce probl\u00e8me a \u00e9t\u00e9 confirm\u00e9 par l''exfiltration de donn\u00e9es depuis le serveur, \u00e0 l''aide de {0}. Un faux positif est peu probable.

ascanbeta.HTTPParamPoll.name=Analyseur de pollution de param\u00e8tre HTTP
ascanbeta.HTTPParamPoll.desc=Les attaques par pollution de param\u00e8tre HTTP (HPP\: HTTP Parameter Pollution) consistent \u00e0 injecter des d\u00e9limiteurs de cha\u00eene de requ\u00eate encod\u00e9e dans des param\u00e8tres existants. Si une application web n'assaini pas bien les entr\u00e9es d'utilisateur, un utilisateur malveillant peut compromettre la logique de l'application pour lancer des attaques c\u00f4t\u00e9 client ou c\u00f4t\u00e9 serveur. Une cons\u00e9quence des attaques HPP est que l'agresseur peut potentiellement substituer des param\u00e8tres HTTP existants cod\u00e9s en dur pour modifier le comportement d'une application, contourner les points de contr\u00f4le de validation d'entr\u00e9e et acc\u00e9der et exploiter \u00e9ventuellement des variables qui peuvent \u00eatre hors de port\u00e9e directe.
ascanbeta.HTTPParamPoll.sol=Assainissez correctement les d\u00e9limiteurs de param\u00e8tre des donn\u00e9es d'utilisateur 
ascanbeta.HTTPParamPoll.alert.attack=Pollution de param\u00e8tre HTTP
ascanbeta.HTTPParamPoll.extrainfo=http\://www.google.com/search?q\=http+parameter+pollution

ascanbeta.insecurehttpmethod.name=M\u00e9thode HTTP non s\u00e9curis\u00e9e
ascanbeta.insecurehttpmethod.detailed.name=M\u00e9thode HTTP non s\u00e9curis\u00e9e - {0}
ascanbeta.insecurehttpmethod.desc=La m\u00e9thode HTTP non s\u00e9curis\u00e9e [{0}] est activ\u00e9e sur le serveur internet pour cette ressource. Selon la configuration du serveur et l''impl\u00e9mentation du service de la ressource, cela pourrait exploitable ou pas. Les m\u00e9thodes TRACK et TRACE peuvent \u00eatre utilis\u00e9es par un attaquant pour acc\u00e9der au jeton d''autorisation/cookie de session d''un utilisateur de l''application, m\u00eame si le cookie de session est prot\u00e9g\u00e9 \u00e0 l''aide de l''indicateur ''HttpOnly''. Pour que l''attaque r\u00e9ussisse, l''utilisateur de l''application doit g\u00e9n\u00e9ralement utiliser un navigateur internet plus ancien, ou un navigateur qui a une faille dans la politique de m\u00eame origine (SOP). La m\u00e9thode ''CONNECT'' peut \u00eatre utilis\u00e9e par un client int ernetpour cr\u00e9er un tunnel HTTP vers des sites ou des services tiers.
ascanbeta.insecurehttpmethod.trace.exploitable.desc=La m\u00e9thode HTTP non s\u00e9curis\u00e9e [{0}] est activ\u00e9e pour cette ressource et est exploitable. Les m\u00e9thodes TRACK and TRACE peuvent \u00eatre utilis\u00e9es par un attaquant pour acc\u00e9der au  jeton d''autorisation/cookie de session d''un utilisateur de l''application, m\u00eame si le cookie de session est prot\u00e9g\u00e9 \u00e0 l''aide de l''indicateur ''HttpOnly''. Pour que l''attaque r\u00e9ussisse, l''utilisateur de l''application doit g\u00e9n\u00e9ralement utiliser un navigateur internet plus ancien, ou un navigateur qui a une faille dans la politique de m\u00eame origine (SOP).
ascanbeta.insecurehttpmethod.connect.exploitable.desc=La m\u00e9thode HTTP non s\u00e9curis\u00e9e [{0}] est activ\u00e9e pour cette ressource et est exploitable. Il s''est av\u00e9r\u00e9 possible d''\u00e9tablir une connexion tunnel par un socket vers le service d''un tiers, gr\u00e2ce \u00e0 cette m\u00e9thode HTTP.  Cela permettrait au service d''\u00eatre utilis\u00e9 comme un relais de spam anonyme, ou comme un proxy web, contournant ainsi les restrictions du r\u00e9seau. Il serait \u00e9galement de l''utiliser pour \u00e9tablir un tunnel VPN, \u00e9tendant en fait le p\u00e9rim\u00e8tre du r\u00e9seau pour y inclure des composants indignes de confiance. 
ascanbeta.insecurehttpmethod.extrainfo=La m\u00e9thode OPTIONS a d\u00e9voil\u00e9 les m\u00e9thodes HTTP suivantes pour cette ressource\: [{0}]
ascanbeta.insecurehttpmethod.trace.exploitable.extrainfo=Une requ\u00eate TRACE a \u00e9t\u00e9 envoy\u00e9e pour cette requ\u00eate avec une valeur de cookie personnalis\u00e9e [{0}]. Cette valeur de cookie a \u00e9t\u00e9 d\u00e9voil\u00e9e dans la r\u00e9ponse HTTP, confirmant la vuln\u00e9rabilit\u00e9.
ascanbeta.insecurehttpmethod.connect.exploitable.extrainfo=La m\u00e9thode CONNECT a \u00e9t\u00e9 utilis\u00e9e pour \u00e9tablir une connexion de socket vers [{0}], via le serveur internet.
ascanbeta.insecurehttpmethod.soln=D\u00e9sactivez les m\u00e9thodes non s\u00e9curis\u00e9es comme TRACK, TRACE et CONNECT sur le serveur internet et faites en sorte que l'impl\u00e9mentation sous-jacente du service ne supporte pas de m\u00e9thodes non s\u00e9curis\u00e9es.


ascanbeta.integeroverflow.name=Erreur de d\u00e9bordement d'entier
ascanbeta.integeroverflow.desc=Une condition de d\u00e9bordement d'entier existe lorsqu'un entier, qui n'a pas \u00e9t\u00e9 correctement v\u00e9rifi\u00e9 en entr\u00e9e, est utilis\u00e9 dans un programme compil\u00e9. 
ascanbeta.integeroverflow.soln=R\u00e9\u00e9crivez le programme d'arri\u00e8re-plan pour contr\u00f4ler correctement la taille de l'entier fourni, afin de pr\u00e9venir les erreurs de d\u00e9bordement et de division par 0.  Cela n\u00e9cessitera une recompilation de l'ex\u00e9cutable d'arri\u00e8re-plan.
ascanbeta.integeroverflow.refs=https\://www.owasp.org/index.php/Integer_overflow and http\://projects.webappsec.org/w/page/13246946/Integer%20Overflows.
ascanbeta.integeroverflow.error1=\u00c9ventuel d\u00e9bordement d'entier.  Le code d'\u00e9tat a chang\u00e9 lors de l'entr\u00e9e d'une longue cha\u00eene de nombres entiers al\u00e9atoires.
ascanbeta.integeroverflow.error2=\u00c9ventuel d\u00e9bordement d'entier.  Le code d'\u00e9tat a chang\u00e9 lors de l'entr\u00e9e d'une longue cha\u00eene de z\u00e9ros.
ascanbeta.integeroverflow.error3=\u00c9ventuel d\u00e9bordement d'entier.  Le code d'\u00e9tat a chang\u00e9 lors de l'entr\u00e9e d'une longue cha\u00eene de uns.
ascanbeta.integeroverflow.error4=\u00c9ventuel d\u00e9bordement d'entier.  Le code d'\u00e9tat a chang\u00e9 lors de l'entr\u00e9e d'une longue cha\u00eene de neuf.

ascanbeta.noanticsrftokens.name=Absence de Jetons Anti-CSRF
ascanbeta.noanticsrftokens.desc=Aucun jetons Anti-CSRF n'ont \u00e9t\u00e9 trouv\u00e9s dans un formulaire HTML.

ascanbeta.remotecodeexecution.cve-2012-1823.name=Ex\u00e9cution de code \u00e0 distance - CVE-2012-1823
ascanbeta.remotecodeexecution.cve-2012-1823.desc=Lorsqu'elles sont configur\u00e9es pour ex\u00e9cuter du code CGI, certaines versions de PHP ne traitent pas correctement les cha\u00eenes de requ\u00eate dans lesquelles manque un caract\u00e8re "\=" non \u00e9chapp\u00e9, ce qui permet l'ex\u00e9cution de code arbitraire. Dans ce cas, il est possible de faire ex\u00e9cuter une commande du syst\u00e8me d'exploitation sur le serveur internet, dont les r\u00e9sultats sont retourn\u00e9s au navigateur internet. 
ascanbeta.remotecodeexecution.cve-2012-1823.soln=Mettez \u00e0 jour \u00e0 la derni\u00e8re version stable de PHP, ou utilisez le serveur internet Apache et son module mod_rewrite pour filtrer les requ\u00eates malicieuses utilisant les directives "RewriteCond" et "RewriteRule".

ascanbeta.sessionfixation.name=Fixation de session
ascanbeta.sessionfixation.desc=Une attaque par fixation de session serait possible. Si ce probl\u00e8me apparait dans le cas d'une URL de connexion (o\u00f9 l'utilisateur s'authentifie aupr\u00e8s de l'application), alors l'URL pourrait \u00eatre fournie \u00e0 la victime  avec un identificateur de session fixe par un aggresseur, de mani\u00e8re \u00e0 ce que ce dernier puisse usurper l'identit\u00e9 de la victime avec l'identificateur de session donn\u00e9. Si ce probl\u00e8me apparait avec une autre page internet, l'URL et son identificateur de seesion fixe ne peuvent qu'\u00eatre utilis\u00e9s pour tracer les actions d'un utilisateur non authentifi\u00e9. Si la vuln\u00e9rabilit\u00e9 se produit sur un champ de cookie ou de formulaire (param\u00e8tre POST) plut\u00f4t que sur une URL (GET), alors une autre faille peut aussi \u00eatre n\u00e9cessaire pour renseigner le champ du cookie, afin que la vuln\u00e9rabilit\u00e9 soit exploitable.
ascanbeta.sessionfixation.soln=1) Emp\u00eacher l'agresseur de s'approprier un identificateur de session en for\u00e7ant des identificateurs de session stricts , et en n'allouant ces identificateurs qu'apr\u00e8s une authentification r\u00e9ussie \u00e4 l'application.\n2) Le serveur devrait toujours cr\u00e9er un nouvel identificateur de session lors d'une authentification, m\u00eame si une session est d\u00e9j\u00e0 en cours.\n3) Lier l'identificateur de session \u00e0 une combinaison identifiable d'attributs sp\u00e9cifiques au client, comme l'adresse IP ou le certificat client.\n4) Lors de leur destruction, les sessions doivent \u00eatre d\u00e9truites sur le serveur comme sur le client.\n5) Impl\u00e9menter un m\u00e9canisme de d\u00e9connexion qui d\u00e9truira toutes les sessions pr\u00e9c\u00e9dentes d'un client.\n6) Impl\u00e9menter des timeouts de session absolus\n7) Changer un identificateur de session bas\u00e9 sur l'URL vers un identificateur bas\u00e9 sur les cookies ou les formulaires, ces derniers n\u00e9cessitant d'autres failles pour \u00eatre exploitables pas un agresseur.\n
ascanbeta.sessionfixation.refs=https\://www.owasp.org/index.php/Top_10_2010-A3-Broken_Authentication_and_Session_Management\nhttps\://www.owasp.org/index.php/Session_fixation\nhttp\://www.acros.si/papers/session_fixation.pdf\nhttp\://www.technicalinfo.net/papers/WebBasedSessionManagement.html\nhttps\://www.owasp.org/index.php/Top_10_2010-A9
ascanbeta.sessionfixation.alert.cookie.extrainfo=Cookie d\u00e9fini dans la r\u00e9ponse lorsque le champ de cookie [{0}] est renseign\u00e9 \u00e0 NULL\: [{1}] \nCookie d\u00e9fini dans la r\u00e9ponse avec la valeur (valide) du cookie emprunt\u00e9e \u00e0 la requ\u00eate [{1}]\: [{2}]
ascanbeta.sessionfixation.alert.cookie.extrainfo.loginpage=L'url \u00e0 laquelle le probl\u00e8me a \u00e9t\u00e9 d\u00e9couvert a \u00e9t\u00e9 signal\u00e9e comme une page de connexion.
ascanbeta.sessionfixation.alert.url.extrainfo=Une valeur de session probable est apparue dans les URL dans la sortie HTML lorsque le param\u00e8tre URL ou du param\u00e8tre pseudo URL [{0}] est d\u00e9fini \u00e0 NULL\: [{1}]\nLorsque cette session "emprunt\u00e9e" [{1}] est utilis\u00e9e dans une requ\u00eate ult\u00e9rieure de cette URL, une nouvelle session n''est pas cr\u00e9\u00e9e.
ascanbeta.sessionfixation.alert.url.extrainfo.loginpage=L'url \u00e0 laquelle le probl\u00e8me a \u00e9t\u00e9 d\u00e9couvert a \u00e9t\u00e9 signal\u00e9e comme une page de connexion.
ascanbeta.sessionfixation.alert.attack=champ {0}\: [{1}]
#Exposed Session Id messages
ascanbeta.sessionidexposedinurl.name=ID de session expos\u00e9
ascanbeta.sessionidexposedinurl.desc=Un identificateur de session est expos\u00e9 dans l'URL. En partageant cette URL contenant l'id de session, un utilisateur na\u00eff pourrait accorder l'acc\u00e8s \u00e0 ces donn\u00e9es par inadvertance, compromettant ainsi leur confidentialit\u00e9, int\u00e9grit\u00e9 et disponibilit\u00e9. Des URLs contenant l'identificateur de session apparaissent aussi dans les signets du navigateur internet, dans les fichiers de journalisation des serveurs internet et des serveurs proxy. 
ascanbeta.sessionidexposedinurl.soln=Utilisez une impl\u00e9mentation de gestion de session plus s\u00fbre, telle que celle utilisant des cookies de session, qui ne sont pas aussi facilement partag\u00e9es par inadvertance, et qui n'apparaissent g\u00e9n\u00e9ralement pas dans les fichiers de journalisation des serveur ou dans les signets des navigateurs internet.
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidexposedinurl.refs=https\://www.owasp.org/index.php/Top_10_2010-A3-Broken_Authentication_and_Session_Management
ascanbeta.sessionidexposedinurl.alert.extrainfo=Le champ {0} [{1}] contient un identificateur de session expos\u00e9 [{2}]
ascanbeta.sessionidexposedinurl.alert.extrainfo.loginpage=L'url \u00e0 laquelle le probl\u00e8me a \u00e9t\u00e9 d\u00e9couvert a \u00e9t\u00e9 signal\u00e9e comme une page de connexion.
ascanbeta.sessionidexposedinurl.alert.attack=champ {0}\: [{1}]
#Session Id Cookie not sent securely
ascanbeta.sessionidsentinsecurely.name=ID de session transmis de fa\u00e7on non s\u00e9curis\u00e9e
ascanbeta.sessionidsentinsecurely.desc=Un identificateur de session pourrait \u00eatre envoy\u00e9 par un m\u00e9canisme non s\u00e9curis\u00e9. Dans le cas d'un cookie envoy\u00e9 dans la requ\u00eate, cela se produit lorsque HTTP est utilis\u00e9 plut\u00f4t que HTTPS.  Dans le cas d'un cookie envoy\u00e9 dans une r\u00e9ponse par le serveur (lorsque l'URL est modifi\u00e9e en fixant \u00e0 NULL le champ de param\u00e8tre nomm\u00e9), l'indicateur "secure" n'est pas renseign\u00e9, ce qui permet de renvoyer le cookie plus tard par HTTP plut\u00f4t que par HTTPS. Cela peut permettre \u00e0 une personne malveillante de s'ins\u00e9rer passivement dans l'\u00e9change de donn\u00e9es dans le r\u00e9seau pour obtenir un acc\u00e8s complet \u00e0 la session de la victime.  
ascanbeta.sessionidsentinsecurely.soln=1) Utilisez la version la plus r\u00e9cente de SSL/TLS (pour HTTPS) sur toutes les pages o\u00f9 un identificateur de session est communiqu\u00e9 entre le navigateur et le serveur internet.\n2) Ne permettez pas que la communication puisse \u00eatre contrainte \u00e0 revenir au protocole non crypt\u00e9 HTTP.\n3) Utilisez la balise 'secure' lorsque vous renseignez un cookie contenant un identificateur de session, vous \u00e9viterez ainsi sa transmission ult\u00e9rieure par un m\u00e9canisme non s\u00e9curis\u00e9.\n4) Dirigez les requ\u00eates  pour des pages HTTP non s\u00e9curis\u00e9es vers leur \u00e9quivalent s\u00e9curis\u00e9 HTTPS.
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidsentinsecurely.refs=https\://www.owasp.org/index.php/Top_10_2010-A3-Broken_Authentication_and_Session_Management\nhttps\://www.owasp.org/index.php/Top_10_2010-A9
ascanbeta.sessionidsentinsecurely.alert.extrainfo=L''identificateur de session {0} champ [{1}], valeur [{2}] peut \u00eatre envoy\u00e9 par l''interm\u00e9diaire d''un m\u00e9canisme non s\u00e9curis\u00e9.
ascanbeta.sessionidsentinsecurely.alert.extrainfo.secureflagnotset=L'indicateur 'secure' n'\u00e9tait pas d\u00e9fini dans le cookie de session fourni par le serveur.
ascanbeta.sessionidsentinsecurely.alert.extrainfo.loginpage=L'url \u00e0 laquelle le probl\u00e8me a \u00e9t\u00e9 d\u00e9couvert a \u00e9t\u00e9 signal\u00e9e comme une page de connexion.
ascanbeta.sessionidsentinsecurely.alert.attack=champ {0}\: [{1}]
#Session Id Cookie accessible by JavaScript
ascanbeta.sessionidaccessiblebyjavascript.name=Cookie d'ID de session accessible par JavaScript
ascanbeta.sessionidaccessiblebyjavascript.desc=Un cookie avec un identificateur de session envoy\u00e9 par le serveur (lorsque l'URL est modifi\u00e9e en d\u00e9finissant \u00e0 NULL le champ de param\u00e8tre) peut \u00eatre acc\u00e9d\u00e9 par JavaScript sur le client. Conjointement avec une autre vuln\u00e9rabilit\u00e9, cela peut permettre de d\u00e9tourner la session.  
ascanbeta.sessionidaccessiblebyjavascript.soln=1) Utilisez l'indicateur 'httponly' lorsque vous renseignez un cookie contenant un identificateur de session, pour emp\u00eacher que celui-ci soit accessible par JavaScript dans le navigateur internet.  
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidaccessiblebyjavascript.refs=\ 
ascanbeta.sessionidaccessiblebyjavascript.alert.extrainfo=Le champ [{1}] d''identificateur de session {0}, valeur [{2}] peut \u00eatre consult\u00e9 par JavaScript dans le navigateur internet
ascanbeta.sessionidaccessiblebyjavascript.alert.extrainfo.loginpage=L'url \u00e0 laquelle le probl\u00e8me a \u00e9t\u00e9 d\u00e9couvert a \u00e9t\u00e9 signal\u00e9e comme une page de connexion.
ascanbeta.sessionidaccessiblebyjavascript.alert.attack=champ {0}\: [{1}]
#Session Id Cookie Expiry
ascanbeta.sessionidexpiry.name=Le temps d'expiration ou l'\u00e2ge max de l'ID de session est excessif
ascanbeta.sessionidexpiry.desc=Un cookie avec identificateur de session envoy\u00e9 par le serveur (quand l'URL est modifi\u00e9e en d\u00e9finissant \u00e0 NULL le champ de param\u00e8tre) reste valide pour une dur\u00e9e trop longue. Ceci peut \u00eatre exploit\u00e9 par un attaquant si l'utilisateur oublie de se d\u00e9connecter, si la fonctionnalit\u00e9 de d\u00e9connexion ne d\u00e9truit pas correctement la session, ou si l'identificateur de session est compromis d'une autre mani\u00e8re.
ascanbeta.sessionidexpiry.soln=1) Utilisez les directives de cookie 'Expire' ou 'Max-Age' lorsque vous d\u00e9finissez un cookie contenant un identificateur de session, pour \u00e9viter que celui-ci soit disponible pour une dur\u00e9e prolong\u00e9e.\n2) Assurez-vous de la pr\u00e9sence d'une fonction de d\u00e9cennexio, et que la session est d\u00e9truite correctement.\n3) Utilisez d'autres mesures pr\u00e9ventives pour \u00e9viter que l'identificateur de session ne soit exploitable au cas o\u00f9 celui-ci soit divulgu\u00e9.
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidexpiry.refs=\ 
ascanbeta.sessionidexpiry.alert.extrainfo=champ [{1}] d''identificateur de session {0}, de valeur [{2}] est accessible jusqu''\u00e0 [{3}] (\u00e9tant donn\u00e9 que le cookie a \u00e9t\u00e9 re\u00e7u \u00e0 {4}), sauf si la session est d\u00e9truite.
ascanbeta.sessionidexpiry.alert.extrainfo.loginpage=L'url \u00e0 laquelle le probl\u00e8me a \u00e9t\u00e9 d\u00e9couvert a \u00e9t\u00e9 signal\u00e9e comme une page de connexion.
ascanbeta.sessionidexpiry.alert.attack=champ {0}\: [{1}]
ascanbeta.sessionidexpiry.browserclose=fermeture du navigateur
ascanbeta.sessionidexpiry.timemorethanoneweek=Plus d'une semaine
ascanbeta.sessionidexpiry.timemorethanoneday=Plus d'un jour
ascanbeta.sessionidexpiry.timemorethanonehour=Plus d'une heure
ascanbeta.sessionidexpiry.timelessthanonehour=Moins d'une heure
ascanbeta.sessionidexpiry.timeexpired=Expir\u00e9

ascanbeta.shellshock.name=Ex\u00e9cution de code \u00e0 distance - Shell Shock
ascanbeta.shellshock.desc=Le serveur ex\u00e9cute une version de l'interpr\u00e9teur Bash permettant \u00e0 des attaquants distants d'ex\u00e9cuter du code arbitraire 
ascanbeta.shellshock.extrainfo=De CVE-2014-6271\: le GNU Bash jusqu'\u00e0 4.3 traite l'arri\u00e8re des cha\u00eenes d'apr\u00e8s les d\u00e9finitions de fonction donn\u00e9es par les valeurs des variables d'environnement, ce qui permet aux agresseurs distants d'ex\u00e9cuter du code arbitraire via un certain environnement, comme en t\u00e9moignent les vecteurs impliquant la fonction ForceCommand de OpenSSH sshd, les modules mod_cgi et mod_cgid du serveur HTTP Apache, les scripts ex\u00e9cut\u00e9s par des clients DHCP non pr\u00e9cis\u00e9s et d'autres situations dans lesquelles l'initialisation de l'environnement se fait par l'ex\u00e9cution de Bash \u00e0 travers une limite de privil\u00e8ge, alias "ShellShock". A NOTER\: le correctif original de ce probl\u00e8me \u00e9tait incorrect; CVE-2014-7169 a \u00e9t\u00e9 d\u00e9sign\u00e9 pour couvrir la vuln\u00e9rabilit\u00e9 qui est toujours pr\u00e9sente apr\u00e8s le fix incorrect.
ascanbeta.shellshock.soln=Mettez \u00e0 jour Bash sur le serveur avec la version la plus r\u00e9cente
ascanbeta.shellshock.ref=http\://web.nvd.nist.gov/view/vuln/detail?vulnId\=CVE-2014-6271\nhttp\://www.troyhunt.com/2014/09/everything-you-need-to-know-about.html
ascanbeta.shellshock.timingbased.evidence=\u00c0 l''aide de l''attaque, un d\u00e9lai de millisecondes [{0}] a \u00e9t\u00e9 induit et d\u00e9tect\u00e9

ascanbeta.sqlinjection.mysql.name=Injection SQL - MySQL
ascanbeta.sqlinjection.hypersonic.name=Injection SQL - Hypersonic SQL
ascanbeta.sqlinjection.oracle.name=Injection SQL - Oracle
ascanbeta.sqlinjection.postgres.name=Injection SQL - PostgreSQL
ascanbeta.sqlinjection.desc=Une injection SQL peut \u00eatre possible
ascanbeta.sqlinjection.soln=Ne faites pas confiance aux entr\u00e9es du c\u00f4t\u00e9 client, m\u00eame si des m\u00e9canismes de validation sont en place c\u00f4t\u00e9 client.\nEn g\u00e9n\u00e9ral, contr\u00f4lez du c\u00f4t\u00e9 serveur le type de chaque donn\u00e9e.\nSi l'application utilise JDBC, utilisez les PreparedStatement ou CallableStatement, avec les param\u00e8tres pass\u00e9s par '?'\nSi l'application utilise ASP, utilisez les Command Objects ADO avec un typage fort et des requ\u00eates param\u00e9tr\u00e9es.\nSi l'utilisation de proc\u00e9dures stock\u00e9es est possible, utilisez-les. \nNe concat\u00e9nez *pas* les cha\u00eenes de caract\u00e8res dans les requ\u00eates \u00e0 destination de proc\u00e9dures stock\u00e9es, ou utilisez des fonctions 'exec', 'exec immediate' ou d'autre fonctions \u00e9quivalentes\!\nNe cr\u00e9ez pas des requ\u00eates SQL dynamiques par simple concat\u00e9nation de cha\u00eenes de caract\u00e8res.\n\u00c9chappez toutes les donn\u00e9es re\u00e7ues du client.\nAppliquez une 'liste blanche' de caract\u00e8res autoris\u00e9s, ou une 'liste noir' de caract\u00e8res interdits dans les entr\u00e9es de l'utilisateur.\nAppliquez le principe de moindre privil\u00e8ge en utilisant le privil\u00e8ge utilisateur le plus faible sur la base de donn\u00e9e.\nEn particulier, \u00e9vitez l'utilisation des utilisateurs 'sa' ou 'db-owner'. Ceci n'\u00e9limine pas les injections SQL, mais minimise leur impact.\nAccordez \u00e0 l'application le minimum n\u00e9cessaire de droits d'acc\u00e8s aux bases de donn\u00e9es .
ascanbeta.sqlinjection.refs=https\://www.owasp.org/index.php/Top_10_2010-A1\nhttps\://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet
#ascanbeta.sqlinjection.alert.errorbased.attack={1}
ascanbeta.sqlinjection.alert.errorbased.differentiation.attack=Valeur d''Origine\: [{0}]. Valeur Modifi\u00e9e\: [{1}]. Valeur de Contr\u00f4le\: [{2}]
ascanbeta.sqlinjection.alert.booleanbased.attack=champ\: [{0}], valeur [{1}]
ascanbeta.sqlinjection.alert.unionbased.attack=[{0}] champ\: [{1}], valeur [{2}]
ascanbeta.sqlinjection.alert.errorbased.extrainfo=SGBDR [{0}] probable, compte tenu du fragment de message d''erreur [{1}] dans les r\u00e9sultats HTML
ascanbeta.sqlinjection.alert.unionbased.extrainfo=SGBDR [{0}] probable, compte tenu du fragment de message sp\u00e9cifique \u00e0 l''UNION [{1}] dans les r\u00e9sultats HTML
ascanbeta.sqlinjection.alert.errorbased.httpstatuscode.extrainfo=Le message non modifi\u00e9 donne le statut HTTP [{0}], le message modifi\u00e9 donne le statut HTTP [{1}]
ascanbeta.sqlinjection.alert.errorbased.differentiation.extrainfo=Le message non modifi\u00e9 donne le statut HTTP [{0}], un corps d''une longueur [{1}], le message modifi\u00e9 donne le statut HTTP [{2}], un corps d''une longueur [{3}]. Un tiers (une injection non-SQL induisant une valeur) donne un statut HTTP [{4}], un corps d''une longueur [{5}]
ascanbeta.sqlinjection.alert.booleanbased.extrainfo=Les r\u00e9sultats de la page ont \u00e9t\u00e9 manipul\u00e9s avec succ\u00e8s en utilisant les conditions bool\u00e9ennes [{0}] et [{1}]
ascanbeta.sqlinjection.alert.timebased.extrainfo=Le temps de la requ\u00eate est contr\u00f4lable \u00e0 l''aide de la valeur du param\u00e8tre [{0}], qui lui fait ainsi prendre [{1}] millisecondes, alors que la requ\u00eate d''origine, non modifi\u00e9e avec la valeur [{2}] prend, quant \u00e0 elle, [{3}] millisecondes 

ascanbeta.sourcecodedisclosure.desc=Le code source de la page actuelle a \u00e9t\u00e9 d\u00e9voil\u00e9 par le serveur internet

ascanbeta.sourcecodedisclosurecve-2012-1823.name=Source Code Disclosure - CVE-2012-1823
ascanbeta.sourcecodedisclosurecve-2012-1823.desc=Certaines versions PHP, lorsqu'il est configur\u00e9 pour ex\u00e9cuter \u00e0 l'aide de CGI, ne manipulez pas correctement les cha\u00eenes de requ\u00eate qui n'ont pas un caract\u00e8re de \u00ab \= \u00bb sans s\u00e9quence d'\u00e9chappement, ce qui permet la divulgation de code source PHP et l'ex\u00e9cution de code arbitraire. Dans ce cas, le contenu du fichier PHP a \u00e9t\u00e9 fourni directement au navigateur internet. Cette sortie contiendra g\u00e9n\u00e9ralement du code PHP, mais il peut \u00e9galement contenir du pur HTML.
ascanbeta.sourcecodedisclosurecve-2012-1823.soln=Mettez \u00e0 jour \u00e0 la derni\u00e8re version stable de PHP, ou utilisez le serveur internet Apache et son module mod_rewrite pour filtrer les requ\u00eates malicieuses utilisant les directives "RewriteCond" et "RewriteRule".

ascanbeta.sourcecodedisclosure.svnbased.name=Divulgation de Code Source - SVN
ascanbeta.sourcecodedisclosure.svnbased.soln=Assurez-vous que les fichiers de m\u00e9tadonn\u00e9es SVN ne sont pas d\u00e9ploy\u00e9s vers le serveur internetou le serveur applicatif
ascanbeta.sourcecodedisclosure.svnbased.extrainfo=Le code source de [{0}] a \u00e9t\u00e9 trouv\u00e9 \u00e0 [{1}]

ascanbeta.sourcecodedisclosurewebinf.name=Divulgation de Code Source - Dossier /WEB-INF
ascanbeta.sourcecodedisclosurewebinf.desc=Du code source Java a \u00e9t\u00e9 d\u00e9voil\u00e9 par le serveur internet au travers des fichiers de classe Java du dossier WEB-INF. Les fichiers de classe peuvent \u00eatre d\u00e9compil\u00e9s pour produire un code source qui correspond tr\u00e8s \u00e9troitement au code source original.  
ascanbeta.sourcecodedisclosurewebinf.soln=Le serveur internet devrait \u00eatre configur\u00e9 pour ne pas fournir le dossier /WEB-INF ou son contenu aux navigateurs internet, car il contient des informations sensibles telles que des fichiers de code Java compil\u00e9s et des fichiers de propri\u00e9t\u00e9s qui peuvent contenir des informations d'identification. Les classes Java d\u00e9ploy\u00e9es avec l'application devraient \u00eatre obscurcies, en guise de couche de d\u00e9fense suppl\u00e9mentaire dans une optique de "d\u00e9fense en profondeur".

ascanbeta.sourcecodedisclosurewebinf.propertiesfile.name=Divulgation de fichier de propri\u00e9t\u00e9s - Dossier /WEB-INF
ascanbeta.sourcecodedisclosurewebinf.propertiesfile.desc=Une classe Java du dossier /WEB-INF a d\u00e9voil\u00e9 la pr\u00e9sence du fichier de propri\u00e9t\u00e9s. Les fichiers de propri\u00e9t\u00e9s ne sont pas sens\u00e9s \u00eatre accessibles au public, car ils contiennent g\u00e9n\u00e9ralement des informations de configuration, des informations d'identification ou des cl\u00e9s cryptographiques.   
ascanbeta.sourcecodedisclosurewebinf.propertiesfile.soln=Le serveur internet devrait \u00eatre configur\u00e9 pour ne pas servir le dossier /WEB-INF ou son contenu aux navigateurs internet.  Il serait \u00e9galement possible de supprimer le dossier /WEB-INF.  
ascanbeta.sourcecodedisclosurewebinf.propertiesfile.extrainfo=La r\u00e9f\u00e9rence vers le fichier de propri\u00e9t\u00e9s a \u00e9t\u00e9 trouv\u00e9e dans le code source Java d\u00e9s-assembl\u00e9 de la classe Java [{0}].

ascanbeta.usernameenumeration.name=\u00c9num\u00e9ration de noms d'utilisateur possible
ascanbeta.usernameenumeration.desc=Il peut \u00eatre possible d'\u00e9num\u00e9rer les noms d'utilisateur, en se basant sur des r\u00e9ponses HTTP diff\u00e9rentes selon les noms d'utilisateur valides et non valides fournis. Cela augmenterait consid\u00e9rablement les chances de succ\u00e8s d'une attaque par force brute sur les mots de passe d'un syst\u00e8me. Notez que les faux positifs peuvent parfois \u00eatre minimis\u00e9s en augmentant l'option 'Force d'attaque' dans ZAP.  V\u00e9rifiez s'il vous pla\u00eet manuellement le champ 'Autres infos' pour confirmer qu'il y a effectivement un probl\u00e8me. 
ascanbeta.usernameenumeration.soln=Ne d\u00e9voilez pas de d\u00e9tail selon que le nom d'utilisateur est valide ou non. En particulier, pour les tentatives de connexion infructueuses, ne distinguez pas entre un nom d'utilisateur non valide et un mot de passe non valide, que ce soit dans le message d'erreur, la page titre, le contenu de page, les en-t\u00eates HTTP ou la logique de redirection.
ascanbeta.usernameenumeration.refs=https\://www.owasp.org/index.php/Testing_for_user_enumeration_%28OWASP-AT-002%29\nhttp\://sebastian-schinzel.de/_download/ifip-sec2011.pdf
ascanbeta.usernameenumeration.alert.extrainfo=La valeur [{1}] du param\u00e8tre [{0}] divulgue de l''information sur la question de savoir si un utilisateur existe. Les diff\u00e9rences [{5}] de sortie, pour le nom d''utilisateur original valide [{2}], et pour le nom d''utilisateur invalide [{3}] sont\:\n[{4}]
ascanbeta.usernameenumeration.alert.attack=Manipuler le champ [{0}]\: [{1}] et surveiller la sortie 

ascanbeta.paddingoracle.name=Bourrage Oracle g\u00e9n\u00e9rique
ascanbeta.paddingoracle.desc=En manipulant le bourrage (padding) sur une cha\u00eene crypt\u00e9e, un attaquant peut g\u00e9n\u00e9rer un message d'erreur indiquant une probable vuln\u00e9rabilit\u00e9 'padding oracle'. Une telle vuln\u00e9rabilit\u00e9 peut affecter n'importe quel application ou framework qui utilise le chiffrement de mani\u00e8re incorrecte, tels que certaines versions d'ASP.net, Java Server Faces et Mono. Un agresseur pourrait exploiter ce probl\u00e8me pour d\u00e9chiffrer des donn\u00e9es et r\u00e9cup\u00e9rer des cl\u00e9s de chiffrement,  et de potentiellement afficher et modifier des donn\u00e9es confidentielles. Ce plugin devrait d\u00e9tecter la vuln\u00e9rabilit\u00e9 de padding oracle MS10-070 dans ASP.net si CustomErrors est activ\u00e9 dans ce but.
ascanbeta.paddingoracle.soln=Mettez \u00e0 jour le logiciel de serveur affect\u00e9, ou modifiez les scripts afin qu'ils valident correctement les donn\u00e9es chiffr\u00e9es avant toute tentative de d\u00e9chiffrement.
ascanbeta.paddingoracle.refs=http\://netifera.com/research/\nhttp\://www.microsoft.com/technet/security/bulletin/ms10-070.mspx\nhttp\://www.mono-project.com/Vulnerabilities\#ASP.NET_Padding_Oracle\nhttps\://bugzilla.redhat.com/show_bug.cgi?id\=623799

ascanbeta.elinjection.name=Injection d'Expression Language
ascanbeta.elinjection.desc=Le logiciel construit tout ou partie d'une instruction expression language (EL) dans une page Java Server Page (JSP) \u00e0 l'aide d'une entr\u00e9e manipul\u00e9e re\u00e7ue d'un composant en amont, mais il ne neutralise pas ou neutralise incorrectement des \u00e9l\u00e9ments sp\u00e9ciaux qui pourraient modifier l'instruction EL avant son ex\u00e9cution. Dans certaines versions ant\u00e9rieures \u00e0 Spring 3.0.5, il y avait une vuln\u00e9rabilit\u00e9 (CVE-2011-2730) dans laquelle des balises d'Expression Language seraient \u00e9valu\u00e9es deux fois, ce qui exposait effectivement n'importe quelle application \u00e0 l'injection de EL. Cependant, cette faiblesse est toujours possible pour certaines configurations, m\u00eame pour les versions ult\u00e9rieures.
ascanbeta.elinjection.soln=Effectuez une validation de donn\u00e9es sur toute entr\u00e9e non fiable et assurez-vous qu'un codage de sortie est appliqu\u00e9 lorsque les donn\u00e9es arrivent sur la couche EL, afin qu'aucun m\u00e9tacaract\u00e8re ne soit trouv\u00e9  dans le contenu de l'utilisateur avant l'\u00e9valuation par l'interpr\u00e9teur. Les patterns les plus \u00e9vidents \u00e0 d\u00e9tecter comprennent ${ et \#{, mais il peut \u00eatre possible d'encoder ou de fragmenter ces donn\u00e9es.
ascanbeta.elinjection.refs=https\://www.owasp.org/index.php/Expression_Language_Injection\nhttp\://cwe.mitre.org/data/definitions/917.html

ascanbeta.xxeplugin.name=Attaque par entit\u00e9 XML externe
ascanbeta.xxeplugin.nocallback=fonctionnalit\u00e9 de callback non disponible

ascanbeta.xpathinjectionplugin.name=Injection XPath


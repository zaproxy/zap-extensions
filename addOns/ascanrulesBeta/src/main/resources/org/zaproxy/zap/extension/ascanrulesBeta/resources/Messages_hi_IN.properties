ascanbeta.desc = \u0938\u0915\u094d\u0930\u093f\u092f \u0938\u094d\u0915\u0948\u0928 \u0928\u093f\u092f\u092e - \u092c\u0940\u091f\u093e

ascanbeta.backupfiledisclosure.name = \u092c\u0948\u0915\u0905\u092a \u092b\u093c\u093e\u0907\u0932 \u092a\u094d\u0930\u0915\u091f\u0940\u0915\u0930\u0923
ascanbeta.backupfiledisclosure.desc = \u092b\u093c\u093e\u0907\u0932 \u0915\u0940 \u090f\u0915 \u092c\u0948\u0915\u0905\u092a \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0915\u0947 \u0926\u094d\u0935\u093e\u0930\u093e \u092c\u0924\u093e\u092f\u093e \u0917\u092f\u093e \u0925\u093e
ascanbeta.backupfiledisclosure.soln = \u0928\u0939\u0940\u0902 \u092b\u093c\u093e\u0907\u0932\u094b\u0902 \u092e\u0947\u0902-\u0938\u094d\u0935\u0938\u094d\u0925\u093e\u0928\u0940 \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u092a\u0930 \u0938\u0902\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0947\u0902, \u0914\u0930 \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0947\u0902 \u0915\u093f \u0938\u0902\u092f\u0941\u0915\u094d\u0924 \u0930\u093e\u0937\u094d\u091f\u094d\u0930 \u0915\u0947 \u0906\u0935\u0936\u094d\u092f\u0915 \u092b\u093c\u093e\u0907\u0932\u0947\u0902 (\u091b\u0941\u092a\u0940 \u0939\u0941\u0908 \u092b\u093c\u093e\u0907\u0932\u094b\u0902 \u0938\u0939\u093f\u0924) \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0938\u0947 \u0928\u093f\u0915\u093e\u0932 \u0926\u093f\u090f \u091c\u093e\u0924\u0947 \u0939\u0948\u0902\u0964
ascanbeta.backupfiledisclosure.evidence = [{0}] \u0915\u093e \u092c\u0948\u0915\u0905\u092a [{1}] \u092a\u0930 \u0909\u092a\u0932\u092c\u094d\u0927 \u0939\u0948
ascanbeta.backupfiledisclosure.refs = https\://cwe.mitre.org/data/definitions/530.html\n\
https\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/04-Review_Old_Backup_and_Unreferenced_Files_for_Sensitive_Information.html

ascanbeta.cloudmetadata.name = Cloud Metadata Potentially Exposed
ascanbeta.cloudmetadata.desc = The Cloud Metadata Attack attempts to abuse a misconfigured NGINX server in order to access the instance metadata maintained by cloud service providers such as AWS, GCP and Azure.\n\
\n\
All of these providers provide metadata via an internal unroutable IP address '169.254.169.254' - this can be exposed by incorrectly configured NGINX servers and accessed by using this IP address in the Host header field.
ascanbeta.cloudmetadata.otherinfo = Based on the successful response status code cloud metadata may have been returned in the response. Check the response data to see if any cloud metadata has been returned.\n\
\n\
The meta data returned can include information that would allow an attacker to completely compromise the system.
ascanbeta.cloudmetadata.refs = https\://www.nginx.com/blog/trust-no-one-perils-of-trusting-user-input/
ascanbeta.cloudmetadata.soln = Do not trust any user data in NGINX configs. In this case it is probably the use of the $host variable which is set from the 'Host' header and can be controlled by an attacker.

ascanbeta.cookieslack.name = Cookie Slack Detector
ascanbeta.cookieslack.desc = Repeated GET requests\: drop a different cookie each time, followed by normal request with all cookies to stabilize session, compare responses against original baseline GET. This can reveal areas where cookie based authentication/attributes are not actually enforced.
ascanbeta.cookieslack.otherinfo.intro = Cookies that don't have expected effects can reveal flaws in application logic. In the worst case, this can reveal where authentication via cookie token(s) is not actually enforced.\n\

ascanbeta.cookieslack.session.warning = NOTE\: Because of its name this cookie may be important, but dropping it appears to have no effect\: [{0}] \n\

ascanbeta.cookieslack.affect.response.yes = These cookies affected the response\: 
ascanbeta.cookieslack.affect.response.no = These cookies did NOT affect the response\: 
ascanbeta.cookieslack.session.destroyed = Dropping this cookie appears to have invalidated the session\: [{0}] A follow-on request with all original cookies still had a different response than the original request. \n\

ascanbeta.cookieslack.separator = ,
ascanbeta.cookieslack.endline = \n\


ascanbeta.crossdomain.name = \u0915\u094d\u0930\u0949\u0938-\u0921\u094b\u092e\u0947\u0928 Misconfiguration
#the refs cannot be customised for each sub-category (Adobe, Silverlight, etc.)
ascanbeta.crossdomain.refs = http\://www.adobe.com/devnet/articles/crossdomain_policy_file_spec.html http\://www.adobe.com/devnet-docs/acrobatetk/tools/AppSec/CrossDomain_PolicyFile_Specification.pdf http\://msdn.microsoft.com/en-US/library/cc197955%28v\=vs.95%29.aspx http\://msdn.microsoft.com/en-us/library/cc838250%28v\=vs.95%29.aspx
ascanbeta.crossdomain.adobe.read.name = \u0915\u094d\u0930\u0949\u0938-\u0921\u094b\u092e\u0947\u0928 Misconfiguration - \u090f\u0921\u094b\u092c - \u092a\u0922\u093c\u0947\u0902
ascanbeta.crossdomain.adobe.send.name = \u0915\u094d\u0930\u0949\u0938-\u0921\u094b\u092e\u0947\u0928 Misconfiguration - \u090f\u0921\u094b\u092c - \u092a\u0922\u093c\u0947\u0902
ascanbeta.crossdomain.adobe.desc = \u092b\u094d\u0932\u0948\u0936/Silverlight \u0906\u0927\u093e\u0930\u093f\u0924 \u0915\u094d\u0930\u0949\u0938-\u0938\u093e\u0907\u091f \u0905\u0928\u0941\u0930\u094b\u0927 \u091c\u093e\u0932\u0938\u093e\u091c\u0940 \u0938\u0902\u092d\u0935, \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u092a\u0930 \u090f\u0915 \u092e\u093f\u0938\u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930\u0947\u0936\u0928 \u0915\u0947 \u0915\u093e\u0930\u0923 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964 
ascanbeta.crossdomain.adobe.read.soln = \u0915\u094d\u0930\u0949\u0938-\u0921\u094b\u092e\u0947\u0928 \u092a\u0920\u0928 \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0907\u0938 \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930, \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u094d\u0935\u0940\u0915\u0943\u0924 \u0921\u094b\u092e\u0947\u0928 \u0915\u0940 \u0938\u0942\u091a\u0940 \u0915\u094b \u0938\u0940\u092e\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f crossdomain.xml \u092b\u093c\u093e\u0907\u0932 \u0915\u094b \u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930 \u0915\u0930\u0947\u0902 < \u092f\u0939 domain\="example.com \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0902 \u092a\u0939\u0941\u0901\u091a-\u0938\u0947-" >\u0964 \u0906\u092a \u0915\u0947\u0935\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u0939\u0941\u0901\u091a \u0926\u0947\u0928\u093e \u091a\u093e\u0939\u093f\u090f "*" (\u0938\u092d\u0940 \u0921\u094b\u092e\u0947\u0928) \u092f\u0926\u093f \u0906\u092a \u0906\u0936\u094d\u0935\u0938\u094d\u0924 \u0939\u0948\u0902 \u0915\u093f \u0907\u0938 \u0938\u0947\u0935\u093e \u0915\u0947 \u0915\u093f\u0938\u0940 \u092d\u0940 \u092a\u0939\u0941\u0901\u091a-\u0928\u093f\u092f\u0902\u0924\u094d\u0930\u093f\u0924, \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u092f\u093e \u0928\u093f\u091c\u0940 \u0921\u0947\u091f\u093e \u0939\u094b\u0938\u094d\u091f \u0928\u0939\u0940\u0902 \u0915\u0930\u0924\u093e \u0939\u0948\u0964
ascanbeta.crossdomain.adobe.read.extrainfo = \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0915\u093f\u0938\u0940 \u092d\u0940 \u0924\u0943\u0924\u0940\u092f \u092a\u0915\u094d\u0937 \u0921\u094b\u092e\u0947\u0928 \u0938\u0947 \u0907\u0938 \u0921\u094b\u092e\u0947\u0928 \u0915\u0947 \u0932\u093f\u090f \u0938\u0947\u0935\u093e \u0915\u0940 \u092b\u094d\u0932\u0948\u0936/Silverlight \u0918\u091f\u0915\u094b\u0902 \u0938\u0947 \u0939\u094b\u0928\u0947 \u0935\u093e\u0932\u0947 \u0905\u0928\u0941\u0930\u094b\u0927\u094b\u0902 \u092a\u0922\u093c\u0947\u0902 \u0926\u0941\u0930\u094d\u092d\u093e\u0935\u0928\u093e\u092a\u0942\u0930\u094d\u0923 \u0915\u094d\u0930\u0949\u0938-\u0921\u094b\u092e\u0947\u0928 \u0921\u0947\u091f\u093e \u092a\u0930\u092e\u093f\u091f\u0964 \u0905\u0917\u0930 \u0936\u093f\u0915\u093e\u0930 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0907\u0938 \u0938\u0947\u0935\u093e \u092e\u0947\u0902 \u0932\u0949\u0917 \u0907\u0928 \u0915\u093f\u092f\u093e \u0939\u0948, \u0926\u0941\u0930\u094d\u092d\u093e\u0935\u0928\u093e\u092a\u0942\u0930\u094d\u0923 \u092a\u0922\u093c\u0947\u0902 \u0905\u0928\u0941\u0930\u094b\u0927\u094b\u0902 \u0936\u093f\u0915\u093e\u0930 \u0915\u0947 \u0935\u093f\u0936\u0947\u0937\u093e\u0927\u093f\u0915\u093e\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902, \u0914\u0930 \u0907\u0938 \u0938\u0947\u0935\u093e \u0915\u0947 \u0926\u094d\u0935\u093e\u0930\u093e \u090f\u0915 \u0905\u0928\u0927\u093f\u0915\u0943\u0924 \u0924\u0943\u0924\u0940\u092f \u092a\u0915\u094d\u0937 \u0935\u0947\u092c \u0938\u093e\u0907\u091f, \u092a\u0940\u0921\u093c\u093f\u0924 \u0915\u0947 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0938\u092e\u091d\u094c\u0924\u093e \u0915\u093f\u092f\u093e \u091c\u093e \u0930\u0939\u093e \u0938\u0947 \u0921\u0947\u091f\u093e \u092e\u0947\u0902 \u092a\u0930\u093f\u0923\u093e\u092e \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964 \u092f\u0939 \u0935\u093f\u0936\u0947\u0937 \u0930\u0942\u092a \u0938\u0947 \u0905\u0917\u0930 \u090f\u0915 \u0938\u0924\u094d\u0930 \u0915\u0941\u0915\u0940 \u0906\u0927\u093e\u0930\u093f\u0924 \u0915\u094d\u0930\u093f\u092f\u093e\u0928\u094d\u0935\u092f\u0928 \u0909\u092a\u092f\u094b\u0917 \u092e\u0947\u0902 \u0939\u0948 \u090f\u0915 \u092e\u0941\u0926\u094d\u0926\u093e \u0939\u094b \u091c\u093e\u0928\u0947 \u0915\u0940 \u0938\u0902\u092d\u093e\u0935\u0928\u093e \u0939\u0948\u0964 
ascanbeta.crossdomain.adobe.send.soln = Crossdomain.xml \u0915\u094b \u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930 \u0921\u094b\u092e\u0947\u0928 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0915\u094d\u0930\u0949\u0938-\u0921\u094b\u092e\u0947\u0928 \u092d\u0947\u091c\u0947\u0902 (\u0932\u0947\u0915\u093f\u0928 \u091c\u0930\u0942\u0930\u0940 \u0928\u0939\u0940\u0902 \u0915\u093f \u092a\u0922\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f) \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0940 \u091c\u093e\u0924\u0940 \u0939\u0948 \u0915\u093f \u0915\u0940 \u0938\u0942\u091a\u0940 \u0915\u094b \u0938\u0940\u092e\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092b\u093c\u093e\u0907\u0932 \u0915\u093e \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0907\u0938 \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930, < \u092f\u0939 domain\="example.com \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0902-http-\u0905\u0928\u0941\u0930\u094b\u0927-\u0939\u0947\u0921\u0930-\u0938\u0947" \u0936\u0940\u0930\u094d\u0937 \u0932\u0947\u0916 "\u092a\u094d\u0930\u093e\u0927\u093f\u0915\u0930\u0923, \u090f\u0915\u094d\u0938-Blahh" \= >\u0964 \u0906\u092a \u0915\u0947\u0935\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u0939\u0941\u0901\u091a \u0926\u0947\u0928\u093e \u091a\u093e\u0939\u093f\u090f "*" (\u0938\u092d\u0940 \u0921\u094b\u092e\u0947\u0928) \u092f\u0926\u093f \u0906\u092a \u0906\u0936\u094d\u0935\u0938\u094d\u0924 \u0939\u0948\u0902 \u0915\u093f \u0907\u0938 \u0938\u0947\u0935\u093e \u0915\u094d\u0930\u0949\u0938 \u0938\u093e\u0907\u091f \u0905\u0928\u0941\u0930\u094b\u0927 \u091c\u093e\u0932\u0938\u093e\u091c\u0940 (CSRF \u0915\u094b) \u0915\u092e\u091c\u094b\u0930 \u0928\u0939\u0940\u0902 \u0939\u0948 \u0907\u0938 \u0938\u0947\u0935\u093e \u0915\u0947 \u0939\u092e\u0932\u094b\u0902\u0964
ascanbeta.crossdomain.adobe.send.extrainfo = \u092a\u0930\u092e\u093f\u091f \u0926\u0941\u0930\u094d\u092d\u093e\u0935\u0928\u093e\u092a\u0942\u0930\u094d\u0923 \u0915\u094d\u0930\u0949\u0938-\u0921\u094b\u092e\u0947\u0928 \u0921\u0947\u091f\u093e \u092d\u0947\u091c\u0947\u0902 (\u0932\u0947\u0915\u093f\u0928 \u091c\u0930\u0942\u0930\u0940 \u0928\u0939\u0940\u0902 \u0915\u093f \u092a\u0922\u093c\u0947\u0902) \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u0930\u0924\u093e \u0939\u0948 \u092b\u094d\u0932\u0948\u0936/Silverlight \u0918\u091f\u0915\u094b\u0902 \u0938\u0947 \u0939\u094b\u0928\u0947 \u0935\u093e\u0932\u0947 \u0915\u093f\u0938\u0940 \u092d\u0940 \u0924\u0943\u0924\u0940\u092f \u092a\u0915\u094d\u0937 \u0921\u094b\u092e\u0947\u0928 \u0938\u0947 \u0907\u0938 \u0921\u094b\u092e\u0947\u0928 \u0915\u0947 \u0932\u093f\u090f \u0938\u0947\u0935\u093e \u0915\u0940\u0964 \u092f\u0926\u093f \u0936\u093f\u0915\u093e\u0930 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0907\u0938 \u0938\u0947\u0935\u093e \u092e\u0947\u0902 \u0932\u0949\u0917 \u0907\u0928 \u0915\u093f\u092f\u093e \u0939\u0948, \u0924\u094b \u0926\u0941\u0930\u094d\u092d\u093e\u0935\u0928\u093e\u092a\u0942\u0930\u094d\u0923 \u0905\u0928\u0941\u0930\u094b\u0927\u094b\u0902 \u0936\u093f\u0915\u093e\u0930 \u0915\u0947 \u0935\u093f\u0936\u0947\u0937\u093e\u0927\u093f\u0915\u093e\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902, \u0914\u0930 \u0915\u094d\u0930\u0949\u0938 \u0938\u093e\u0907\u091f \u0905\u0928\u0941\u0930\u094b\u0927 \u091c\u093e\u0932\u0938\u093e\u091c\u0940 (CSRF) \u092a\u094d\u0930\u0915\u093e\u0930 \u0939\u092e\u0932\u094b\u0902, \u092a\u0940\u0921\u093c\u093f\u0924 \u0915\u0947 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u092a\u0930\u093f\u0923\u093e\u092e \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u092d\u0947\u091c\u0928\u0947 \u0915\u0947\u0964 \u092f\u0939 \u0935\u093f\u0936\u0947\u0937 \u0930\u0942\u092a \u0938\u0947 \u0905\u0917\u0930 \u090f\u0915 \u0938\u0924\u094d\u0930 \u0915\u0941\u0915\u0940 \u0906\u0927\u093e\u0930\u093f\u0924 \u0915\u094d\u0930\u093f\u092f\u093e\u0928\u094d\u0935\u092f\u0928 \u0909\u092a\u092f\u094b\u0917 \u092e\u0947\u0902 \u0939\u0948 \u090f\u0915 \u092e\u0941\u0926\u094d\u0926\u093e \u0939\u094b \u091c\u093e\u0928\u0947 \u0915\u0940 \u0938\u0902\u092d\u093e\u0935\u0928\u093e \u0939\u0948\u0964
ascanbeta.crossdomain.silverlight.name = \u0915\u094d\u0930\u0949\u0938-\u0921\u094b\u092e\u0947\u0928 Misconfiguration - Silverlight
ascanbeta.crossdomain.silverlight.desc = \u092b\u094d\u0932\u0948\u0936/Silverlight \u0906\u0927\u093e\u0930\u093f\u0924 \u0915\u094d\u0930\u0949\u0938-\u0938\u093e\u0907\u091f \u0905\u0928\u0941\u0930\u094b\u0927 \u091c\u093e\u0932\u0938\u093e\u091c\u0940 \u0938\u0902\u092d\u0935, \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u092a\u0930 \u090f\u0915 \u092e\u093f\u0938\u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930\u0947\u0936\u0928 \u0915\u0947 \u0915\u093e\u0930\u0923 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964 
ascanbeta.crossdomain.silverlight.soln = \u0915\u094d\u0930\u0949\u0938-\u0921\u094b\u092e\u0947\u0928 \u092a\u0920\u0928 \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0907\u0938 \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930, \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u094d\u0935\u0940\u0915\u0943\u0924 \u0921\u094b\u092e\u0947\u0928 \u0915\u0940 \u0938\u0942\u091a\u0940 \u0915\u094b \u0938\u0940\u092e\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f crossdomain.xml \u092b\u093c\u093e\u0907\u0932 \u0915\u094b \u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930 \u0915\u0930\u0947\u0902 < \u092f\u0939 domain\="example.com \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0902 \u092a\u0939\u0941\u0901\u091a-\u0938\u0947-" >\u0964 \u0906\u092a \u0915\u0947\u0935\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u0939\u0941\u0901\u091a \u0926\u0947\u0928\u093e \u091a\u093e\u0939\u093f\u090f "*" (\u0938\u092d\u0940 \u0921\u094b\u092e\u0947\u0928) \u092f\u0926\u093f \u0906\u092a \u0906\u0936\u094d\u0935\u0938\u094d\u0924 \u0939\u0948\u0902 \u0915\u093f \u0907\u0938 \u0938\u0947\u0935\u093e \u0915\u0947 \u0915\u093f\u0938\u0940 \u092d\u0940 \u092a\u0939\u0941\u0901\u091a-\u0928\u093f\u092f\u0902\u0924\u094d\u0930\u093f\u0924, \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u092f\u093e \u0928\u093f\u091c\u0940 \u0921\u0947\u091f\u093e \u0939\u094b\u0938\u094d\u091f \u0928\u0939\u0940\u0902 \u0915\u0930\u0924\u093e \u0939\u0948\u0964
ascanbeta.crossdomain.silverlight.extrainfo = \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0915\u093f\u0938\u0940 \u092d\u0940 \u0924\u0943\u0924\u0940\u092f \u092a\u0915\u094d\u0937 \u0921\u094b\u092e\u0947\u0928 \u0938\u0947 \u0907\u0938 \u0921\u094b\u092e\u0947\u0928 \u0915\u0947 \u0932\u093f\u090f \u0938\u0947\u0935\u093e \u0915\u0940 \u092b\u094d\u0932\u0948\u0936/Silverlight \u0918\u091f\u0915\u094b\u0902 \u0938\u0947 \u0939\u094b\u0928\u0947 \u0935\u093e\u0932\u0947 \u0905\u0928\u0941\u0930\u094b\u0927\u094b\u0902 \u092a\u0922\u093c\u0947\u0902 \u0926\u0941\u0930\u094d\u092d\u093e\u0935\u0928\u093e\u092a\u0942\u0930\u094d\u0923 \u0915\u094d\u0930\u0949\u0938-\u0921\u094b\u092e\u0947\u0928 \u0921\u0947\u091f\u093e \u092a\u0930\u092e\u093f\u091f\u0964 \u0905\u0917\u0930 \u0936\u093f\u0915\u093e\u0930 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0907\u0938 \u0938\u0947\u0935\u093e \u092e\u0947\u0902 \u0932\u0949\u0917 \u0907\u0928 \u0915\u093f\u092f\u093e \u0939\u0948, \u0926\u0941\u0930\u094d\u092d\u093e\u0935\u0928\u093e\u092a\u0942\u0930\u094d\u0923 \u092a\u0922\u093c\u0947\u0902 \u0905\u0928\u0941\u0930\u094b\u0927\u094b\u0902 \u0936\u093f\u0915\u093e\u0930 \u0915\u0947 \u0935\u093f\u0936\u0947\u0937\u093e\u0927\u093f\u0915\u093e\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902, \u0914\u0930 \u0907\u0938 \u0938\u0947\u0935\u093e \u0915\u0947 \u0926\u094d\u0935\u093e\u0930\u093e \u090f\u0915 \u0905\u0928\u0927\u093f\u0915\u0943\u0924 \u0924\u0943\u0924\u0940\u092f \u092a\u0915\u094d\u0937 \u0935\u0947\u092c \u0938\u093e\u0907\u091f, \u092a\u0940\u0921\u093c\u093f\u0924 \u0915\u0947 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0938\u092e\u091d\u094c\u0924\u093e \u0915\u093f\u092f\u093e \u091c\u093e \u0930\u0939\u093e \u0938\u0947 \u0921\u0947\u091f\u093e \u092e\u0947\u0902 \u092a\u0930\u093f\u0923\u093e\u092e \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964 \u092f\u0939 \u0935\u093f\u0936\u0947\u0937 \u0930\u0942\u092a \u0938\u0947 \u0905\u0917\u0930 \u090f\u0915 \u0938\u0924\u094d\u0930 \u0915\u0941\u0915\u0940 \u0906\u0927\u093e\u0930\u093f\u0924 \u0915\u094d\u0930\u093f\u092f\u093e\u0928\u094d\u0935\u092f\u0928 \u0909\u092a\u092f\u094b\u0917 \u092e\u0947\u0902 \u0939\u0948 \u090f\u0915 \u092e\u0941\u0926\u094d\u0926\u093e \u0939\u094b \u091c\u093e\u0928\u0947 \u0915\u0940 \u0938\u0902\u092d\u093e\u0935\u0928\u093e \u0939\u0948\u0964 

ascanbeta.csrftoken.name=Anti-CSRF Tokens Check
ascanbeta.csrftoken.extrainfo.annotation = This is an informational alert as the form has a security annotation indicating that it does not need an anti-CSRF Token. This should be tested manually to ensure the annotation is correct.

ascanbeta.envfiles.name = .env Information Leak
ascanbeta.envfiles.desc = One or more .env files seems to have been located on the server. These files often expose infrastructure or administrative account credentials, API or APP keys, or other sensitive configuration information. 
ascanbeta.envfiles.otherinfo = Based on response status code the .env file may be protected by an authentication or authorization mechanism.
ascanbeta.envfiles.refs = https\://www.google.com/search?q\=db_password+filetype%3Aenv\n\
https\://mobile.twitter.com/svblxyz/status/1045013939904532482
ascanbeta.envfiles.soln = Ensure the .env file is not accessible.

ascanbeta.getforpost.name=GET for POST
ascanbeta.getforpost.desc=A request that was originally observed as a POST was also accepted as a GET. This issue does not represent a security weakness unto itself, however, it may facilitate simplification of other attacks. For example if the original POST is subject to Cross-Site Scripting (XSS), then this finding may indicate that a simplified (GET based) XSS may also be possible.
ascanbeta.getforpost.soln=Ensure that only POST is accepted where POST is expected.

ascanbeta.heartbleed.name=Heartbleed \u0913\u092a\u0928\u090f\u0938\u090f\u0938\u090f\u0932 \u092d\u0947\u0926\u094d\u092f\u0924\u093e
ascanbeta.heartbleed.desc=TLS \u0915\u093e\u0930\u094d\u092f\u093e\u0928\u094d\u0935\u092f\u0928 \u092e\u0947\u0902 \u0938\u0902\u092d\u093e\u0935\u093f\u0924 \u0938\u0902\u0935\u0947\u0926\u0928\u0936\u0940\u0932 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u092c\u0924\u093e\u0928\u0947 \u091c\u094b \u0926\u0942\u0930\u0938\u094d\u0925 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u0938\u094d\u092e\u0943\u0924\u093f \u0917\u0922\u093c\u0940 \u0917\u0908 \u092a\u0948\u0915\u0947\u091f \u090f\u0915 \u092c\u092b\u0930 \u0905\u0924\u093f \u092a\u0922\u093c\u0928\u0947 \u0915\u094b \u091f\u094d\u0930\u093f\u0917\u0930 \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0938\u0902\u0935\u0947\u0926\u0928\u0936\u0940\u0932 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0915\u094b \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0939\u092e\u0932\u093e\u0935\u0930\u094b\u0902 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948, \u0913\u092a\u0928\u090f\u0938\u090f\u0938\u090f\u0932 1.0.1 \u0915\u0947 \u092a\u0939\u0932\u0947 1.0.1g \u0926\u093f\u0932 \u0915\u0940 \u0927\u0921\u093c\u0915\u0928 \u090f\u0915\u094d\u0938\u091f\u0947\u0902\u0936\u0928 \u0915\u0947 \u092a\u0948\u0915\u0947\u091f, \u0920\u0940\u0915 \u0924\u0930\u0939 \u0938\u0947 \u0939\u0948\u0902\u0921\u0932 \u0928\u0939\u0940\u0902\u0964
ascanbeta.heartbleed.soln=\u0913\u092a\u0928\u090f\u0938\u090f\u0938\u090f\u0932 1.0.1g \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0926\u094d\u092f\u0924\u0928 \u092f\u093e \u092c\u093e\u0926 \u092e\u0947\u0902\u0964 HTTPS \u092a\u094d\u0930\u092e\u093e\u0923\u092a\u0924\u094d\u0930 \u092a\u0941\u0928\u0903 \u091c\u093e\u0930\u0940\u0964 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928 \u0905\u0938\u092e\u092e\u093f\u0924 \u0928\u093f\u091c\u0940 \u0915\u0941\u0902\u091c\u093f\u092f\u094b\u0902 \u0914\u0930 \u0938\u093e\u091d\u093e \u0917\u0941\u092a\u094d\u0924 \u0915\u0941\u0902\u091c\u0940, \u0915\u0947 \u092c\u093e\u0926 \u0938\u0947 \u092f\u0947, \u0938\u0930\u094d\u0935\u0930 \u0932\u0949\u0917 \u092b\u093e\u0907\u0932 \u092e\u0947\u0902 \u0938\u092e\u091d\u094c\u0924\u0947 \u0915\u0940 \u0915\u094b\u0908 \u0938\u092c\u0942\u0924 \u0915\u0947 \u0938\u093e\u0925 \u0938\u092e\u091d\u094c\u0924\u093e \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964
ascanbeta.heartbleed.refs=http\://cvedetails.com/cve-details.php?t\=1&cve_id\=CVE-2014-0160
ascanbeta.heartbleed.extrainfo=\u0907\u0938 \u092e\u0941\u0926\u094d\u0926\u0947 \u0915\u0947 {0} \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0938\u0930\u094d\u0935\u0930, \u0938\u0947 exfiltrating \u0921\u0947\u091f\u093e \u0926\u094d\u0935\u093e\u0930\u093e \u0915\u0940 \u092a\u0941\u0937\u094d\u091f\u093f \u0915\u0940 \u0925\u0940\u0964 \u092f\u0939 \u090f\u0915 \u091d\u0942\u0920\u0940 \u0938\u0915\u093e\u0930\u093e\u0924\u094d\u092e\u0915 \u0939\u094b\u0928\u0947 \u0915\u0940 \u0938\u0902\u092d\u093e\u0935\u0928\u093e \u0928\u0939\u0940\u0902 \u0939\u0948\u0964

ascanbeta.hidden.files.name = Hidden File Finder
ascanbeta.hidden.files.alert.name = Hidden File Found
ascanbeta.hidden.files.desc = A sensitive file was identified as accessible or available. This may leak administrative, configuration, or credential information which can be leveraged by a malicious individual to further attack the system or conduct social engineering efforts.
ascanbeta.hidden.files.otherinfo = {0}
ascanbeta.hidden.files.refs = https\://blog.hboeck.de/archives/892-Introducing-Snallygaster-a-Tool-to-Scan-for-Secrets-on-Web-Servers.html
ascanbeta.hidden.files.soln = Consider whether or not the component is actually required in production, if it isn't then disable it. If it is then ensure access to it requires appropriate authentication and authorization, or limit exposure to internal systems or specific source IPs, etc.

ascanbeta.HTTPParamPoll.name = HTTP \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u092a\u094d\u0930\u0926\u0942\u0937\u0923
ascanbeta.HTTPParamPoll.desc = HTTP \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u092a\u094d\u0930\u0926\u0942\u0937\u0923 (HPP) \u0939\u092e\u0932\u094b\u0902 \u0938\u0947 \u092e\u093f\u0932\u0915\u0930 \u0905\u0928\u094d\u092f \u092e\u094c\u091c\u0942\u0926\u093e \u092e\u093e\u0928\u0915\u094b\u0902 \u092e\u0947\u0902 \u090f\u0928\u094d\u0915\u094b\u0921\u0947\u0921 \u0915\u094d\u0935\u0947\u0930\u0940 \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u0938\u0940\u092e\u093e\u0902\u0915\u0915 \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928 \u0932\u0917\u093e\u0928\u0947 \u0915\u093e\u0964 \u0905\u0917\u0930 \u090f\u0915 \u0935\u0947\u092c \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0920\u0940\u0915 \u0938\u0947 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u0947 \u0907\u0928\u092a\u0941\u091f sanitize \u0928\u0939\u0940\u0902, \u090f\u0915 \u0926\u0941\u0930\u094d\u092d\u093e\u0935\u0928\u093e\u092a\u0942\u0930\u094d\u0923 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u0947 \u0924\u0930\u094d\u0915 \u092f\u093e \u0924\u094b \u0938\u0930\u094d\u0935\u0930-\u0938\u093e\u0907\u0921 \u092f\u093e \u0915\u094d\u0932\u093e\u0907\u0902\u091f-\u0938\u093e\u0907\u0921 \u0939\u092e\u0932\u094b\u0902 \u0915\u094b \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0915\u0947 \u0938\u092e\u091d\u094c\u0924\u093e \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964 HPP \u0939\u092e\u0932\u094b\u0902 \u0915\u093e \u090f\u0915 \u0928\u0924\u0940\u091c\u093e \u092f\u0939 \u0939\u0948 \u0915\u093f \u0939\u092e\u0932\u093e\u0935\u0930 \u0938\u0902\u092d\u0935\u0924\u0903 \u092e\u094c\u091c\u0942\u0926\u093e \u0939\u093e\u0930\u094d\u0921 \u0915\u094b\u0921\u093f\u0924 HTTP \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u0938\u0940 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0915\u0947 \u0935\u094d\u092f\u0935\u0939\u093e\u0930 \u0915\u094b \u0938\u0902\u0936\u094b\u0927\u093f\u0924, \u0907\u0928\u092a\u0941\u091f \u0938\u0924\u094d\u092f\u093e\u092a\u0928 \u091a\u094c\u0915\u093f\u092f\u094b\u0902, \u092c\u093e\u0908\u092a\u093e\u0938 \u0914\u0930 \u0924\u0915 \u092a\u0939\u0941\u0901\u091a\u0928\u0947 \u0914\u0930 \u0938\u0902\u092d\u0935\u0924\u0903 \u091a\u0930 \u0915\u093f \u092a\u094d\u0930\u0924\u094d\u092f\u0915\u094d\u0937 \u092a\u0939\u0941\u0901\u091a \u0938\u0947 \u092c\u093e\u0939\u0930 \u0939\u094b \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u092b\u093e\u092f\u0926\u093e \u0909\u0920\u093e\u0928\u0947 \u0915\u094b \u0913\u0935\u0930\u0930\u093e\u0907\u0921 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964
ascanbeta.HTTPParamPoll.sol =  \u0920\u0940\u0915 \u0938\u0947 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0907\u0928\u092a\u0941\u091f \u0915\u0947 \u0932\u093f\u090f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0938\u0940\u092e\u093e\u0902\u0915\u0915 sanitize
ascanbeta.HTTPParamPoll.alert.attack = HTTP \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u092a\u094d\u0930\u0926\u0942\u0937\u0923
ascanbeta.HTTPParamPoll.extrainfo = http\://www.google.com/search?q\=http+parameter+pollution

ascanbeta.httponlysite.name = HTTP Only Site
ascanbeta.httponlysite.desc = The site is only served under HTTP and not HTTPS.
ascanbeta.httponlysite.soln = Configure your web or application server to use SSL (https).
ascanbeta.httponlysite.refs = https\://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html\n\
https\://letsencrypt.org/
ascanbeta.httponlysite.otherinfo = {0}\n\
ZAP attempted to connect via\: {1}
ascanbeta.httponlysite.otherinfo.connectionfail = Failed to connect.
ascanbeta.httponlysite.otherinfo.differenthosts = Different Hosts.
ascanbeta.httponlysite.otherinfo.redirectionlimit = Redirection limit reached.
ascanbeta.httponlysite.otherinfo.noredirection = There was no automatic redirection.
ascanbeta.httponlysite.otherinfo.nossl = Site has no SSL/TLS support.
ascanbeta.httponlysite.otherinfo.redirecttohttp = Redirected to HTTP.
ascanbeta.httponlysite.otherinfo.urinotencoded = Redirection URI couldn't be encoded.

ascanbeta.httpoxy.name = Httpoxy - Proxy Header Misuse
ascanbeta.httpoxy.desc = The server initiated a proxied request via the proxy specified in the HTTP Proxy header of the request.\n\
Httpoxy typically affects code running in CGI or CGI like environments.\n\
\n\
This may allow attackers to\:\n\
\n\
* Proxy the outgoing HTTP requests made by the web application\n\
\n\
* Direct the server to open outgoing connections to an address and port of their choosing or\n\
\n\
* Tie up server resources by forcing the vulnerable software to use a malicious proxy
ascanbeta.httpoxy.otherinfo = An outgoing message to {0} was proxied via the host and port that ZAP injected into the HTTP Proxy header.
ascanbeta.httpoxy.soln = The best immediate mitigation is to block Proxy request headers as early as possible, and before they hit your application.
ascanbeta.httpoxy.refs = https\://httpoxy.org/

ascanbeta.httpsashttp.name = HTTPS Content Available via HTTP
ascanbeta.httpsashttp.desc = Content which was initially accessed via HTTPS (i.e.\: using SSL/TLS encryption) is also accessible via HTTP (without encryption). 
ascanbeta.httpsashttp.soln = Ensure that your web server, application server, load balancer, etc. is configured to only serve such content via HTTPS. Consider implementing HTTP Strict Transport Security.
ascanbeta.httpsashttp.refs = https\://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\n\
https\://owasp.org/www-community/Security_Headers\n\
http\://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\n\
http\://caniuse.com/stricttransportsecurity\n\
http\://tools.ietf.org/html/rfc6797
ascanbeta.httpsashttp.otherinfo=ZAP attempted to connect via\: {0}

ascanbeta.insecurehttpmethod.name = \u0905\u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 HTTP \u0935\u093f\u0927\u093f
ascanbeta.insecurehttpmethod.detailed.name = \u0905\u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 HTTP \u0935\u093f\u0927\u093f - {0}
ascanbeta.insecurehttpmethod.potentiallyinsecure = response code {0} for potentially insecure HTTP METHOD
ascanbeta.insecurehttpmethod.insecure = response code {0} for insecure HTTP METHOD
ascanbeta.insecurehttpmethod.desc = \u0905\u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 HTTP \u0935\u093f\u0927\u093f [{0}] \u0907\u0938 \u0938\u0902\u0938\u093e\u0927\u0928 \u0915\u0947 \u0932\u093f\u090f \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u092a\u0930 \u0938\u0915\u094d\u0937\u092e \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\u0964 \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930\u0947\u0936\u0928, \u0914\u0930 \u0905\u0902\u0924\u0930\u094d\u0928\u093f\u0939\u093f\u0924 \u0915\u093e\u0930\u094d\u092f\u093e\u0928\u094d\u0935\u092f\u0928 \u0938\u0902\u0938\u093e\u0927\u0928 \u0915\u0940 \u0938\u0947\u0935\u093e \u0915\u0947 \u0932\u093f\u090f \u091c\u093f\u092e\u094d\u092e\u0947\u0926\u093e\u0930, \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u092f\u0939 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948 \u092f\u093e \u0926\u094b\u0939\u0928 \u0928\u0939\u0940\u0902 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964 \u091f\u094d\u0930\u0948\u0915 \u0914\u0930 \u091f\u094d\u0930\u0947\u0938 \u0935\u093f\u0927\u093f\u092f\u093e\u0901 \u0906\u0915\u094d\u0930\u092e\u0923\u0915\u0930\u094d\u0924\u093e \u0926\u094d\u0935\u093e\u0930\u093e, \u092d\u0932\u0947 \u0939\u0940 \u0938\u0924\u094d\u0930 \u0915\u0941\u0915\u0940 ''HttpOnly'' \u0927\u094d\u0935\u091c \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0939\u0948 \u092a\u094d\u0930\u093e\u0927\u093f\u0915\u093e\u0930 \u091f\u094b\u0915\u0928/\u0938\u0924\u094d\u0930 \u0915\u0941\u0915\u0940 \u090f\u0915 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e, \u0915\u0947 \u0932\u093f\u090f \u092a\u0939\u0941\u0901\u091a \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0907\u0938\u094d\u0924\u0947\u092e\u093e\u0932 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e\u0964 \u0907\u0938 \u0939\u092e\u0932\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u092b\u0932 \u0939\u094b\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0906\u092e \u0924\u094c\u0930 \u092a\u0930 \u090f\u0915 \u092c\u0921\u093c\u0947 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930, \u092f\u093e \u090f\u0915 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0939\u0948 \u091c\u094b \u0939\u0948 \u090f\u0915 \u090f\u0915 \u0939\u0940 \u092e\u0942\u0932 \u0928\u0940\u0924\u093f (\u092d\u0947\u0926\u094d\u092f\u0924\u093e \u092c\u093e\u092f\u092a\u093e\u0938 \u0936\u0930\u093e\u092c\u0940) \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e \u091a\u093e\u0939\u093f\u090f\u0964 ''\u0915\u0928\u0947\u0915\u094d\u091f'' \u0935\u093f\u0927\u093f \u090f\u0915 \u0935\u0947\u092c \u0915\u094d\u0932\u093e\u0907\u0902\u091f \u0926\u094d\u0935\u093e\u0930\u093e \u0924\u0943\u0924\u0940\u092f \u092a\u0915\u094d\u0937 \u0915\u0940 \u0935\u0947\u092c\u0938\u093e\u0907\u091f\u094b\u0902 \u092f\u093e \u0938\u0947\u0935\u093e\u0913\u0902 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 HTTP \u0938\u0941\u0930\u0902\u0917 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0907\u0938\u094d\u0924\u0947\u092e\u093e\u0932 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e\u0964
ascanbeta.insecurehttpmethod.trace.exploitable.desc = \u0905\u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 HTTP \u0935\u093f\u0927\u093f [{0}] \u0907\u0938 \u0938\u0902\u0938\u093e\u0927\u0928 \u0915\u0947 \u0932\u093f\u090f \u0938\u0915\u094d\u0937\u092e \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948, \u0914\u0930 \u0926\u094b\u0939\u0928 \u0939\u0948\u0964 \u091f\u094d\u0930\u0948\u0915 \u0914\u0930 \u091f\u094d\u0930\u0947\u0938 \u0935\u093f\u0927\u093f\u092f\u093e\u0901 \u0906\u0915\u094d\u0930\u092e\u0923\u0915\u0930\u094d\u0924\u093e \u0926\u094d\u0935\u093e\u0930\u093e, \u092d\u0932\u0947 \u0939\u0940 \u0938\u0924\u094d\u0930 \u0915\u0941\u0915\u0940 ''HttpOnly'' \u0927\u094d\u0935\u091c \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0939\u0948 \u092a\u094d\u0930\u093e\u0927\u093f\u0915\u093e\u0930 \u091f\u094b\u0915\u0928/\u0938\u0924\u094d\u0930 \u0915\u0941\u0915\u0940 \u090f\u0915 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e, \u0915\u0947 \u0932\u093f\u090f \u092a\u0939\u0941\u0901\u091a \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0907\u0938\u094d\u0924\u0947\u092e\u093e\u0932 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e\u0964 \u0907\u0938 \u0939\u092e\u0932\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u092b\u0932 \u0939\u094b\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0906\u092e \u0924\u094c\u0930 \u092a\u0930 \u090f\u0915 \u092c\u0921\u093c\u0947 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930, \u092f\u093e \u090f\u0915 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0939\u0948 \u091c\u094b \u0939\u0948 \u090f\u0915 \u090f\u0915 \u0939\u0940 \u092e\u0942\u0932 \u0928\u0940\u0924\u093f (\u092d\u0947\u0926\u094d\u092f\u0924\u093e \u092c\u093e\u092f\u092a\u093e\u0938 \u0936\u0930\u093e\u092c\u0940) \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e \u091a\u093e\u0939\u093f\u090f\u0964
ascanbeta.insecurehttpmethod.trace.exploitable.extrainfo = \u090f\u0915 \u091f\u094d\u0930\u0947\u0938 \u0905\u0928\u0941\u0930\u094b\u0927 \u090f\u0915 \u0915\u0938\u094d\u091f\u092e \u0915\u0941\u0915\u0940 \u092e\u093e\u0928 [{0}] \u0915\u0947 \u0938\u093e\u0925 \u0907\u0938 \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u0947 \u0932\u093f\u090f \u092d\u0947\u091c\u093e \u0917\u092f\u093e \u0925\u093e\u0964 \u092f\u0939 \u0915\u0941\u0915\u0940 \u092e\u093e\u0928 HTTP \u092a\u094d\u0930\u0924\u093f\u0938\u093e\u0926 \u092e\u0947\u0902, \u0938\u0941\u0930\u0915\u094d\u0937\u093e \u092d\u0947\u0926\u094d\u092f\u0924\u093e \u0905\u0928\u0941\u0930\u0941\u092a \u0916\u0941\u0932\u093e\u0938\u093e \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0925\u093e\u0964
ascanbeta.insecurehttpmethod.connect.exploitable.desc = \u0905\u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 HTTP \u0935\u093f\u0927\u093f [{0}] \u0907\u0938 \u0938\u0902\u0938\u093e\u0927\u0928 \u0915\u0947 \u0932\u093f\u090f \u0938\u0915\u094d\u0937\u092e \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948, \u0914\u0930 \u0926\u094b\u0939\u0928 \u0939\u0948\u0964 \u092f\u0939 \u0938\u0947\u0935\u093e \u0907\u0938 HTTP \u092a\u0926\u094d\u0927\u0924\u093f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947, \u090f\u0915 \u0924\u0940\u0938\u0930\u0940 \u092a\u093e\u0930\u094d\u091f\u0940 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 tunneled \u0938\u0949\u0915\u0947\u091f \u0915\u0928\u0947\u0915\u094d\u0936\u0928 \u0938\u094d\u0925\u093e\u092a\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u0902\u092d\u0935 \u0939\u094b \u092a\u093e\u092f\u093e \u0925\u093e\u0964  \u092f\u0939 \u0938\u0947\u0935\u093e \u090f\u0915 \u0905\u0928\u093e\u092e \u0938\u094d\u092a\u0948\u092e \u0930\u093f\u0932\u0947 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902, \u092f\u093e \u090f\u0915 \u0935\u0947\u092c \u092a\u094d\u0930\u0949\u0915\u094d\u0938\u0940 \u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u092a\u094d\u0930\u0924\u093f\u092c\u0902\u0927\u094b\u0902 \u0915\u094b \u0926\u0930\u0915\u093f\u0928\u093e\u0930, \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0907\u0938\u094d\u0924\u0947\u092e\u093e\u0932 \u0915\u093f\u092f\u093e \u091c\u093e \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0939\u094b\u0917\u0940\u0964 \u092f\u0939 \u092d\u0940 \u0907\u0938\u0947 \u090f\u0915 tunneled \u0935\u0940\u092a\u0940\u090f\u0928, \u092a\u094d\u0930\u092d\u093e\u0935\u0940 \u0922\u0902\u0917 \u0938\u0947 \u0905\u0935\u093f\u0936\u094d\u0935\u0938\u094d\u0924 \u0918\u091f\u0915\u094b\u0902 \u0915\u094b \u0936\u093e\u092e\u093f\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u092a\u0930\u093f\u0927\u093f \u0915\u093e \u0935\u093f\u0938\u094d\u0924\u093e\u0930 \u0938\u094d\u0925\u093e\u092a\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0907\u0938\u094d\u0924\u0947\u092e\u093e\u0932 \u0915\u093f\u092f\u093e \u091c\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964 
ascanbeta.insecurehttpmethod.extrainfo = \u0928\u093f\u092e\u094d\u0928 HTTP \u0924\u0930\u0940\u0915\u094b\u0902 \u0907\u0938 \u0938\u0902\u0938\u093e\u0927\u0928 \u0915\u0947 \u0932\u093f\u090f \u0938\u0915\u094d\u0937\u092e \u0935\u093f\u0915\u0932\u094d\u092a \u0935\u093f\u0927\u093f \u0916\u0941\u0932\u093e\u0938\u093e \u0915\u093f\u092f\u093e\: [{0}]
ascanbeta.insecurehttpmethod.connect.exploitable.extrainfo = \u0915\u0928\u0947\u0915\u094d\u091f \u0935\u093f\u0927\u093f [{0}], \u090f\u0915 \u0938\u0949\u0915\u0947\u091f \u0915\u0928\u0947\u0915\u094d\u0936\u0928 \u0926\u094d\u0935\u093e\u0930\u093e \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0938\u094d\u0925\u093e\u092a\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0907\u0938\u094d\u0924\u0947\u092e\u093e\u0932 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0925\u093e\u0964
ascanbeta.insecurehttpmethod.soln = \u0910\u0938\u0947 \u091f\u094d\u0930\u0948\u0915, \u091f\u094d\u0930\u0947\u0938, \u0914\u0930 \u0915\u0928\u0947\u0915\u094d\u091f \u0905\u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0924\u0930\u0940\u0915\u0947 \u0915\u094b \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u092a\u0930 \u0905\u0915\u094d\u0937\u092e \u0915\u0930\u0947\u0902, \u0914\u0930 \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0947\u0902 \u0915\u093f \u0905\u0902\u0924\u0930\u094d\u0928\u093f\u0939\u093f\u0924 \u0938\u0947\u0935\u093e \u0915\u093e\u0930\u094d\u092f\u093e\u0928\u094d\u0935\u092f\u0928 \u0905\u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0924\u0930\u0940\u0915\u0947 \u0915\u093e \u0938\u092e\u0930\u094d\u0925\u0928 \u0928\u0939\u0940\u0902 \u0915\u0930\u0924\u093e\u0964
ascanbeta.insecurehttpmethod.delete.exploitable.desc = This method is most commonly used in REST services, It is used to delete a resource.
ascanbeta.insecurehttpmethod.delete.exploitable.extrainfo = See the discussion on stackexchange\: https\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods, for understanding REST operations see http\://www.restapitutorial.com/lessons/httpmethods.html
ascanbeta.insecurehttpmethod.options.exploitable.desc = This is a diagnostic method and should never be turned on in production mode.
ascanbeta.insecurehttpmethod.options.exploitable.extrainfo = See the discussion on stackexchange\: https\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods
ascanbeta.insecurehttpmethod.put.exploitable.desc = This method was originally intended for file managemant operations. It is now most commonly used in REST services, PUT is most-often utilized for **update** capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource..
ascanbeta.insecurehttpmethod.put.exploitable.extrainfo = See the discussion on stackexchange\: https\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods, for understanding REST operations see http\://www.restapitutorial.com/lessons/httpmethods.html
ascanbeta.insecurehttpmethod.patch.exploitable.desc = This method is now most commonly used in REST services, PATCH is used for **modify** capabilities. The PATCH request only needs to contain the changes to the resource, not the complete resource.
ascanbeta.insecurehttpmethod.patch.exploitable.extrainfo = See the discussion on stackexchange\: https\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods, for understanding REST operations see http\://www.restapitutorial.com/lessons/httpmethods.html
ascanbeta.insecurehttpmethod.webdav.exploitable.desc = This HTTP method is a WEBDAV method\: {0}. If this server is not offering any WEBDAV services, these methods should not be available.
ascanbeta.insecurehttpmethod.webdav.exploitable.extrainfo = See the discussion on stackexchange\: https\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods


ascanbeta.integeroverflow.name = Integer Overflow Error
ascanbeta.integeroverflow.desc = An integer overflow condition exists when an integer, which has not been properly checked from the input stream is used within a compiled program. 
ascanbeta.integeroverflow.soln = Rewrite the background program using proper checking of the size of integer being input to prevent overflows and divide by 0 errors.  This will require a recompile of the background executable.
ascanbeta.integeroverflow.refs = http\://projects.webappsec.org/w/page/13246946/Integer%20Overflows
ascanbeta.integeroverflow.error1 = Potential Integer Overflow.  Status code changed on the input of a long string of random integers.
ascanbeta.integeroverflow.error2 = Potential Integer Overflow.  Status code changed on the input of a long string of zeros.
ascanbeta.integeroverflow.error3 = Potential Integer Overflow.  Status code changed on the input of a long string of ones.
ascanbeta.integeroverflow.error4 = Potential Integer Overflow.  Status code changed on the input of a long string of nines.

ascanbeta.noanticsrftokens.name=\u0935\u093f\u0930\u094b\u0927\u0940-CSRF \u091f\u094b\u0915\u0928 \u0915\u0940 \u0905\u0928\u0941\u092a\u0938\u094d\u0925\u093f\u0924\u093f
ascanbeta.noanticsrftokens.desc=\u0915\u094b\u0908 \u090f\u0902\u091f\u0940-CSRF \u091f\u094b\u0915\u0928 \u090f\u0915 HTML \u092a\u094d\u0930\u0938\u094d\u0924\u0941\u0924 \u092b\u093e\u0930\u094d\u092e \u092e\u0947\u0902 \u092a\u093e\u090f \u0917\u090f\u0964

ascanbeta.payloader.desc=Provides support for custom payloads in scan rules.
ascanbeta.payloader.name=Active Scan Rules Beta Custom Payloads

ascanbeta.proxydisclosure.name=Proxy Disclosure
ascanbeta.proxydisclosure.desc={0} proxy server(s) were detected or fingerprinted. This information helps a potential attacker to determine \n\
 - A list of targets for an attack against the application.\n\
 - Potential vulnerabilities on the proxy servers that service the application.\n\
 - The presence or absence of any proxy-based components that might cause attacks against the application to be detected, prevented, or mitigated. 
ascanbeta.proxydisclosure.soln=Disable the 'TRACE' method on the proxy servers, as well as the origin web/application server.\n\
Disable the 'OPTIONS' method on the proxy servers, as well as the origin web/application server, if it is not required for other purposes, such as 'CORS' (Cross Origin Resource Sharing).\n\
Configure the web and application servers with custom error pages, to prevent 'fingerprintable' product-specific error pages being leaked to the user in the event of HTTP errors, such as 'TRACK' requests for non-existent pages.\n\
Configure all proxies, application servers, and web servers to prevent disclosure of the technology and version information in the 'Server' and 'X-Powered-By' HTTP response headers.\n\

ascanbeta.proxydisclosure.refs=https\://tools.ietf.org/html/rfc7231\#section-5.1.2
ascanbeta.proxydisclosure.attack=TRACE, OPTIONS methods with 'Max-Forwards' header. TRACK method.
ascanbeta.proxydisclosure.extrainfo.unknown=Unknown
ascanbeta.proxydisclosure.extrainfo.proxyserver.header=Using the TRACE, OPTIONS, and TRACK methods, the following proxy servers have been identified between OWASP ZAP and the application/web server\: 
ascanbeta.proxydisclosure.extrainfo.proxyserver= - {0}
ascanbeta.proxydisclosure.extrainfo.webserver.header=The following web/application server has been identified\: 
ascanbeta.proxydisclosure.extrainfo.webserver= - {0}
ascanbeta.proxydisclosure.extrainfo.silentproxyserver.header=The following 'silent' proxy servers were identified. Due to their behaviour, it is not known at which point in the network topology these proxy servers reside\:
ascanbeta.proxydisclosure.extrainfo.silentproxyserver= - {0}
ascanbeta.proxydisclosure.extrainfo.traceenabled=The 'TRACE' method is enabled on one or more of the proxy servers, or on the origin server. This method leaks all information submitted from the web browser and proxies back to the user agent. This may facilitate 'Cross Site Tracing' attacks. 

ascanbeta.relativepathconfusion.name=Relative Path Confusion
ascanbeta.relativepathconfusion.desc=The web server is configured to serve responses to ambiguous URLs in a manner that is likely to lead to confusion about the correct "relative path" for the URL. Resources (CSS, images, etc.) are also specified in the page response using relative, rather than absolute URLs. In an attack, if the web browser parses the "cross-content" response in a permissive manner, or can be tricked into permissively parsing the "cross-content" response, using techniques such as framing, then the web browser may be fooled into interpreting HTML as CSS (or other content types), leading to an XSS vulnerability.
ascanbeta.relativepathconfusion.soln=Web servers and frameworks should be updated to be configured to not serve responses to ambiguous URLs in such a way that the relative path of such URLs could be mis-interpreted by components on either the client side, or server side.\n\
Within the application, the correct use of the "<base>" HTML tag in the HTTP response will unambiguously specify the base URL for all relative URLs in the document.\n\
Use the "Content-Type" HTTP response header to make it harder for the attacker to force the web browser to mis-interpret the content type of the response.\n\
Use the "X-Content-Type-Options\: nosniff" HTTP response header to prevent the web browser from "sniffing" the content type of the response.\n\
Use a modern DOCTYPE such as "<\!doctype html>" to prevent the page from being rendered in the web browser using "Quirks Mode", since this results in the content type being ignored by the web browser.\n\
Specify the "X-Frame-Options" HTTP response header to prevent Quirks Mode from being enabled in the web browser using framing attacks. 
ascanbeta.relativepathconfusion.refs=http\://www.thespanner.co.uk/2014/03/21/rpo/\n\
https\://hsivonen.fi/doctype/\n\
http\://www.w3schools.com/tags/tag_base.asp
ascanbeta.relativepathconfusion.extrainfo.morethanonebasetag=More than one <base> tag was specified in the HTML <head> tag to define the location for relative URLs, which is not valid.
ascanbeta.relativepathconfusion.extrainfo.nobasetag=No <base> tag was specified in the HTML <head> tag to define the location for relative URLs.
ascanbeta.relativepathconfusion.extrainfo.contenttypeenabled=A Content Type of "{0}" was specified. If the web browser is employing strict parsing rules, this will prevent cross-content attacks from succeeding. Quirks Mode in the web browser would disable strict parsing.  
ascanbeta.relativepathconfusion.extrainfo.quirksmodeenabledexplicitly=Quirks Mode is explicitly enabled via <meta http-equiv\="{0}", allowing the specified Content Type to be bypassed.
ascanbeta.relativepathconfusion.extrainfo.quirksmodeenabledimplicitly=Quirks Mode is implicitly enabled via the use of an old DOCTYPE with PUBLIC id "{0}", allowing the specified Content Type to be bypassed in some web browsers.
ascanbeta.relativepathconfusion.extrainfo.quirksmodeenabledimplicitlynodoctype=Quirks Mode is implicitly enabled via the absence of a DOCTYPE, allowing the specified Content Type to be bypassed.
ascanbeta.relativepathconfusion.extrainfo.nocontenttype=No Content Type was specified, so Quirks Mode is not required to exploit the vulnerability in the web browser. 
ascanbeta.relativepathconfusion.extrainfo.framingallowed=No X-Frame-Options header was specified, so the page can be framed, and this can be used to enable Quirks Mode, allowing the specified Content Type to be bypassed.

ascanbeta.remotecodeexecution.cve-2012-1823.name = \u0930\u093f\u092e\u094b\u091f \u0915\u094b\u0921 \u0915\u093e \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 - CVE-2012-1823
ascanbeta.remotecodeexecution.cve-2012-1823.desc = \u0915\u0941\u091b PHP \u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u0939\u0948, \u091c\u092c CGI, \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u091a\u0932\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0938\u0939\u0940 \u0922\u0902\u0917 \u0938\u0947 \u092e\u0928\u092e\u093e\u0928\u093e \u0915\u094b\u0921 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 \u0915\u094b \u0938\u0915\u094d\u0937\u092e \u0915\u0930\u0928\u0947 \u0915\u0947 \u090f\u0915 unescaped "\=" \u0935\u0930\u094d\u0923, \u0915\u092e\u0940 \u0915\u094d\u0935\u0947\u0930\u0940 \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917\u094d\u0938 \u0939\u0948\u0902\u0921\u0932 \u0928\u0939\u0940\u0902\u0964 \u0907\u0938 \u092e\u093e\u092e\u0932\u0947 \u092e\u0947\u0902, \u090f\u0915 \u0911\u092a\u0930\u0947\u091f\u093f\u0902\u0917 \u0938\u093f\u0938\u094d\u091f\u092e \u0915\u092e\u093e\u0902\u0921 \u0915\u094b \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u092a\u0930 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093e\u0930\u0923 \u0925\u093e, \u0914\u0930 \u092a\u0930\u093f\u0923\u093e\u092e \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0915\u0947 \u0932\u093f\u090f \u0932\u094c\u091f \u0906\u090f \u0925\u0947\u0964 
ascanbeta.remotecodeexecution.cve-2012-1823.soln = PHP \u0915\u093e \u0928\u0935\u0940\u0928\u0924\u092e \u0938\u094d\u0925\u093f\u0930 \u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u0915\u0947 \u0932\u093f\u090f \u0928\u0935\u0940\u0928\u0940\u0915\u0930\u0923, \u092f\u093e \u0926\u0941\u0930\u094d\u092d\u093e\u0935\u0928\u093e\u092a\u0942\u0930\u094d\u0923 \u0905\u0928\u0941\u0930\u094b\u0927\u094b\u0902 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u0947 "RewriteCond" \u0914\u0930 "RewriteRule" \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u092c\u093e\u0939\u0930 \u092b\u093c\u093f\u0932\u094d\u091f\u0930 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f Apache \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0914\u0930 mod_rewrite \u092e\u0949\u0921\u094d\u092f\u0942\u0932 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902\u0964

ascanbeta.sessionfixation.name=\u0938\u0924\u094d\u0930 \u0928\u093f\u0930\u094d\u0927\u093e\u0930\u0923
ascanbeta.sessionfixation.desc=\u0938\u0924\u094d\u0930 \u0928\u093f\u0930\u094d\u0927\u093e\u0930\u0923 \u0938\u0902\u092d\u0935 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964 \u092f\u0926\u093f \u090f\u0915 \u0932\u0949\u0917\u093f\u0928 (\u091c\u0939\u093e\u0901 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0938\u094d\u0935\u092f\u0902 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 authenticates) URL \u0915\u0947 \u0938\u093e\u0925 \u092f\u0939 \u0938\u092e\u0938\u094d\u092f\u093e \u0939\u094b\u0924\u0940 \u0939\u0948, \u0924\u094b \u092f\u0942\u0906\u0930\u090f\u0932 \u090f\u0915 \u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0938\u0924\u094d\u0930 id, \u0915\u0947 \u0938\u093e\u0925 \u0938\u093e\u0925 \u090f\u0915 \u0939\u092e\u0932\u093e\u0935\u0930 \u0926\u094d\u0935\u093e\u0930\u093e \u0936\u093f\u0915\u093e\u0930 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0906\u0926\u0947\u0936 \u092e\u0947\u0902 \u092c\u093e\u0926 \u092e\u0947\u0902 \u0926\u093f\u090f \u0917\u090f \u0938\u0924\u094d\u0930 id \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0936\u093f\u0915\u093e\u0930 \u0915\u0940 \u092a\u0939\u091a\u093e\u0928 \u092e\u093e\u0928 \u0915\u0947 \u0932\u093f\u090f \u0926\u0940 \u091c\u093e \u0938\u0915\u0924\u0940 \u0939\u0948\u0964 \u092f\u0926\u093f \u0915\u093f\u0938\u0940 \u0917\u0948\u0930-\u0932\u0949\u0917\u0907\u0928 \u092a\u0947\u091c \u0915\u0947 \u0938\u093e\u0925 \u0938\u092e\u0938\u094d\u092f\u093e \u0939\u094b\u0924\u0940 \u0939\u0948, \u092f\u0942\u0906\u0930\u090f\u0932 \u0914\u0930 \u092b\u093f\u0915\u094d\u0938\u094d\u0921 \u0938\u0924\u094d\u0930 id \u0915\u0947\u0935\u0932 \u090f\u0915 \u0939\u092e\u0932\u093e\u0935\u0930 \u0928\u0947 \u090f\u0915 \u091c\u093f\u0938\u092e\u0947\u0902 \u0905\u092a\u094d\u0930\u092e\u093e\u0923\u093f\u0915 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u091f\u094d\u0930\u0948\u0915 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0907\u0938\u094d\u0924\u0947\u092e\u093e\u0932 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e\u0964 \u092f\u0926\u093f \u091c\u094b\u0916\u093f\u092e \u092a\u0930 \u090f\u0915 \u0915\u0941\u0915\u0940 \u092b\u093c\u0940\u0932\u094d\u0921 \u092f\u093e \u0915\u093f\u0938\u0940 \u092a\u094d\u0930\u092a\u0924\u094d\u0930 \u092b\u093c\u0940\u0932\u094d\u0921 (\u092a\u094b\u0938\u094d\u091f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930) \u0915\u0947 \u092c\u091c\u093e\u092f \u090f\u0915 URL (\u091c\u093e\u0913) \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u092a\u0930 \u0939\u094b\u0924\u0940 \u0939\u0948, \u0924\u092c \u0915\u0941\u091b \u0905\u0928\u094d\u092f \u092d\u0947\u0926\u094d\u092f\u0924\u093e \u092d\u0940 \u0915\u0941\u0915\u0940 \u0915\u094d\u0937\u0947\u0924\u094d\u0930 \u092d\u0947\u0926\u094d\u092f\u0924\u093e \u0915\u093e \u0936\u094b\u0937\u0923 \u0915\u093f\u092f\u093e \u091c\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u0940\u0921\u093c\u093f\u0924 \u0915\u0947 \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u092a\u0930, \u0938\u0947\u091f \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u0921\u093c \u0938\u0915\u0924\u093e \u0939\u0948\u0964
ascanbeta.sessionfixation.soln=1) \u0939\u092e\u0932\u093e\u0935\u0930 \u0915\u094b \u0930\u094b\u0915\u0928\u0947 \u0938\u0916\u094d\u0924 \u0938\u0924\u094d\u0930 ids \u0915\u094b \u0932\u093e\u0917\u0942 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0926\u094d\u0935\u093e\u0930\u093e, \u0914\u0930 \u0915\u0947\u0935\u0932 \u0938\u092b\u0932 \u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0906\u0935\u0947\u0926\u0928 \u0915\u0930\u0928\u0947 \u092a\u0930 \u0938\u0924\u094d\u0930 ids \u0915\u093e \u0906\u0935\u0902\u091f\u0928 \u0926\u094d\u0935\u093e\u0930\u093e \u090f\u0915 \u0938\u0924\u094d\u0930 id \u092a\u093e\u0928\u0947 \u0938\u0947\u0964 2) \u0938\u0930\u094d\u0935\u0930 \u0939\u092e\u0947\u0936\u093e \u090f\u0915 \u0928\u092f\u093e \u0938\u0924\u094d\u0930 id \u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0915\u0940 \u092a\u0930\u0935\u093e\u0939 \u0915\u093f\u090f \u092c\u093f\u0928\u093e \u0915\u093f \u0915\u094d\u092f\u093e \u090f\u0915 \u0938\u0924\u094d\u0930 \u0915\u0947 \u092a\u0939\u0932\u0947 \u0938\u0947 \u0939\u0940 \u091c\u0917\u0939 \u092e\u0947\u0902 \u0939\u0948, \u092a\u0930 \u092c\u0928\u093e\u0928\u093e \u091a\u093e\u0939\u093f\u090f\u0964 3) \u0915\u0941\u091b identificable \u0915\u094d\u0932\u093e\u0907\u0902\u091f \u0935\u093f\u0936\u0947\u0937\u0924\u093e \u0938\u0902\u092f\u094b\u091c\u0928, \u091c\u0948\u0938\u0947 IP \u092a\u0924\u093e, SSL \u0915\u094d\u0932\u093e\u092f\u0902\u091f \u092a\u094d\u0930\u092e\u093e\u0923\u092a\u0924\u094d\u0930 \u0915\u0947 \u0932\u093f\u090f \u0938\u0924\u094d\u0930 \u0906\u0908\u0921\u0940 \u092c\u093e\u0901\u0927\u0964 4) \u0938\u0924\u094d\u0930, \u0938\u0930\u094d\u0935\u0930 \u092a\u0930, \u0915\u094d\u0932\u093e\u0907\u0902\u091f \u092a\u0930 \u0914\u0930 \u0938\u093e\u0925 \u0939\u0940 \u091c\u092c \u0928\u0937\u094d\u091f \u0915\u0930 \u0926\u093f\u092f\u093e, \u0928\u0937\u094d\u091f \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0915\u0930\u0928\u093e \u0939\u094b\u0917\u093e\u0964 5) \u0915\u094b \u0932\u093e\u0917\u0942 \u0915\u0930\u0928\u0947 \u090f\u0915 \u0932\u0949\u0917\u0906\u0909\u091f \u0924\u0902\u0924\u094d\u0930 \u0939\u0948 \u091c\u094b \u0938\u092d\u0940 \u092a\u093f\u091b\u0932\u0947 \u0938\u0924\u094d\u0930 \u0915\u0947 \u0932\u093f\u090f \u0917\u094d\u0930\u093e\u0939\u0915 \u0915\u094b \u0928\u0937\u094d\u091f \u0915\u0930 \u0926\u0947\u0917\u093e\u0964 6) \u092a\u0942\u0930\u094d\u0923 \u0938\u0924\u094d\u0930 timeouts \u0915\u094b \u0932\u093e\u0917\u0942\u0964 \u092c\u093e\u0926 \u0906\u092e\u0924\u094c\u0930 \u092a\u0930 \u0905\u0924\u093f\u0930\u093f\u0915\u094d\u0924 \u0915\u092e\u091c\u094b\u0930\u093f\u092f\u094b\u0902, \u090f\u0915 \u0939\u092e\u0932\u093e\u0935\u0930 \u0926\u094d\u0935\u093e\u0930\u093e \u0926\u094b\u0939\u0928 \u0915\u093f\u092f\u093e \u091c\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u090f\u0915 \u0915\u0941\u0915\u0940 \u092f\u093e \u092a\u094d\u0930\u092a\u0924\u094d\u0930 \u0915\u0947 \u0932\u093f\u090f \u0906\u0927\u093e\u0930 URL \u0938\u0947 7) \u0938\u094d\u0935\u093f\u091a \u0938\u0924\u094d\u0930 id \u0915\u093e\u0930\u094d\u092f\u093e\u0928\u094d\u0935\u092f\u0928, \u0906\u0927\u093e\u0930\u093f\n\

ascanbeta.sessionfixation.refs=https\://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A2-Broken_Authentication\n\
https\://owasp.org/www-community/attacks/Session_fixation\n\
http\://www.acros.si/papers/session_fixation.pdf\n\
http\://www.technicalinfo.net/papers/WebBasedSessionManagement.html
ascanbeta.sessionfixation.alert.cookie.extrainfo=\u0915\u0941\u0915\u0940 \u0915\u0940 \u092a\u094d\u0930\u0924\u093f\u0915\u094d\u0930\u093f\u092f\u093e \u092e\u0947\u0902 \u0938\u0947\u091f \u091c\u092c \u0915\u0941\u0915\u0940 \u092b\u093c\u0940\u0932\u094d\u0921 [{0}] \u0928\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u0947\u091f \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\: [{1}] \u0915\u0947 \u0938\u093e\u0925 \u092a\u094d\u0930\u0924\u093f\u0915\u094d\u0930\u093f\u092f\u093e \u092e\u0947\u0902 \u0938\u0947\u091f \u0915\u0941\u0915\u0940 \u0909\u0927\u093e\u0930 \u0932\u093f\u092f\u093e (\u092e\u093e\u0928\u094d\u092f) \u0915\u0941\u0915\u0940 \u092e\u093e\u0928 \u0905\u0928\u0941\u0930\u094b\u0927 [{1}] \u092e\u0947\u0902\: [{2}]
ascanbeta.sessionfixation.alert.cookie.extrainfo.loginpage=The url on which the issue was discovered was flagged as a logon page.\n\
\n\
This issue should be manually validated by checking that the session token set on the logon page is still valid once logged in, and that the token can be used to directly access a page/resource which should require the user to be logged in.
ascanbeta.sessionfixation.alert.url.extrainfo=\u091c\u092c URL \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930/\u091b\u0926\u094d\u092e URL \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 [{0}] \u0928\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u0947\u091f \u0939\u0948 \u090f\u0915 \u0938\u0902\u092d\u093e\u0935\u0928\u093e \u0938\u0924\u094d\u0930 \u092e\u093e\u0928 Url \u092e\u0947\u0902 HTML \u0906\u0909\u091f\u092a\u0941\u091f \u092e\u0947\u0902 \u092a\u094d\u0930\u0915\u091f \u0939\u0941\u0908 \u0939\u0948\: [{1}] \u091c\u092c \u092f\u0939 \u0909\u0927\u093e\u0930'' \u0938\u0924\u094d\u0930 [{1}]'' \u0907\u0938 URL \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u092c\u093e\u0926 \u0915\u0947 \u0905\u0928\u0941\u0930\u094b\u0927 \u092e\u0947\u0902 \u092a\u094d\u0930\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u090f\u0915 \u0928\u092f\u093e \u0938\u0924\u094d\u0930 \u0928\u0939\u0940\u0902 \u092c\u0928\u093e\u0908 \u0917\u0908 \u0939\u0948\u0964
ascanbeta.sessionfixation.alert.url.extrainfo.loginpage=Url \u092a\u0930 \u091c\u094b \u092e\u0941\u0926\u094d\u0926\u0947 \u0915\u0940 \u0916\u094b\u091c \u0915\u0940 \u0925\u0940 \u090f\u0915 \u0932\u0949\u0917\u0911\u0928 \u092a\u0943\u0937\u094d\u0920 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u091d\u0902\u0921\u0940 \u0926\u093f\u0916\u093e\u0915\u0930 \u0930\u0935\u093e\u0928\u093e \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0925\u093e\u0964
ascanbeta.sessionfixation.alert.attack={0} \u0915\u094d\u0937\u0947\u0924\u094d\u0930\: [{1}]
#Exposed Session Id messages
ascanbeta.sessionidexposedinurl.name=\u0909\u091c\u093e\u0917\u0930 \u0938\u0924\u094d\u0930 ID
ascanbeta.sessionidexposedinurl.desc=\u090f\u0915 \u0938\u0924\u094d\u0930 id URL \u092e\u0947\u0902 \u0905\u0935\u0917\u0924 \u0915\u0930\u093e\u092f\u093e \u0939\u0948\u0964 \u0910\u0938\u0940 \u090f\u0915 \u0935\u0947\u092c\u0938\u093e\u0907\u091f \u092f\u0942\u0906\u0930\u090f\u0932 (\u0938\u0924\u094d\u0930 id \u0938\u0947 \u092f\u0941\u0915\u094d\u0924) \u0938\u093e\u091d\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0926\u094d\u0935\u093e\u0930\u093e, \u090f\u0915 naiive \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0905\u0928\u091c\u093e\u0928\u0947 \u0909\u0928\u0915\u0947 \u0921\u0947\u091f\u093e \u0924\u0915 \u092a\u0939\u0941\u0901\u091a \u0905\u092a\u0928\u0940 \u0917\u094b\u092a\u0928\u0940\u092f\u0924\u093e, \u0905\u0916\u0902\u0921\u0924\u093e \u0914\u0930 \u0909\u092a\u0932\u092c\u094d\u0927\u0924\u093e \u0938\u0947 \u0938\u092e\u091d\u094c\u0924\u093e \u0915\u093f\u090f \u0926\u0947\u0928\u0947 \u0939\u094b \u0938\u0915\u0924\u093e\u0964  \u092f\u0942\u0906\u0930\u090f\u0932 \u0938\u0924\u094d\u0930 \u092a\u0939\u091a\u093e\u0928\u0915\u0930\u094d\u0924\u093e \u092d\u0940 \u092f\u0941\u0915\u094d\u0924 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u092c\u0941\u0915\u092e\u093e\u0930\u094d\u0915\u094d\u0938, \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0932\u0949\u0917 \u092b\u093c\u093e\u0907\u0932\u0947\u0902 \u0914\u0930 \u092a\u094d\u0930\u0949\u0915\u094d\u0938\u0940 \u0938\u0930\u094d\u0935\u0930 \u0932\u0949\u0917 \u092b\u093c\u093e\u0907\u0932\u094b\u0902 \u092e\u0947\u0902 \u092a\u094d\u0930\u0915\u091f \u0939\u094b\u0924\u0947 \u0939\u0948\u0902\u0964 
ascanbeta.sessionidexposedinurl.soln=\u090f\u0915 \u0905\u0927\u093f\u0915 \u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0938\u0924\u094d\u0930 \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u0915\u093e\u0930\u094d\u092f\u093e\u0928\u094d\u0935\u092f\u0928, \u091c\u0948\u0938\u0947 \u0915\u093f \u0938\u0924\u094d\u0930 \u0915\u0941\u0915\u0940\u091c\u093c \u091c\u094b \u0930\u0942\u092a \u092e\u0947\u0902 \u0906\u0938\u093e\u0928\u0940 \u0938\u0947 \u0905\u0928\u091c\u093e\u0928\u0947 \u0938\u093e\u091d\u093e \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902 \u0928\u0939\u0940\u0902 \u0939\u0948, \u0914\u0930 \u091c\u094b \u0938\u0930\u094d\u0935\u0930 \u0932\u0949\u0917 \u092b\u093e\u0907\u0932 \u092f\u093e \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u092c\u0941\u0915\u092e\u093e\u0930\u094d\u0915\u094d\u0938 \u092e\u0947\u0902 \u0938\u093e\u092e\u093e\u0928\u094d\u092f\u0924\u092f\u093e \u092a\u094d\u0930\u0915\u091f \u0928\u0939\u0940\u0902 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u093e \u0939\u0948 \u090f\u0915 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902\u0964
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidexposedinurl.refs=https\://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A2-Broken_Authentication
ascanbeta.sessionidexposedinurl.alert.extrainfo={0} [{1}] \u092b\u093c\u0940\u0932\u094d\u0921 \u090f\u0915 \u0909\u091c\u093e\u0917\u0930 \u0938\u0924\u094d\u0930 \u092a\u0939\u091a\u093e\u0928\u0915\u0930\u094d\u0924\u093e [{2}] \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0902
ascanbeta.sessionidexposedinurl.alert.extrainfo.loginpage=Url \u092a\u0930 \u091c\u094b \u092e\u0941\u0926\u094d\u0926\u0947 \u0915\u0940 \u0916\u094b\u091c \u0915\u0940 \u0925\u0940 \u090f\u0915 \u0932\u0949\u0917\u0911\u0928 \u092a\u0943\u0937\u094d\u0920 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u091d\u0902\u0921\u0940 \u0926\u093f\u0916\u093e\u0915\u0930 \u0930\u0935\u093e\u0928\u093e \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0925\u093e\u0964
ascanbeta.sessionidexposedinurl.alert.attack={0} \u0915\u094d\u0937\u0947\u0924\u094d\u0930\: [{1}]
#Session Id Cookie not sent securely
ascanbeta.sessionidsentinsecurely.name=Session ID Transmitted Insecurely
ascanbeta.sessionidsentinsecurely.desc=A session id may be sent via an insecure mechanism. In the case of a cookie sent in the request, this occurs when HTTP, rather than HTTPS, is used.  In the case of a cookie sent by the server in response (when the URL is modified by setting the named parameter field to NULL), the 'secure' flag is not set, allowing the cookie to be sent later via HTTP rather than via HTTPS. This may allow a passive eavesdropper on the network path to gain full access to the victim's session.  
ascanbeta.sessionidsentinsecurely.soln=1) Use the latest available version of SSL/TLS (for HTTPS) for all pages where a session id is communicated between the browser and the web server.\n\
2) Do not allow the communication to be forced down to the unencrypted HTTP protocol.\n\
3) Use the 'secure' flag when setting a cookie containing a session id, to prevent its subsequent transmission by an insecure mechanism.\n\
4) Forward non-secure HTTP page requests to the secure HTTPS equivalent page.  
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidsentinsecurely.refs=https\://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A2-Broken_Authentication
ascanbeta.sessionidsentinsecurely.alert.extrainfo=session identifier {0} field [{1}], value [{2}] may be sent via an insecure mechanism.  
ascanbeta.sessionidsentinsecurely.alert.extrainfo.secureflagnotset=The 'secure' flag was not set on the session cookie supplied by the server.
ascanbeta.sessionidsentinsecurely.alert.extrainfo.loginpage=Url \u092a\u0930 \u091c\u094b \u092e\u0941\u0926\u094d\u0926\u0947 \u0915\u0940 \u0916\u094b\u091c \u0915\u0940 \u0925\u0940 \u090f\u0915 \u0932\u0949\u0917\u0911\u0928 \u092a\u0943\u0937\u094d\u0920 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u091d\u0902\u0921\u0940 \u0926\u093f\u0916\u093e\u0915\u0930 \u0930\u0935\u093e\u0928\u093e \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0925\u093e\u0964
ascanbeta.sessionidsentinsecurely.alert.attack={0} \u0915\u094d\u0937\u0947\u0924\u094d\u0930\: [{1}]
#Session Id Cookie accessible by JavaScript
ascanbeta.sessionidaccessiblebyjavascript.name=Session ID Cookie Accessible to JavaScript
ascanbeta.sessionidaccessiblebyjavascript.desc=A Session Id cookie sent by the server (when the URL is modified by setting the named parameter field to NULL) may be accessed by JavaScript on the client. In conjunction with another vulnerability, this may allow the session to be hijacked.  
ascanbeta.sessionidaccessiblebyjavascript.soln=1) Use the 'httponly' flag when setting a cookie containing a session id, to prevent it from being accessed by JavaScript in the web browser.  
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidaccessiblebyjavascript.refs=
ascanbeta.sessionidaccessiblebyjavascript.alert.extrainfo=session identifier {0} field [{1}], value [{2}] may be accessed using JavaScript in the web browser
ascanbeta.sessionidaccessiblebyjavascript.alert.extrainfo.loginpage=Url \u092a\u0930 \u091c\u094b \u092e\u0941\u0926\u094d\u0926\u0947 \u0915\u0940 \u0916\u094b\u091c \u0915\u0940 \u0925\u0940 \u090f\u0915 \u0932\u0949\u0917\u0911\u0928 \u092a\u0943\u0937\u094d\u0920 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u091d\u0902\u0921\u0940 \u0926\u093f\u0916\u093e\u0915\u0930 \u0930\u0935\u093e\u0928\u093e \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0925\u093e\u0964
ascanbeta.sessionidaccessiblebyjavascript.alert.attack={0} \u0915\u094d\u0937\u0947\u0924\u094d\u0930\: [{1}]
#Session Id Cookie Expiry
ascanbeta.sessionidexpiry.name=\u0905\u0924\u094d\u092f\u0927\u093f\u0915 \u0938\u0924\u094d\u0930 ID \u0938\u092e\u093e\u092a\u094d\u0924\u093f \u0938\u092e\u092f/Max-\u0906\u092f\u0941 \u0939\u0948
ascanbeta.sessionidexpiry.desc=\u090f\u0915 \u0938\u0924\u094d\u0930 Id \u0915\u0941\u0915\u0940 \u091c\u092c (URL \u0928\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0928\u093e\u092e\u093e\u0902\u0915\u093f\u0924 \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u092b\u093c\u0940\u0932\u094d\u0921 \u0938\u0947\u091f\u093f\u0902\u0917 \u0915\u0947 \u0926\u094d\u0935\u093e\u0930\u093e \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948) \u0938\u0930\u094d\u0935\u0930 \u0926\u094d\u0935\u093e\u0930\u093e \u092d\u0947\u091c\u093e \u0917\u092f\u093e \u090f\u0915 \u0905\u0924\u094d\u092f\u0927\u093f\u0915 \u0938\u092e\u092f \u0905\u0935\u0927\u093f \u0915\u0947 \u0932\u093f\u090f \u092e\u093e\u0928\u094d\u092f \u0939\u094b\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u0947\u091f \u0939\u0948\u0964 \u092f\u0939 \u090f\u0915 \u0939\u092e\u0932\u093e\u0935\u0930 \u0926\u094d\u0935\u093e\u0930\u093e \u0926\u094b\u0939\u0928 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948 \u0905\u0917\u0930 \u092c\u093e\u0939\u0930, \u0932\u0949\u0917 \u0911\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u092d\u0942\u0932\u0924\u093e \u092f\u0926\u093f \u0932\u0949\u0917\u0906\u0909\u091f \u0915\u093e\u0930\u094d\u092f\u0915\u094d\u0937\u092e\u0924\u093e \u0938\u0924\u094d\u0930 \u0938\u0939\u0940 \u0922\u0902\u0917 \u0938\u0947 \u0928\u0937\u094d\u091f \u0928\u0939\u0940\u0902 \u0915\u0930\u0924\u093e \u0939\u0948, \u092f\u093e \u092f\u0926\u093f \u0938\u0924\u094d\u0930 id \u0926\u094d\u0935\u093e\u0930\u093e \u0915\u0941\u091b \u0905\u0928\u094d\u092f \u0905\u0930\u094d\u0925 \u0939\u0948 \u0938\u092e\u091d\u094c\u0924\u093e \u0915\u093f\u092f\u093e \u0939\u0948\u0964     
ascanbeta.sessionidexpiry.soln=1) '\u0928\u093f\u0936\u094d\u0935\u093e\u0938\u0928' \u092f\u093e '\u0905\u0927\u093f\u0915\u0924\u092e \u0906\u092f\u0941' \u0915\u0941\u0915\u0940 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u091c\u092c \u092f\u0941\u0915\u094d\u0924 \u090f\u0915 \u0938\u0924\u094d\u0930 id \u0915\u0941\u0915\u0940 \u0938\u0947\u091f\u093f\u0902\u0917 \u092f\u0939 \u0938\u092e\u092f \u0915\u0940 \u0932\u0902\u092c\u0940 \u0905\u0935\u0927\u093f \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u0932\u092c\u094d\u0927 \u0939\u094b\u0928\u0947 \u0938\u0947 \u0930\u094b\u0915\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902\u0964 2) \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0947\u0902 \u0915\u093f \u0932\u0949\u0917 \u0906\u0909\u091f \u0915\u093e\u0930\u094d\u092f\u0915\u094d\u0937\u092e\u0924\u093e \u092e\u094c\u091c\u0942\u0926 \u0939\u0948, \u0914\u0930 \u0915\u093f \u092f\u0939 \u0938\u0939\u0940 \u0922\u0902\u0917 \u0938\u0947 \u0938\u0924\u094d\u0930 \u0915\u094b \u0928\u0937\u094d\u091f \u0915\u0930 \u0926\u0947\u0924\u093e \u0939\u0948\u0964 3) \u0905\u0917\u0930 \u090f\u0915 \u0938\u0924\u094d\u0930 id \u0938\u092e\u091d\u094c\u0924\u093e \u0915\u093f\u092f\u093e \u0939\u0948, \u0907\u0938\u0947 \u0928\u0939\u0940\u0902 \u0915\u093e \u0936\u094b\u0937\u0923 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0915\u093f \u092f\u0939 \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0928\u094d\u092f preventative \u0909\u092a\u093e\u092f\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902\u0964
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidexpiry.refs=
ascanbeta.sessionidexpiry.alert.extrainfo=\u091c\u092c \u0924\u0915 \u0915\u093f \u0938\u0924\u094d\u0930 \u0915\u094b \u0928\u0937\u094d\u091f \u0915\u0930 \u0926\u093f\u092f\u093e \u0939\u0948 \u0938\u0924\u094d\u0930 \u092a\u0939\u091a\u093e\u0928\u0915\u0930\u094d\u0924\u093e {0} \u092b\u093c\u0940\u0932\u094d\u0921 [{1}], [{2}] \u092e\u0942\u0932\u094d\u092f [(\u0915\u0941\u0915\u0940 {4} \u092a\u0930 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0925\u093e \u0915\u0947 \u092c\u093e\u0926 \u0938\u0947){3} \u0924\u0915], \u092a\u0939\u0941\u0901\u091a\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964
ascanbeta.sessionidexpiry.alert.extrainfo.loginpage=Url \u092a\u0930 \u091c\u094b \u092e\u0941\u0926\u094d\u0926\u0947 \u0915\u0940 \u0916\u094b\u091c \u0915\u0940 \u0925\u0940 \u090f\u0915 \u0932\u0949\u0917\u0911\u0928 \u092a\u0943\u0937\u094d\u0920 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u091d\u0902\u0921\u0940 \u0926\u093f\u0916\u093e\u0915\u0930 \u0930\u0935\u093e\u0928\u093e \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0925\u093e\u0964
ascanbeta.sessionidexpiry.alert.attack={0} \u0915\u094d\u0937\u0947\u0924\u094d\u0930\: [{1}]
ascanbeta.sessionidexpiry.browserclose=\u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u092c\u0902\u0926 \u0915\u0930\u0947\u0902
ascanbeta.sessionidexpiry.timemorethanoneweek=\u0905\u0927\u093f\u0915 \u0938\u0947 \u0905\u0927\u093f\u0915 \u090f\u0915 \u0938\u092a\u094d\u0924\u093e\u0939
ascanbeta.sessionidexpiry.timemorethanoneday=\u0905\u0927\u093f\u0915 \u0938\u0947 \u0905\u0927\u093f\u0915 \u090f\u0915 \u0926\u093f\u0928
ascanbeta.sessionidexpiry.timemorethanonehour=\u090f\u0915 \u0918\u0902\u091f\u0947 \u0938\u0947 \u0905\u0927\u093f\u0915
ascanbeta.sessionidexpiry.timelessthanonehour=\u0915\u092e \u0938\u0947 \u0915\u092e \u090f\u0915 \u0918\u0902\u091f\u093e
ascanbeta.sessionidexpiry.timeexpired=\u0915\u0940 \u0938\u092e\u092f \u0938\u0940\u092e\u093e \u0938\u092e\u093e\u092a\u094d\u0924

ascanbeta.shellshock.name = \u0930\u093f\u092e\u094b\u091f \u0915\u094b\u0921 \u0915\u093e \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 - \u0936\u0947\u0932 \u0936\u0949\u0915
ascanbeta.shellshock.desc = \u0938\u0930\u094d\u0935\u0930 \u0926\u0942\u0930\u0938\u094d\u0925 \u0939\u092e\u0932\u093e\u0935\u0930\u094b\u0902 \u092a\u0930 \u0938\u094d\u0935\u0948\u091a\u094d\u091b\u093f\u0915 \u0915\u094b\u0921 \u0915\u094b \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948 \u092a\u093e\u0930\u094d\u091f\u0940 \u0915\u0940 \u092f\u094b\u091c\u0928\u093e \u092c\u0928\u093e\u0908 \u0916\u094b\u0932 \u0915\u0947 \u0915\u093f\u0938\u0940 \u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u091a\u0932 \u0930\u0939\u093e \u0939\u0948 
ascanbeta.shellshock.extrainfo = CVE-2014-6271 \u0938\u0947\: \u0917\u094d\u0928\u0942 Bash 4.3 \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0924\u093e\u0930 \u0915\u0947 \u092a\u0940\u091b\u0947 \u091a\u0932 \u0938\u092e\u093e\u0930\u094b\u0939 \u092a\u0930\u093f\u092d\u093e\u0937\u093e\u090f\u0901 \u092a\u0930\u093f\u0935\u0947\u0936 \u091a\u0930, \u0915\u0947 \u092c\u093e\u0926 \u092e\u0942\u0932\u094d\u092f\u094b\u0902 \u092e\u0947\u0902 \u091c\u094b \u0935\u0948\u0915\u094d\u091f\u0930 OpenSSH sshd, mod_cgi \u0914\u0930 mod_cgid \u092e\u0947\u0902 \u092e\u0949\u0921\u094d\u092f\u0942\u0932 \u0915\u094b Apache HTTP \u0938\u0930\u094d\u0935\u0930, \u0905\u0928\u093f\u0930\u094d\u0926\u093f\u0937\u094d\u091f DHCP \u0915\u094d\u0932\u093e\u0907\u0902\u091f, \u0914\u0930 \u0905\u0928\u094d\u092f \u0938\u094d\u0925\u093f\u0924\u093f\u092f\u094b\u0902 \u092e\u0947\u0902 \u091c\u094b \u0938\u0947\u091f\u093f\u0902\u0917 \u092a\u0930\u094d\u092f\u093e\u0935\u0930\u0923 Bash \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 \u0938\u0947 \u090f\u0915 \u0935\u093f\u0936\u0947\u0937\u093e\u0927\u093f\u0915\u093e\u0930 \u0938\u0940\u092e\u093e \u092a\u093e\u0930 \u0939\u094b\u0924\u0940 \u0939\u0948 \u0926\u094d\u0935\u093e\u0930\u093e \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0932\u093f\u092a\u093f\u092f\u094b\u0902 \u092e\u0947\u0902 ForceCommand \u0938\u0941\u0935\u093f\u0927\u093e \u0915\u094b \u0936\u093e\u092e\u093f\u0932 \u0915\u0930\u0915\u0947 \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u0928 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0926\u0942\u0930\u0938\u094d\u0925 \u0939\u092e\u0932\u093e\u0935\u0930\u094b\u0902 \u090f\u0915 \u0917\u0922\u093c\u0940 \u0917\u0908 \u092a\u0930\u094d\u092f\u093e\u0935\u0930\u0923 \u0915\u0947 \u091c\u0930\u093f\u090f \u092e\u0928\u092e\u093e\u0928\u093e \u0915\u094b\u0921 \u0915\u094b \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948 \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948, \u0909\u0930\u094d\u092b "ShellShock." \u0928\u094b\u091f\: \u0907\u0938 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u0947 \u092e\u0942\u0932 \u0928\u093f\u0926\u093e\u0928 \u0917\u0932\u0924 \u0925\u093e; CVE-2014-7169 \u0917\u093c\u0932\u0924 \u0924\u092f \u0915\u0930\u0928\u0947 \u0915\u0947 \u092c\u093e\u0926 \u0905\u092d\u0940 \u092d\u0940 \u092e\u094c\u091c\u0942\u0926 \u0939\u0948 \u0907\u0938 \u092d\u0947\u0926\u094d\u092f\u0924\u093e \u0915\u094b \u0915\u0935\u0930 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0938\u093e\u0907\u0928 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\u0964
ascanbeta.shellshock.soln = \u092a\u093e\u0930\u094d\u091f\u0940 \u0915\u0940 \u092f\u094b\u091c\u0928\u093e \u092c\u0928\u093e\u0908 \u0915\u093e \u0928\u0935\u0940\u0928\u0924\u092e \u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u0915\u094b \u0938\u0930\u094d\u0935\u0930 \u092a\u0930 \u0905\u0926\u094d\u092f\u0924\u0928
ascanbeta.shellshock.ref = ' http\://www.troyhunt.com/2014/09/everything-you-need-to-know-about.html http\://web.nvd.nist.gov/view/vuln/detail?vulnId\=CVE-2014-6271
ascanbeta.shellshock.timingbased.evidence = \u0939\u092e\u0932\u0947 \u0915\u093e \u0909\u092a\u092f\u094b\u0917, [{0}] \u092e\u093f\u0932\u0940\u0938\u0947\u0915\u0947\u0902\u0921\u094b\u0902 \u0915\u0940 \u090f\u0915 \u0935\u093f\u0932\u0902\u092c \u092a\u094d\u0930\u0947\u0930\u093f\u0924 \u092a\u093e\u092f\u093e \u0917\u092f\u093e \u0914\u0930 \u0925\u093e

ascanbeta.sourcecodedisclosure.desc = \u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u092a\u0943\u0937\u094d\u0920 \u0915\u0947 \u0932\u093f\u090f \u0938\u094d\u0930\u094b\u0924 \u0915\u094b\u0921 \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0915\u0947 \u0926\u094d\u0935\u093e\u0930\u093e \u092c\u0924\u093e\u092f\u093e \u0917\u092f\u093e \u0925\u093e
ascanbeta.sourcecodedisclosure.lfibased.name = Source Code Disclosure - File Inclusion
ascanbeta.sourcecodedisclosure.lfibased.soln = Ensure that arbitrary files specified by the user are not included in the output
ascanbeta.sourcecodedisclosure.lfibased.extrainfo = The output for the source code filename [{0}] differs sufficiently from that of the random parameter [{1}], at [{2}%], compared to a threshold of [{3}%]
ascanbeta.sourcecodedisclosure.lfibased.evidence=

ascanbeta.sourcecodedisclosure.gitbased.name = Source Code Disclosure - Git 
ascanbeta.sourcecodedisclosure.gitbased.soln = Ensure that Git metadata files are not deployed to the web server or application server
ascanbeta.sourcecodedisclosure.gitbased.extrainfo=
ascanbeta.sourcecodedisclosure.gitbased.evidence = The source code for [{0}] was extracted using [{1}]

ascanbeta.sqlinjection.mysql.name=SQL \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928 - MySQL
ascanbeta.sqlinjection.hypersonic.name=SQL \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928 - \u0939\u093e\u0907\u092a\u0930\u0938\u0949\u0928\u093f\u0915 SQL
ascanbeta.sqlinjection.oracle.name=SQL \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928 - Oracle
ascanbeta.sqlinjection.postgres.name=SQL \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928 - PostgreSQL
ascanbeta.sqlinjection.desc=SQL \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928 \u0938\u0902\u092d\u0935 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964
ascanbeta.sqlinjection.soln=Do not trust client side input, even if there is client side validation in place. \n\
In general, type check all data on the server side.\n\
If the application uses JDBC, use PreparedStatement or CallableStatement, with parameters passed by '?'\n\
If the application uses ASP, use ADO Command Objects with strong type checking and parameterized queries.\n\
If database Stored Procedures can be used, use them.\n\
Do *not* concatenate strings into queries in the stored procedure, or use 'exec', 'exec immediate', or equivalent functionality\!\n\
Do not create dynamic SQL queries using simple string concatenation.\n\
Escape all data received from the client.\n\
Apply an 'allow list' of allowed characters, or a 'deny list' of disallowed characters in user input.\n\
Apply the privilege of least privilege by using the least privileged database user possible.\n\
In particular, avoid using the 'sa' or 'db-owner' database users. This does not eliminate SQL injection, but minimizes its impact.\n\
Grant the minimum database access that is necessary for the application.
ascanbeta.sqlinjection.refs=https\://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html
#ascanbeta.sqlinjection.alert.errorbased.attack={1}
ascanbeta.sqlinjection.alert.errorbased.differentiation.attack=\u092e\u0942\u0932 \u092e\u0942\u0932\u094d\u092f\: [{0}]\u0964 \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u092e\u093e\u0928\: [{1}]\u0964 \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u0923 \u092e\u093e\u0928\: [{2}]
ascanbeta.sqlinjection.alert.booleanbased.attack=\u0915\u094d\u0937\u0947\u0924\u094d\u0930\: [{0}], \u092e\u0942\u0932\u094d\u092f [{1}]
ascanbeta.sqlinjection.alert.unionbased.attack=[{0}] \u0915\u094d\u0937\u0947\u0924\u094d\u0930\: [{1}], \u092e\u0942\u0932\u094d\u092f [{2}]
ascanbeta.sqlinjection.alert.errorbased.extrainfo=RDBMS [{0}] \u0915\u0940 \u0938\u0902\u092d\u093e\u0935\u0928\u093e, \u0924\u094d\u0930\u0941\u091f\u093f \u0938\u0902\u0926\u0947\u0936 \u092e\u0947\u0902 HTML \u092a\u0930\u093f\u0923\u093e\u092e \u091f\u0941\u0915\u0921\u093c\u093e [{1}] \u0915\u094b \u0926\u0947\u0916\u0924\u0947 \u0939\u0941\u090f
ascanbeta.sqlinjection.alert.unionbased.extrainfo=RDBMS [{0}] \u0915\u0940 \u0938\u0902\u092d\u093e\u0935\u0928\u093e, \u0938\u0902\u0918-\u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0938\u0902\u0926\u0947\u0936 HTML \u092a\u0930\u093f\u0923\u093e\u092e \u092e\u0947\u0902 \u091f\u0941\u0915\u0921\u093c\u093e [{1}] \u0915\u094b \u0926\u0947\u0916\u0924\u0947 \u0939\u0941\u090f
ascanbeta.sqlinjection.alert.errorbased.httpstatuscode.extrainfo=HTTP \u0938\u094d\u0925\u093f\u0924\u093f [{0}] unmodified \u0938\u0902\u0926\u0947\u0936 \u0926\u093f\u092f\u093e \u0925\u093e, HTTP \u0938\u094d\u0925\u093f\u0924\u093f [{1}] \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0938\u0902\u0926\u0947\u0936 \u0926\u093f\u092f\u093e \u0925\u093e
ascanbeta.sqlinjection.alert.errorbased.differentiation.extrainfo=HTTP \u0938\u094d\u0925\u093f\u0924\u093f [{0}] unmodified \u0938\u0902\u0926\u0947\u0936 \u0926\u093f\u092f\u093e \u0925\u093e, HTTP \u0938\u094d\u0925\u093f\u0924\u093f [{2}], \u0936\u0930\u0940\u0930 \u0915\u0940 \u0932\u0902\u092c\u093e\u0908 [{3}] \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0936\u0930\u0940\u0930 \u0932\u0902\u092c\u093e\u0908 [{1}], \u0915\u093e \u0938\u0902\u0926\u0947\u0936 \u0926\u093f\u092f\u093e \u0925\u093e\u0964 \u090f\u0915 \u0924\u093f\u0939\u093e\u0908 (\u0917\u0948\u0930-SQL \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928 \u092e\u093e\u0928 \u0909\u0924\u094d\u092a\u094d\u0930\u0947\u0930\u0923) HTTP \u0938\u094d\u0925\u093f\u0924\u093f [{4}], \u0936\u0930\u0940\u0930 \u0915\u0940 \u0932\u0902\u092c\u093e\u0908 [{5}] \u0926\u093f\u092f\u093e \u0925\u093e
ascanbeta.sqlinjection.alert.booleanbased.extrainfo=\u092a\u0943\u0937\u094d\u0920 \u0915\u0947 \u092a\u0930\u093f\u0923\u093e\u092e \u092e\u0947\u0902 \u0938\u092b\u0932\u0924\u093e\u092a\u0942\u0930\u094d\u0935\u0915 \u092c\u0942\u0932\u093f\u092f\u0928 \u0936\u0930\u094d\u0924\u094b\u0902 [{0}] \u0914\u0930 [{1}] \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0939\u0947\u0930\u092b\u0947\u0930 \u0915\u093f\u092f\u093e \u0917\u092f\u093e
ascanbeta.sqlinjection.alert.timebased.extrainfo=\u0915\u094d\u0935\u0947\u0930\u0940 \u0938\u092e\u092f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u092e\u093e\u0928 [{0}], \u091c\u093f\u0938\u0915\u0947 \u0915\u093e\u0930\u0923 \u091c\u092c \u092e\u0942\u0932\u094d\u092f [{2}] \u0915\u0947 \u0938\u093e\u0925 \u092e\u0942\u0932 unmodified \u0915\u094d\u0935\u0947\u0930\u0940 [{3}] \u092e\u093f\u0932\u0940\u0938\u0947\u0915\u0902\u0921 \u0932\u093f\u092f\u093e [{1}] \u092e\u093f\u0938\u0947, \u0932\u0947 \u0932\u094b \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u091a\u0932\u093e\u092f\u093e \u0939\u0941\u0906 \u0939\u0948 

ascanbeta.sqlinjection.mssql.name=SQL Injection - MsSQL
ascanbeta.sqlinjection.mssql.desc=SQL \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928 \u0938\u0902\u092d\u0935 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964
ascanbeta.sqlinjection.mssql.soln=Do not trust client side input, even if there is client side validation in place. \n\
In general, type check all data on the server side.\n\
If the application uses JDBC, use PreparedStatement or CallableStatement, with parameters passed by '?'\n\
If the application uses ASP, use ADO Command Objects with strong type checking and parameterized queries.\n\
If database Stored Procedures can be used, use them.\n\
Do *not* concatenate strings into queries in the stored procedure, or use 'exec', 'exec immediate', or equivalent functionality\!\n\
Do not create dynamic SQL queries using simple string concatenation.\n\
Escape all data received from the client.\n\
Apply an 'allow list' of allowed characters, or a 'deny list' of disallowed characters in user input.\n\
Apply the privilege of least privilege by using the least privileged database user possible.\n\
In particular, avoid using the 'sa' or 'db-owner' database users. This does not eliminate SQL injection, but minimizes its impact.\n\
Grant the minimum database access that is necessary for the application.
ascanbeta.sqlinjection.mssql.refs=https\://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html
ascanbeta.sqlinjection.mssql.alert.timebased.extrainfo=The query time is controllable using parameter value [{0}], which caused the request to take [{1}] milliseconds, when the original unmodified query with value [{2}] took [{3}] milliseconds.

ascanbeta.sqlinjection.sqlite.name=SQL Injection - SQLite
ascanbeta.sqlinjection.sqlite.alert.timebased.extrainfo=The query time is controllable using parameter value [{0}], which caused the request to take [{1}] milliseconds, parameter value [{2}], which caused the request to take [{3}] milliseconds, when the original unmodified query with value [{4}] took [{5}] milliseconds.
ascanbeta.sqlinjection.sqlite.alert.errorbased.extrainfo=The following known SQLite error message was provoked\: [{0}].
ascanbeta.sqlinjection.sqlite.alert.versionnumber.extrainfo=Using a UNION based SQL Injection attack, and by exploiting SQLite''s dynamic typing mechanism, the SQLite version was determined to be [{0}].\n\
With string-based injection points, full SQLite version information can be extracted, but with numeric injection points, only partial SQLite version information can be extracted.\n\
More information on SQLite version [{0}] is available at http\://www.sqlite.org/changes.html

ascanbeta.useragent.name=User Agent Fuzzer
ascanbeta.useragent.desc=Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.
ascanbeta.useragent.refs=https\://owasp.org/wstg
ascanbeta.useragent.useragentparmname=Header User-Agent

ascanbeta.traceaxd.name = Trace.axd Information Leak
ascanbeta.traceaxd.desc = The ASP.NET Trace Viewer (trace.axd) was found to be available. This component can leak a significant amount of valuable information.
ascanbeta.traceaxd.otherinfo = Based on response status code Trace Viewer may be protected by an authentication or authorization mechanism.  
ascanbeta.traceaxd.refs = https\://msdn.microsoft.com/en-us/library/bb386420.aspx\n\
https\://msdn.microsoft.com/en-us/library/wwh16c6c.aspx\n\
https\://www.dotnetperls.com/trace
ascanbeta.traceaxd.soln = Consider whether or not Trace Viewer is actually required in production, if it isn't then disable it. If it is then ensure access to it requires authentication and authorization.


ascanbeta.sourcecodedisclosurecve-2012-1823.name = \u0938\u094d\u0930\u094b\u0924 \u0915\u094b\u0921 \u092a\u094d\u0930\u0915\u091f\u0940\u0915\u0930\u0923 - CVE-2012-1823
ascanbeta.sourcecodedisclosurecve-2012-1823.desc = \u0915\u094d\u0935\u0947\u0930\u0940 \u0924\u093e\u0930 \u0915\u093f PHP \u0938\u094d\u0930\u094b\u0924 \u0915\u094b\u0921 \u092a\u094d\u0930\u0915\u091f\u0940\u0915\u0930\u0923, \u0914\u0930 \u092e\u0928\u092e\u093e\u0928\u093e \u0915\u094b\u0921 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 \u0915\u094b \u0938\u0915\u094d\u0937\u092e \u0915\u0930\u0928\u0947 \u0915\u0947 \u090f\u0915 unescaped "\=" \u0935\u0930\u094d\u0923, \u0915\u092e\u0940 \u0915\u0941\u091b PHP \u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u0939\u0948, \u091c\u092c CGI, \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u091a\u0932\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0938\u0939\u0940 \u0924\u0930\u0940\u0915\u0947 \u0938\u0947 \u0939\u0948\u0902\u0921\u0932 \u0928\u0939\u0940\u0902\u0964 \u0907\u0938 \u092e\u093e\u092e\u0932\u0947 \u092e\u0947\u0902, PHP \u092b\u093c\u093e\u0907\u0932 \u0915\u0940 \u0938\u093e\u092e\u0917\u094d\u0930\u0940 \u0938\u0940\u0927\u0947 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0915\u0947 \u0932\u093f\u090f \u0938\u0947\u0935\u093e \u0915\u0940 \u0925\u0947\u0964 \u0939\u093e\u0932\u093e\u0902\u0915\u093f \u092f\u0939 \u092d\u0940 \u0939\u094b \u0938\u0915\u0924\u0940 \u0939\u0948 \u0938\u0940\u0927\u0940 HTML \u0907\u0938 \u0906\u0909\u091f\u092a\u0941\u091f \u092e\u0947\u0902 \u0906\u092e\u0924\u094c\u0930 \u092a\u0930 PHP, \u0936\u093e\u092e\u093f\u0932 \u0939\u094b\u0902\u0917\u0947\u0964
ascanbeta.sourcecodedisclosurecve-2012-1823.soln = PHP \u0915\u093e \u0928\u0935\u0940\u0928\u0924\u092e \u0938\u094d\u0925\u093f\u0930 \u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u0915\u0947 \u0932\u093f\u090f \u0928\u0935\u0940\u0928\u0940\u0915\u0930\u0923, \u092f\u093e \u0926\u0941\u0930\u094d\u092d\u093e\u0935\u0928\u093e\u092a\u0942\u0930\u094d\u0923 \u0905\u0928\u0941\u0930\u094b\u0927\u094b\u0902 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u0947 "RewriteCond" \u0914\u0930 "RewriteRule" \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u092c\u093e\u0939\u0930 \u092b\u093c\u093f\u0932\u094d\u091f\u0930 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f Apache \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0914\u0930 mod_rewrite \u092e\u0949\u0921\u094d\u092f\u0942\u0932 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902\u0964

ascanbeta.sourcecodedisclosure.svnbased.name = \u0938\u094d\u0930\u094b\u0924 \u0915\u094b\u0921 \u092a\u094d\u0930\u0915\u091f\u0940\u0915\u0930\u0923 - SVN
ascanbeta.sourcecodedisclosure.svnbased.soln = \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0947\u0902 \u0915\u093f Git \u092e\u0947\u091f\u093e\u0921\u0947\u091f\u093e \u092b\u093c\u093e\u0907\u0932\u0947\u0902 \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u092f\u093e \u0938\u0930\u094d\u0935\u0930 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0915\u0947 \u0932\u093f\u090f \u0924\u0948\u0928\u093e\u0924 \u0928\u0939\u0940\u0902 \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902
ascanbeta.sourcecodedisclosure.svnbased.extrainfo = [{0}] \u0915\u0947 \u0932\u093f\u090f \u0938\u094d\u0930\u094b\u0924 \u0915\u094b\u0921 [{1}] \u092a\u0930 \u092a\u093e\u092f\u093e \u0917\u092f\u093e \u0925\u093e

ascanbeta.usernameenumeration.name=Possible Username Enumeration
ascanbeta.usernameenumeration.desc=It may be possible to enumerate usernames, based on differing HTTP responses when valid and invalid usernames are provided. This would greatly increase the probability of success of password brute-forcing attacks against the system. Note that false positives may sometimes be minimised by increasing the 'Attack Strength' Option in ZAP.  Please manually check the 'Other Info' field to confirm if this is actually an issue. 
ascanbeta.usernameenumeration.soln=Do not divulge details of whether a username is valid or invalid. In particular, for unsuccessful login attempts, do not differentiate between an invalid user and an invalid password in the error message, page title, page contents, HTTP headers, or redirection logic.
ascanbeta.usernameenumeration.refs=https\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/03-Identity_Management_Testing/04-Testing_for_Account_Enumeration_and_Guessable_User_Account.html\n\
http\://sebastian-schinzel.de/_download/ifip-sec2011.pdf
ascanbeta.usernameenumeration.alert.extrainfo=[{0}] parameter [{1}] leaks information on whether a user exists. The [{5}] differences in output, for the valid original username value [{2}], and invalid username value [{3}] are\:\n\
[{4}]
ascanbeta.usernameenumeration.alert.attack=Manipulate [{0}] field\: [{1}] and monitor the output 

ascanbeta.paddingoracle.name=Generic Padding Oracle
ascanbeta.paddingoracle.desc=By manipulating the padding on an encrypted string, an attacker is able to generate an error message that indicates a likely 'padding oracle' vulnerability. Such a vulnerability can affect any application or framework that uses encryption improperly, such as some versions of ASP.net, Java Server Faces, and Mono. An attacker may exploit this issue to decrypt data and recover encryption keys, potentially viewing and modifying confidential data. This rule should detect the MS10-070 padding oracle vulnerability in ASP.net if CustomErrors are enabled for that.
ascanbeta.paddingoracle.soln=Update the affected server software, or modify the scripts so that they properly validate encrypted data before attempting decryption.
ascanbeta.paddingoracle.refs=http\://netifera.com/research/\n\
http\://www.microsoft.com/technet/security/bulletin/ms10-070.mspx\n\
http\://www.mono-project.com/Vulnerabilities\#ASP.NET_Padding_Oracle\n\
https\://bugzilla.redhat.com/show_bug.cgi?id\=623799

ascanbeta.elinjection.name = \u0905\u092d\u093f\u0935\u094d\u092f\u0915\u094d\u0924\u093f \u092d\u093e\u0937\u093e \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928
ascanbeta.elinjection.desc = \u0938\u0949\u092b\u094d\u091f\u0935\u0947\u092f\u0930 constructs \u0938\u092d\u0940 \u092f\u093e \u090f\u0915 \u0905\u092d\u093f\u0935\u094d\u092f\u0915\u094d\u0924\u093f \u092d\u093e\u0937\u093e (EL) \u0915\u0925\u0928 \u092e\u0947\u0902 \u090f\u0915 \u091c\u093e\u0935\u093e \u0938\u0930\u094d\u0935\u0930 \u092a\u0947\u091c (\u092c\u093e\u0939\u094d\u092f \u0930\u0942\u092a \u092a\u094d\u0930\u092d\u093e\u0935\u093f\u0924 \u0907\u0928\u092a\u0941\u091f \u0938\u0947 \u090f\u0915 \u0905\u092a\u0938\u094d\u091f\u094d\u0930\u0940\u092e \u0918\u091f\u0915 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 JSP) \u0915\u093e \u0939\u093f\u0938\u094d\u0938\u093e \u0939\u0948, \u0932\u0947\u0915\u093f\u0928 \u092f\u0939 \u092c\u0947\u0905\u0938\u0930 \u0928\u0939\u0940\u0902 \u0939\u0948 \u092f\u093e \u0917\u093c\u0932\u0924 \u0922\u0902\u0917 \u0938\u0947 neutralizes \u0935\u093f\u0936\u0947\u0937 \u0924\u0924\u094d\u0935\u094b\u0902 \u0939\u0948 \u0915\u093f \u0905\u092d\u0940\u0937\u094d\u091f EL \u0915\u0925\u0928 \u0915\u094b \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0938\u0915\u0924\u093e \u0939\u0948 \u0907\u0938\u0938\u0947 \u092a\u0939\u0932\u0947 \u0915\u093f \u092f\u0939 \u092e\u093e\u0930 \u0921\u093e\u0932\u093e \u0939\u0948\u0964 \u0935\u0938\u0902\u0924 3.0.5 \u0915\u0947 \u0915\u0941\u091b \u0938\u0902\u0938\u094d\u0915\u0930\u0923\u094b\u0902 \u092e\u0947\u0902 \u0914\u0930 \u092a\u0939\u0932\u0947, \u091c\u094b \u092a\u094d\u0930\u092d\u093e\u0935\u0940 \u0930\u0942\u092a \u0938\u0947 \u090f\u0932 \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u0938\u0940 \u092d\u0940 \u0906\u0935\u0947\u0926\u0928 \u0915\u094b \u0909\u091c\u093e\u0917\u0930 \u091c\u094b \u0905\u092d\u093f\u0935\u094d\u092f\u0915\u094d\u0924\u093f \u092d\u093e\u0937\u093e \u092e\u0947\u0902 \u091f\u0948\u0917 \u0939\u094b\u0924\u093e \u091c\u093e \u092e\u0942\u0932\u094d\u092f\u093e\u0902\u0915\u093f\u0924 \u0915\u093f\u092f\u093e \u0926\u094b \u092c\u093e\u0930, \u090f\u0915 \u092d\u0947\u0926\u094d\u092f\u0924\u093e (CVE-2011-2730) \u0925\u0940\u0964 \u0939\u093e\u0932\u093e\u0902\u0915\u093f, \u092f\u0939\u093e\u0902 \u0924\u0915 \u0915\u093f \u092c\u093e\u0926 \u0915\u0947 \u0938\u0902\u0938\u094d\u0915\u0930\u0923\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f, \u0907\u0938 \u0915\u092e\u091c\u094b\u0930\u0940 \u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930\u0947\u0936\u0928 \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u0905\u092d\u0940 \u092d\u0940 \u0938\u0902\u092d\u0935 \u0939\u0948\u0964
ascanbeta.elinjection.soln = \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u0928 \u0921\u0947\u091f\u093e \u092e\u093e\u0928\u094d\u092f\u0924\u093e \u091c\u092c EL \u092a\u0930\u0924 \u092a\u0930, \u0921\u0947\u091f\u093e \u0906\u0924\u093e \u0939\u0948 \u0907\u0924\u0928\u093e \u0939\u0948 \u0915\u093f \u0915\u094b\u0908 metacharacter \u092e\u0942\u0932\u094d\u092f\u093e\u0902\u0915\u0928 \u0938\u0947 \u092a\u0939\u0932\u0947 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0938\u093e\u092e\u0917\u094d\u0930\u0940 \u0915\u0947 \u092d\u0940\u0924\u0930 \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e\u0924\u093e \u0926\u094d\u0935\u093e\u0930\u093e \u092a\u093e\u092f\u093e \u0939\u0948 \u0938\u092c\u0938\u0947 \u0905\u091a\u094d\u091b\u093e \u0905\u092d\u094d\u092f\u093e\u0938 \u0915\u0947 \u0916\u093f\u0932\u093e\u092b \u0905\u0935\u093f\u0936\u094d\u0935\u0938\u094d\u0924 \u0907\u0928\u092a\u0941\u091f \u0914\u0930 \u0906\u0909\u091f\u092a\u0941\u091f \u0909\u0938 \u090f\u0928\u094d\u0915\u094b\u0921\u093f\u0902\u0917 \u0915\u094b \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0932\u093e\u0917\u0942 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 \u0938\u092c\u0938\u0947 \u0938\u094d\u092a\u0937\u094d\u091f \u092a\u0948\u091f\u0930\u094d\u0928 \u0915\u093e \u092a\u0924\u093e \u0932\u0917\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f $ \u092e\u0947\u0902 \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0902 {\u0914\u0930 \#{, \u0932\u0947\u0915\u093f\u0928 \u0907\u0938\u0947 \u0938\u093e\u0902\u0915\u0947\u0924\u093f\u0915 \u0936\u092c\u094d\u0926\u094b\u0902 \u092e\u0947\u0902 \u092c\u0926\u0932\u0928\u093e \u092f\u093e \u0907\u0938 \u0921\u0947\u091f\u093e \u091f\u0941\u0915\u0921\u093c\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u0902\u092d\u0935 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964
ascanbeta.elinjection.refs = https\://owasp.org/www-community/vulnerabilities/Expression_Language_Injection\n\
http\://cwe.mitre.org/data/definitions/917.html

ascanbeta.xsltinjection.name = XSLT Injection
ascanbeta.xsltinjection.desc = Injection using XSL transformations may be possible, and may allow an attacker to read system information, read and write files, or execute arbitrary code.
ascanbeta.xsltinjection.refs = https\://www.contextis.com/blog/xslt-server-side-injection-attacks
ascanbeta.xsltinjection.soln = Sanitize and analyze every user input coming from any client-side.
ascanbeta.xsltinjection.error.otherinfo = The response to sending an XSLT token included error messages that may indicate a vulnerability to XSLT injections.
ascanbeta.xsltinjection.vendor.otherinfo = The XSLT processor vendor name "{0}" was returned after an injection request.
ascanbeta.xsltinjection.portscan.otherinfo = Port scanning may be possible.
ascanbeta.xsltinjection.command.otherinfo = Command execution may be possible.

ascanbeta.xxe.name=XML External Entity Attack

ascanbeta.xpathinjection.name=XPath Injection

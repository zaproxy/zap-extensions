ascanbeta.HTTPParamPoll.desc = HTTP \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u092a\u094d\u0930\u0926\u0942\u0937\u0923 (HPP) \u0939\u092e\u0932\u094b\u0902 \u0938\u0947 \u092e\u093f\u0932\u0915\u0930 \u0905\u0928\u094d\u092f \u092e\u094c\u091c\u0942\u0926\u093e \u092e\u093e\u0928\u0915\u094b\u0902 \u092e\u0947\u0902 \u090f\u0928\u094d\u0915\u094b\u0921\u0947\u0921 \u0915\u094d\u0935\u0947\u0930\u0940 \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u0938\u0940\u092e\u093e\u0902\u0915\u0915 \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928 \u0932\u0917\u093e\u0928\u0947 \u0915\u093e\u0964 \u0905\u0917\u0930 \u090f\u0915 \u0935\u0947\u092c \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0920\u0940\u0915 \u0938\u0947 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u0947 \u0907\u0928\u092a\u0941\u091f sanitize \u0928\u0939\u0940\u0902, \u090f\u0915 \u0926\u0941\u0930\u094d\u092d\u093e\u0935\u0928\u093e\u092a\u0942\u0930\u094d\u0923 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u0947 \u0924\u0930\u094d\u0915 \u092f\u093e \u0924\u094b \u0938\u0930\u094d\u0935\u0930-\u0938\u093e\u0907\u0921 \u092f\u093e \u0915\u094d\u0932\u093e\u0907\u0902\u091f-\u0938\u093e\u0907\u0921 \u0939\u092e\u0932\u094b\u0902 \u0915\u094b \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0915\u0947 \u0938\u092e\u091d\u094c\u0924\u093e \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964 HPP \u0939\u092e\u0932\u094b\u0902 \u0915\u093e \u090f\u0915 \u0928\u0924\u0940\u091c\u093e \u092f\u0939 \u0939\u0948 \u0915\u093f \u0939\u092e\u0932\u093e\u0935\u0930 \u0938\u0902\u092d\u0935\u0924\u0903 \u092e\u094c\u091c\u0942\u0926\u093e \u0939\u093e\u0930\u094d\u0921 \u0915\u094b\u0921\u093f\u0924 HTTP \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u0938\u0940 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0915\u0947 \u0935\u094d\u092f\u0935\u0939\u093e\u0930 \u0915\u094b \u0938\u0902\u0936\u094b\u0927\u093f\u0924, \u0907\u0928\u092a\u0941\u091f \u0938\u0924\u094d\u092f\u093e\u092a\u0928 \u091a\u094c\u0915\u093f\u092f\u094b\u0902, \u092c\u093e\u0908\u092a\u093e\u0938 \u0914\u0930 \u0924\u0915 \u092a\u0939\u0941\u0901\u091a\u0928\u0947 \u0914\u0930 \u0938\u0902\u092d\u0935\u0924\u0903 \u091a\u0930 \u0915\u093f \u092a\u094d\u0930\u0924\u094d\u092f\u0915\u094d\u0937 \u092a\u0939\u0941\u0901\u091a \u0938\u0947 \u092c\u093e\u0939\u0930 \u0939\u094b \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u092b\u093e\u092f\u0926\u093e \u0909\u0920\u093e\u0928\u0947 \u0915\u094b \u0913\u0935\u0930\u0930\u093e\u0907\u0921 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964
ascanbeta.HTTPParamPoll.extrainfo = https\://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/07-Input_Validation_Testing/04-Testing_for_HTTP_Parameter_Pollution
ascanbeta.HTTPParamPoll.name = HTTP \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u092a\u094d\u0930\u0926\u0942\u0937\u0923
ascanbeta.HTTPParamPoll.sol = \u0920\u0940\u0915 \u0938\u0947 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0907\u0928\u092a\u0941\u091f \u0915\u0947 \u0932\u093f\u090f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0938\u0940\u092e\u093e\u0902\u0915\u0915 sanitize

ascanbeta.backupfiledisclosure.desc = \u092b\u093c\u093e\u0907\u0932 \u0915\u0940 \u090f\u0915 \u092c\u0948\u0915\u0905\u092a \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0915\u0947 \u0926\u094d\u0935\u093e\u0930\u093e \u092c\u0924\u093e\u092f\u093e \u0917\u092f\u093e \u0925\u093e
ascanbeta.backupfiledisclosure.name = \u092c\u0948\u0915\u0905\u092a \u092b\u093c\u093e\u0907\u0932 \u092a\u094d\u0930\u0915\u091f\u0940\u0915\u0930\u0923
ascanbeta.backupfiledisclosure.otherinfo = A backup of [{0}] is available at [{1}]
ascanbeta.backupfiledisclosure.refs = https\://cwe.mitre.org/data/definitions/530.html\nhttps\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/04-Review_Old_Backup_and_Unreferenced_Files_for_Sensitive_Information.html
ascanbeta.backupfiledisclosure.soln = \u0928\u0939\u0940\u0902 \u092b\u093c\u093e\u0907\u0932\u094b\u0902 \u092e\u0947\u0902-\u0938\u094d\u0935\u0938\u094d\u0925\u093e\u0928\u0940 \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u092a\u0930 \u0938\u0902\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0947\u0902, \u0914\u0930 \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0947\u0902 \u0915\u093f \u0938\u0902\u092f\u0941\u0915\u094d\u0924 \u0930\u093e\u0937\u094d\u091f\u094d\u0930 \u0915\u0947 \u0906\u0935\u0936\u094d\u092f\u0915 \u092b\u093c\u093e\u0907\u0932\u0947\u0902 (\u091b\u0941\u092a\u0940 \u0939\u0941\u0908 \u092b\u093c\u093e\u0907\u0932\u094b\u0902 \u0938\u0939\u093f\u0924) \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0938\u0947 \u0928\u093f\u0915\u093e\u0932 \u0926\u093f\u090f \u091c\u093e\u0924\u0947 \u0939\u0948\u0902\u0964

ascanbeta.cookieslack.affect.response.no = These cookies did NOT affect the response\: 
ascanbeta.cookieslack.affect.response.yes = These cookies affected the response\: 
ascanbeta.cookieslack.desc = Repeated GET requests\: drop a different cookie each time, followed by normal request with all cookies to stabilize session, compare responses against original baseline GET. This can reveal areas where cookie based authentication/attributes are not actually enforced.
ascanbeta.cookieslack.endline = \n
ascanbeta.cookieslack.name = Cookie Slack Detector
ascanbeta.cookieslack.otherinfo.intro = Cookies that don't have expected effects can reveal flaws in application logic. In the worst case, this can reveal where authentication via cookie token(s) is not actually enforced.\n
ascanbeta.cookieslack.separator = ,
ascanbeta.cookieslack.session.destroyed = Dropping this cookie appears to have invalidated the session\: [{0}] A follow-on request with all original cookies still had a different response than the original request. \n
ascanbeta.cookieslack.session.warning = NOTE\: Because of its name this cookie may be important, but dropping it appears to have no effect\: [{0}] \n

ascanbeta.cors.info.desc = Cross-Origin Resource Sharing (CORS) is an HTTP-header based mechanism that allows a server to indicate any other origins (domain, scheme, or port) than its own from which a browser should permit loading of resources. It relaxes the Same-Origin Policy (SOP).
ascanbeta.cors.info.name = CORS Header
ascanbeta.cors.refs = https\://developer.mozilla.org/en-US/docs/Web/HTTP/CORS\nhttps\://portswigger.net/web-security/cors
ascanbeta.cors.soln = If a web resource contains sensitive information, the origin should be properly specified in the Access-Control-Allow-Origin header. Only trusted websites needing this resource should be specified in this header, with the most secured protocol supported.
ascanbeta.cors.vuln.desc = This CORS misconfiguration could allow an attacker to perform AJAX queries to the vulnerable website from a malicious page loaded by the victim's user agent.\nIn order to perform authenticated AJAX queries, the server must specify the header "Access-Control-Allow-Credentials\: true" and the "Access-Control-Allow-Origin" header must be set to null or the malicious page's domain. Even if this misconfiguration doesn't allow authenticated AJAX requests, unauthenticated sensitive content can still be accessed (e.g intranet websites).\nA malicious page can belong to a malicious website but also a trusted website with flaws (e.g XSS, support of HTTP without TLS allowing code injection through MITM, etc).
ascanbeta.cors.vuln.name = CORS Misconfiguration

ascanbeta.crossdomain.adobe.desc = \u092b\u094d\u0932\u0948\u0936/Silverlight \u0906\u0927\u093e\u0930\u093f\u0924 \u0915\u094d\u0930\u0949\u0938-\u0938\u093e\u0907\u091f \u0905\u0928\u0941\u0930\u094b\u0927 \u091c\u093e\u0932\u0938\u093e\u091c\u0940 \u0938\u0902\u092d\u0935, \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u092a\u0930 \u090f\u0915 \u092e\u093f\u0938\u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930\u0947\u0936\u0928 \u0915\u0947 \u0915\u093e\u0930\u0923 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964 
ascanbeta.crossdomain.adobe.read.extrainfo = \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0915\u093f\u0938\u0940 \u092d\u0940 \u0924\u0943\u0924\u0940\u092f \u092a\u0915\u094d\u0937 \u0921\u094b\u092e\u0947\u0928 \u0938\u0947 \u0907\u0938 \u0921\u094b\u092e\u0947\u0928 \u0915\u0947 \u0932\u093f\u090f \u0938\u0947\u0935\u093e \u0915\u0940 \u092b\u094d\u0932\u0948\u0936/Silverlight \u0918\u091f\u0915\u094b\u0902 \u0938\u0947 \u0939\u094b\u0928\u0947 \u0935\u093e\u0932\u0947 \u0905\u0928\u0941\u0930\u094b\u0927\u094b\u0902 \u092a\u0922\u093c\u0947\u0902 \u0926\u0941\u0930\u094d\u092d\u093e\u0935\u0928\u093e\u092a\u0942\u0930\u094d\u0923 \u0915\u094d\u0930\u0949\u0938-\u0921\u094b\u092e\u0947\u0928 \u0921\u0947\u091f\u093e \u092a\u0930\u092e\u093f\u091f\u0964 \u0905\u0917\u0930 \u0936\u093f\u0915\u093e\u0930 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0907\u0938 \u0938\u0947\u0935\u093e \u092e\u0947\u0902 \u0932\u0949\u0917 \u0907\u0928 \u0915\u093f\u092f\u093e \u0939\u0948, \u0926\u0941\u0930\u094d\u092d\u093e\u0935\u0928\u093e\u092a\u0942\u0930\u094d\u0923 \u092a\u0922\u093c\u0947\u0902 \u0905\u0928\u0941\u0930\u094b\u0927\u094b\u0902 \u0936\u093f\u0915\u093e\u0930 \u0915\u0947 \u0935\u093f\u0936\u0947\u0937\u093e\u0927\u093f\u0915\u093e\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902, \u0914\u0930 \u0907\u0938 \u0938\u0947\u0935\u093e \u0915\u0947 \u0926\u094d\u0935\u093e\u0930\u093e \u090f\u0915 \u0905\u0928\u0927\u093f\u0915\u0943\u0924 \u0924\u0943\u0924\u0940\u092f \u092a\u0915\u094d\u0937 \u0935\u0947\u092c \u0938\u093e\u0907\u091f, \u092a\u0940\u0921\u093c\u093f\u0924 \u0915\u0947 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0938\u092e\u091d\u094c\u0924\u093e \u0915\u093f\u092f\u093e \u091c\u093e \u0930\u0939\u093e \u0938\u0947 \u0921\u0947\u091f\u093e \u092e\u0947\u0902 \u092a\u0930\u093f\u0923\u093e\u092e \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964 \u092f\u0939 \u0935\u093f\u0936\u0947\u0937 \u0930\u0942\u092a \u0938\u0947 \u0905\u0917\u0930 \u090f\u0915 \u0938\u0924\u094d\u0930 \u0915\u0941\u0915\u0940 \u0906\u0927\u093e\u0930\u093f\u0924 \u0915\u094d\u0930\u093f\u092f\u093e\u0928\u094d\u0935\u092f\u0928 \u0909\u092a\u092f\u094b\u0917 \u092e\u0947\u0902 \u0939\u0948 \u090f\u0915 \u092e\u0941\u0926\u094d\u0926\u093e \u0939\u094b \u091c\u093e\u0928\u0947 \u0915\u0940 \u0938\u0902\u092d\u093e\u0935\u0928\u093e \u0939\u0948\u0964 
ascanbeta.crossdomain.adobe.read.name = \u0915\u094d\u0930\u0949\u0938-\u0921\u094b\u092e\u0947\u0928 Misconfiguration - \u090f\u0921\u094b\u092c - \u092a\u0922\u093c\u0947\u0902
ascanbeta.crossdomain.adobe.read.soln = \u0915\u094d\u0930\u0949\u0938-\u0921\u094b\u092e\u0947\u0928 \u092a\u0920\u0928 \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0907\u0938 \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930, \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u094d\u0935\u0940\u0915\u0943\u0924 \u0921\u094b\u092e\u0947\u0928 \u0915\u0940 \u0938\u0942\u091a\u0940 \u0915\u094b \u0938\u0940\u092e\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f crossdomain.xml \u092b\u093c\u093e\u0907\u0932 \u0915\u094b \u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930 \u0915\u0930\u0947\u0902 < \u092f\u0939 domain\="example.com \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0902 \u092a\u0939\u0941\u0901\u091a-\u0938\u0947-" >\u0964 \u0906\u092a \u0915\u0947\u0935\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u0939\u0941\u0901\u091a \u0926\u0947\u0928\u093e \u091a\u093e\u0939\u093f\u090f "*" (\u0938\u092d\u0940 \u0921\u094b\u092e\u0947\u0928) \u092f\u0926\u093f \u0906\u092a \u0906\u0936\u094d\u0935\u0938\u094d\u0924 \u0939\u0948\u0902 \u0915\u093f \u0907\u0938 \u0938\u0947\u0935\u093e \u0915\u0947 \u0915\u093f\u0938\u0940 \u092d\u0940 \u092a\u0939\u0941\u0901\u091a-\u0928\u093f\u092f\u0902\u0924\u094d\u0930\u093f\u0924, \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u092f\u093e \u0928\u093f\u091c\u0940 \u0921\u0947\u091f\u093e \u0939\u094b\u0938\u094d\u091f \u0928\u0939\u0940\u0902 \u0915\u0930\u0924\u093e \u0939\u0948\u0964
ascanbeta.crossdomain.adobe.send.extrainfo = \u092a\u0930\u092e\u093f\u091f \u0926\u0941\u0930\u094d\u092d\u093e\u0935\u0928\u093e\u092a\u0942\u0930\u094d\u0923 \u0915\u094d\u0930\u0949\u0938-\u0921\u094b\u092e\u0947\u0928 \u0921\u0947\u091f\u093e \u092d\u0947\u091c\u0947\u0902 (\u0932\u0947\u0915\u093f\u0928 \u091c\u0930\u0942\u0930\u0940 \u0928\u0939\u0940\u0902 \u0915\u093f \u092a\u0922\u093c\u0947\u0902) \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u0930\u0924\u093e \u0939\u0948 \u092b\u094d\u0932\u0948\u0936/Silverlight \u0918\u091f\u0915\u094b\u0902 \u0938\u0947 \u0939\u094b\u0928\u0947 \u0935\u093e\u0932\u0947 \u0915\u093f\u0938\u0940 \u092d\u0940 \u0924\u0943\u0924\u0940\u092f \u092a\u0915\u094d\u0937 \u0921\u094b\u092e\u0947\u0928 \u0938\u0947 \u0907\u0938 \u0921\u094b\u092e\u0947\u0928 \u0915\u0947 \u0932\u093f\u090f \u0938\u0947\u0935\u093e \u0915\u0940\u0964 \u092f\u0926\u093f \u0936\u093f\u0915\u093e\u0930 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0907\u0938 \u0938\u0947\u0935\u093e \u092e\u0947\u0902 \u0932\u0949\u0917 \u0907\u0928 \u0915\u093f\u092f\u093e \u0939\u0948, \u0924\u094b \u0926\u0941\u0930\u094d\u092d\u093e\u0935\u0928\u093e\u092a\u0942\u0930\u094d\u0923 \u0905\u0928\u0941\u0930\u094b\u0927\u094b\u0902 \u0936\u093f\u0915\u093e\u0930 \u0915\u0947 \u0935\u093f\u0936\u0947\u0937\u093e\u0927\u093f\u0915\u093e\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902, \u0914\u0930 \u0915\u094d\u0930\u0949\u0938 \u0938\u093e\u0907\u091f \u0905\u0928\u0941\u0930\u094b\u0927 \u091c\u093e\u0932\u0938\u093e\u091c\u0940 (CSRF) \u092a\u094d\u0930\u0915\u093e\u0930 \u0939\u092e\u0932\u094b\u0902, \u092a\u0940\u0921\u093c\u093f\u0924 \u0915\u0947 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u092a\u0930\u093f\u0923\u093e\u092e \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u092d\u0947\u091c\u0928\u0947 \u0915\u0947\u0964 \u092f\u0939 \u0935\u093f\u0936\u0947\u0937 \u0930\u0942\u092a \u0938\u0947 \u0905\u0917\u0930 \u090f\u0915 \u0938\u0924\u094d\u0930 \u0915\u0941\u0915\u0940 \u0906\u0927\u093e\u0930\u093f\u0924 \u0915\u094d\u0930\u093f\u092f\u093e\u0928\u094d\u0935\u092f\u0928 \u0909\u092a\u092f\u094b\u0917 \u092e\u0947\u0902 \u0939\u0948 \u090f\u0915 \u092e\u0941\u0926\u094d\u0926\u093e \u0939\u094b \u091c\u093e\u0928\u0947 \u0915\u0940 \u0938\u0902\u092d\u093e\u0935\u0928\u093e \u0939\u0948\u0964
ascanbeta.crossdomain.adobe.send.name = \u0915\u094d\u0930\u0949\u0938-\u0921\u094b\u092e\u0947\u0928 Misconfiguration - \u090f\u0921\u094b\u092c - \u092a\u0922\u093c\u0947\u0902
ascanbeta.crossdomain.adobe.send.soln = Crossdomain.xml \u0915\u094b \u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930 \u0921\u094b\u092e\u0947\u0928 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0915\u094d\u0930\u0949\u0938-\u0921\u094b\u092e\u0947\u0928 \u092d\u0947\u091c\u0947\u0902 (\u0932\u0947\u0915\u093f\u0928 \u091c\u0930\u0942\u0930\u0940 \u0928\u0939\u0940\u0902 \u0915\u093f \u092a\u0922\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f) \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0940 \u091c\u093e\u0924\u0940 \u0939\u0948 \u0915\u093f \u0915\u0940 \u0938\u0942\u091a\u0940 \u0915\u094b \u0938\u0940\u092e\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092b\u093c\u093e\u0907\u0932 \u0915\u093e \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0907\u0938 \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930, < \u092f\u0939 domain\="example.com \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0902-http-\u0905\u0928\u0941\u0930\u094b\u0927-\u0939\u0947\u0921\u0930-\u0938\u0947" \u0936\u0940\u0930\u094d\u0937 \u0932\u0947\u0916 "\u092a\u094d\u0930\u093e\u0927\u093f\u0915\u0930\u0923, \u090f\u0915\u094d\u0938-Blahh" \= >\u0964 \u0906\u092a \u0915\u0947\u0935\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u0939\u0941\u0901\u091a \u0926\u0947\u0928\u093e \u091a\u093e\u0939\u093f\u090f "*" (\u0938\u092d\u0940 \u0921\u094b\u092e\u0947\u0928) \u092f\u0926\u093f \u0906\u092a \u0906\u0936\u094d\u0935\u0938\u094d\u0924 \u0939\u0948\u0902 \u0915\u093f \u0907\u0938 \u0938\u0947\u0935\u093e \u0915\u094d\u0930\u0949\u0938 \u0938\u093e\u0907\u091f \u0905\u0928\u0941\u0930\u094b\u0927 \u091c\u093e\u0932\u0938\u093e\u091c\u0940 (CSRF \u0915\u094b) \u0915\u092e\u091c\u094b\u0930 \u0928\u0939\u0940\u0902 \u0939\u0948 \u0907\u0938 \u0938\u0947\u0935\u093e \u0915\u0947 \u0939\u092e\u0932\u094b\u0902\u0964
ascanbeta.crossdomain.name = \u0915\u094d\u0930\u0949\u0938-\u0921\u094b\u092e\u0947\u0928 Misconfiguration
ascanbeta.crossdomain.refs = https\://www.adobe.com/devnet-docs/acrobatetk/tools/AppSec/CrossDomain_PolicyFile_Specification.pdf\nhttps\://learn.microsoft.com/en-us/previous-versions/windows/silverlight/dotnet-windows-silverlight/cc197955(v\=vs.95)\nhttps\://learn.microsoft.com/en-us/previous-versions/windows/silverlight/dotnet-windows-silverlight/cc838250(v\=vs.95)
ascanbeta.crossdomain.silverlight.desc = \u092b\u094d\u0932\u0948\u0936/Silverlight \u0906\u0927\u093e\u0930\u093f\u0924 \u0915\u094d\u0930\u0949\u0938-\u0938\u093e\u0907\u091f \u0905\u0928\u0941\u0930\u094b\u0927 \u091c\u093e\u0932\u0938\u093e\u091c\u0940 \u0938\u0902\u092d\u0935, \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u092a\u0930 \u090f\u0915 \u092e\u093f\u0938\u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930\u0947\u0936\u0928 \u0915\u0947 \u0915\u093e\u0930\u0923 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964 
ascanbeta.crossdomain.silverlight.extrainfo = \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0915\u093f\u0938\u0940 \u092d\u0940 \u0924\u0943\u0924\u0940\u092f \u092a\u0915\u094d\u0937 \u0921\u094b\u092e\u0947\u0928 \u0938\u0947 \u0907\u0938 \u0921\u094b\u092e\u0947\u0928 \u0915\u0947 \u0932\u093f\u090f \u0938\u0947\u0935\u093e \u0915\u0940 \u092b\u094d\u0932\u0948\u0936/Silverlight \u0918\u091f\u0915\u094b\u0902 \u0938\u0947 \u0939\u094b\u0928\u0947 \u0935\u093e\u0932\u0947 \u0905\u0928\u0941\u0930\u094b\u0927\u094b\u0902 \u092a\u0922\u093c\u0947\u0902 \u0926\u0941\u0930\u094d\u092d\u093e\u0935\u0928\u093e\u092a\u0942\u0930\u094d\u0923 \u0915\u094d\u0930\u0949\u0938-\u0921\u094b\u092e\u0947\u0928 \u0921\u0947\u091f\u093e \u092a\u0930\u092e\u093f\u091f\u0964 \u0905\u0917\u0930 \u0936\u093f\u0915\u093e\u0930 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0907\u0938 \u0938\u0947\u0935\u093e \u092e\u0947\u0902 \u0932\u0949\u0917 \u0907\u0928 \u0915\u093f\u092f\u093e \u0939\u0948, \u0926\u0941\u0930\u094d\u092d\u093e\u0935\u0928\u093e\u092a\u0942\u0930\u094d\u0923 \u092a\u0922\u093c\u0947\u0902 \u0905\u0928\u0941\u0930\u094b\u0927\u094b\u0902 \u0936\u093f\u0915\u093e\u0930 \u0915\u0947 \u0935\u093f\u0936\u0947\u0937\u093e\u0927\u093f\u0915\u093e\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902, \u0914\u0930 \u0907\u0938 \u0938\u0947\u0935\u093e \u0915\u0947 \u0926\u094d\u0935\u093e\u0930\u093e \u090f\u0915 \u0905\u0928\u0927\u093f\u0915\u0943\u0924 \u0924\u0943\u0924\u0940\u092f \u092a\u0915\u094d\u0937 \u0935\u0947\u092c \u0938\u093e\u0907\u091f, \u092a\u0940\u0921\u093c\u093f\u0924 \u0915\u0947 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0938\u092e\u091d\u094c\u0924\u093e \u0915\u093f\u092f\u093e \u091c\u093e \u0930\u0939\u093e \u0938\u0947 \u0921\u0947\u091f\u093e \u092e\u0947\u0902 \u092a\u0930\u093f\u0923\u093e\u092e \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902\u0964 \u092f\u0939 \u0935\u093f\u0936\u0947\u0937 \u0930\u0942\u092a \u0938\u0947 \u0905\u0917\u0930 \u090f\u0915 \u0938\u0924\u094d\u0930 \u0915\u0941\u0915\u0940 \u0906\u0927\u093e\u0930\u093f\u0924 \u0915\u094d\u0930\u093f\u092f\u093e\u0928\u094d\u0935\u092f\u0928 \u0909\u092a\u092f\u094b\u0917 \u092e\u0947\u0902 \u0939\u0948 \u090f\u0915 \u092e\u0941\u0926\u094d\u0926\u093e \u0939\u094b \u091c\u093e\u0928\u0947 \u0915\u0940 \u0938\u0902\u092d\u093e\u0935\u0928\u093e \u0939\u0948\u0964 
ascanbeta.crossdomain.silverlight.name = \u0915\u094d\u0930\u0949\u0938-\u0921\u094b\u092e\u0947\u0928 Misconfiguration - Silverlight
ascanbeta.crossdomain.silverlight.soln = \u0915\u094d\u0930\u0949\u0938-\u0921\u094b\u092e\u0947\u0928 \u092a\u0920\u0928 \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0907\u0938 \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930, \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u094d\u0935\u0940\u0915\u0943\u0924 \u0921\u094b\u092e\u0947\u0928 \u0915\u0940 \u0938\u0942\u091a\u0940 \u0915\u094b \u0938\u0940\u092e\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f crossdomain.xml \u092b\u093c\u093e\u0907\u0932 \u0915\u094b \u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930 \u0915\u0930\u0947\u0902 < \u092f\u0939 domain\="example.com \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0902 \u092a\u0939\u0941\u0901\u091a-\u0938\u0947-" >\u0964 \u0906\u092a \u0915\u0947\u0935\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u0939\u0941\u0901\u091a \u0926\u0947\u0928\u093e \u091a\u093e\u0939\u093f\u090f "*" (\u0938\u092d\u0940 \u0921\u094b\u092e\u0947\u0928) \u092f\u0926\u093f \u0906\u092a \u0906\u0936\u094d\u0935\u0938\u094d\u0924 \u0939\u0948\u0902 \u0915\u093f \u0907\u0938 \u0938\u0947\u0935\u093e \u0915\u0947 \u0915\u093f\u0938\u0940 \u092d\u0940 \u092a\u0939\u0941\u0901\u091a-\u0928\u093f\u092f\u0902\u0924\u094d\u0930\u093f\u0924, \u0935\u094d\u092f\u0915\u094d\u0924\u093f\u0917\u0924 \u092f\u093e \u0928\u093f\u091c\u0940 \u0921\u0947\u091f\u093e \u0939\u094b\u0938\u094d\u091f \u0928\u0939\u0940\u0902 \u0915\u0930\u0924\u093e \u0939\u0948\u0964

ascanbeta.csrftoken.extrainfo.annotation = This is an informational alert as the form has a security annotation indicating that it does not need an anti-CSRF Token. This should be tested manually to ensure the annotation is correct.
ascanbeta.csrftoken.name = Anti-CSRF Tokens Check

ascanbeta.desc = Beta status active scan rules

ascanbeta.elinjection.desc = \u0938\u0949\u092b\u094d\u091f\u0935\u0947\u092f\u0930 constructs \u0938\u092d\u0940 \u092f\u093e \u090f\u0915 \u0905\u092d\u093f\u0935\u094d\u092f\u0915\u094d\u0924\u093f \u092d\u093e\u0937\u093e (EL) \u0915\u0925\u0928 \u092e\u0947\u0902 \u090f\u0915 \u091c\u093e\u0935\u093e \u0938\u0930\u094d\u0935\u0930 \u092a\u0947\u091c (\u092c\u093e\u0939\u094d\u092f \u0930\u0942\u092a \u092a\u094d\u0930\u092d\u093e\u0935\u093f\u0924 \u0907\u0928\u092a\u0941\u091f \u0938\u0947 \u090f\u0915 \u0905\u092a\u0938\u094d\u091f\u094d\u0930\u0940\u092e \u0918\u091f\u0915 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 JSP) \u0915\u093e \u0939\u093f\u0938\u094d\u0938\u093e \u0939\u0948, \u0932\u0947\u0915\u093f\u0928 \u092f\u0939 \u092c\u0947\u0905\u0938\u0930 \u0928\u0939\u0940\u0902 \u0939\u0948 \u092f\u093e \u0917\u093c\u0932\u0924 \u0922\u0902\u0917 \u0938\u0947 neutralizes \u0935\u093f\u0936\u0947\u0937 \u0924\u0924\u094d\u0935\u094b\u0902 \u0939\u0948 \u0915\u093f \u0905\u092d\u0940\u0937\u094d\u091f EL \u0915\u0925\u0928 \u0915\u094b \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0938\u0915\u0924\u093e \u0939\u0948 \u0907\u0938\u0938\u0947 \u092a\u0939\u0932\u0947 \u0915\u093f \u092f\u0939 \u092e\u093e\u0930 \u0921\u093e\u0932\u093e \u0939\u0948\u0964 \u0935\u0938\u0902\u0924 3.0.5 \u0915\u0947 \u0915\u0941\u091b \u0938\u0902\u0938\u094d\u0915\u0930\u0923\u094b\u0902 \u092e\u0947\u0902 \u0914\u0930 \u092a\u0939\u0932\u0947, \u091c\u094b \u092a\u094d\u0930\u092d\u093e\u0935\u0940 \u0930\u0942\u092a \u0938\u0947 \u090f\u0932 \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093f\u0938\u0940 \u092d\u0940 \u0906\u0935\u0947\u0926\u0928 \u0915\u094b \u0909\u091c\u093e\u0917\u0930 \u091c\u094b \u0905\u092d\u093f\u0935\u094d\u092f\u0915\u094d\u0924\u093f \u092d\u093e\u0937\u093e \u092e\u0947\u0902 \u091f\u0948\u0917 \u0939\u094b\u0924\u093e \u091c\u093e \u092e\u0942\u0932\u094d\u092f\u093e\u0902\u0915\u093f\u0924 \u0915\u093f\u092f\u093e \u0926\u094b \u092c\u093e\u0930, \u090f\u0915 \u092d\u0947\u0926\u094d\u092f\u0924\u093e (CVE-2011-2730) \u0925\u0940\u0964 \u0939\u093e\u0932\u093e\u0902\u0915\u093f, \u092f\u0939\u093e\u0902 \u0924\u0915 \u0915\u093f \u092c\u093e\u0926 \u0915\u0947 \u0938\u0902\u0938\u094d\u0915\u0930\u0923\u094b\u0902 \u0915\u0947 \u0932\u093f\u090f, \u0907\u0938 \u0915\u092e\u091c\u094b\u0930\u0940 \u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930\u0947\u0936\u0928 \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u0905\u092d\u0940 \u092d\u0940 \u0938\u0902\u092d\u0935 \u0939\u0948\u0964
ascanbeta.elinjection.name = \u0905\u092d\u093f\u0935\u094d\u092f\u0915\u094d\u0924\u093f \u092d\u093e\u0937\u093e \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928
ascanbeta.elinjection.refs = https\://owasp.org/www-community/vulnerabilities/Expression_Language_Injection\nhttps\://cwe.mitre.org/data/definitions/917.html
ascanbeta.elinjection.soln = \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u0928 \u0921\u0947\u091f\u093e \u092e\u093e\u0928\u094d\u092f\u0924\u093e \u091c\u092c EL \u092a\u0930\u0924 \u092a\u0930, \u0921\u0947\u091f\u093e \u0906\u0924\u093e \u0939\u0948 \u0907\u0924\u0928\u093e \u0939\u0948 \u0915\u093f \u0915\u094b\u0908 metacharacter \u092e\u0942\u0932\u094d\u092f\u093e\u0902\u0915\u0928 \u0938\u0947 \u092a\u0939\u0932\u0947 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0938\u093e\u092e\u0917\u094d\u0930\u0940 \u0915\u0947 \u092d\u0940\u0924\u0930 \u0935\u094d\u092f\u093e\u0916\u094d\u092f\u093e\u0924\u093e \u0926\u094d\u0935\u093e\u0930\u093e \u092a\u093e\u092f\u093e \u0939\u0948 \u0938\u092c\u0938\u0947 \u0905\u091a\u094d\u091b\u093e \u0905\u092d\u094d\u092f\u093e\u0938 \u0915\u0947 \u0916\u093f\u0932\u093e\u092b \u0905\u0935\u093f\u0936\u094d\u0935\u0938\u094d\u0924 \u0907\u0928\u092a\u0941\u091f \u0914\u0930 \u0906\u0909\u091f\u092a\u0941\u091f \u0909\u0938 \u090f\u0928\u094d\u0915\u094b\u0921\u093f\u0902\u0917 \u0915\u094b \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0932\u093e\u0917\u0942 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 \u0938\u092c\u0938\u0947 \u0938\u094d\u092a\u0937\u094d\u091f \u092a\u0948\u091f\u0930\u094d\u0928 \u0915\u093e \u092a\u0924\u093e \u0932\u0917\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f $ \u092e\u0947\u0902 \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0902 {\u0914\u0930 \#{, \u0932\u0947\u0915\u093f\u0928 \u0907\u0938\u0947 \u0938\u093e\u0902\u0915\u0947\u0924\u093f\u0915 \u0936\u092c\u094d\u0926\u094b\u0902 \u092e\u0947\u0902 \u092c\u0926\u0932\u0928\u093e \u092f\u093e \u0907\u0938 \u0921\u0947\u091f\u093e \u091f\u0941\u0915\u0921\u093c\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u0902\u092d\u0935 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964

ascanbeta.entityExpansion.desc = An exponential entity expansion, or "billion laughs" attack is a type of denial-of-service (DoS) attack. It is aimed at parsers of markup languages like XML or YAML that allow macro expansions.
ascanbeta.entityExpansion.name = Exponential Entity Expansion (Billion Laughs Attack)
ascanbeta.entityExpansion.other = The attack HTTP request received a response after {0} seconds.
ascanbeta.entityExpansion.refs = https\://en.wikipedia.org/wiki/Billion_laughs_attack\nhttps\://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing\nhttps\://cwe.mitre.org/data/definitions/776.html
ascanbeta.entityExpansion.soln = Defenses against this kind of attack include capping the memory allocated in an individual parser if loss of the document is acceptable, or treating entities symbolically and expanding them lazily only when (and to the extent) their content is to be used.

ascanbeta.forbiddenBypass.desc = Bypassing 403 endpoints may be possible, the scan rule sent a payload that caused the response to be accessible (status code 200).
ascanbeta.forbiddenBypass.name = Bypassing 403
ascanbeta.forbiddenBypass.refs = https\://www.acunetix.com/blog/articles/a-fresh-look-on-reverse-proxy-related-attacks/\nhttps\://i.blackhat.com/us-18/Wed-August-8/us-18-Orange-Tsai-Breaking-Parser-Logic-Take-Your-Path-Normalization-Off-And-Pop-0days-Out-2.pdf\nhttps\://www.contextis.com/en/blog/server-technologies-reverse-proxy-bypass

ascanbeta.httponlysite.desc = The site is only served under HTTP and not HTTPS.
ascanbeta.httponlysite.name = HTTP Only Site
ascanbeta.httponlysite.otherinfo = {0}\nZAP attempted to connect via\: {1}
ascanbeta.httponlysite.otherinfo.connectionfail = Failed to connect.
ascanbeta.httponlysite.otherinfo.differenthosts = Different Hosts.
ascanbeta.httponlysite.otherinfo.noredirection = There was no automatic redirection.
ascanbeta.httponlysite.otherinfo.nossl = Site has no SSL/TLS support.
ascanbeta.httponlysite.otherinfo.redirectionlimit = Redirection limit reached.
ascanbeta.httponlysite.otherinfo.redirecttohttp = Redirected to HTTP.
ascanbeta.httponlysite.otherinfo.urinotencoded = Redirection URI couldn't be encoded.
ascanbeta.httponlysite.refs = https\://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html\nhttps\://letsencrypt.org/
ascanbeta.httponlysite.soln = Configure your web or application server to use SSL (https).

ascanbeta.httpoxy.desc = The server initiated a proxied request via the proxy specified in the HTTP Proxy header of the request.Httpoxy typically affects code running in CGI or CGI like environments.\nThis may allow attackers to\:\n* Proxy the outgoing HTTP requests made by the web application\n* Direct the server to open outgoing connections to an address and port of their choosing or\n* Tie up server resources by forcing the vulnerable software to use a malicious proxy
ascanbeta.httpoxy.name = Httpoxy - Proxy Header Misuse
ascanbeta.httpoxy.otherinfo = An outgoing message to {0} was proxied via the host and port that ZAP injected into the HTTP Proxy header.
ascanbeta.httpoxy.refs = https\://httpoxy.org/
ascanbeta.httpoxy.skipped = the Network extension is disabled
ascanbeta.httpoxy.soln = The best immediate mitigation is to block Proxy request headers as early as possible, and before they hit your application.

ascanbeta.httpsashttp.desc = Content which was initially accessed via HTTPS (i.e.\: using SSL/TLS encryption) is also accessible via HTTP (without encryption). 
ascanbeta.httpsashttp.name = HTTPS Content Available via HTTP
ascanbeta.httpsashttp.otherinfo = ZAP attempted to connect via\: {0}
ascanbeta.httpsashttp.refs = https\://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps\://owasp.org/www-community/Security_Headers\nhttps\://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps\://caniuse.com/stricttransportsecurity\nhttps\://datatracker.ietf.org/doc/html/rfc6797
ascanbeta.httpsashttp.soln = Ensure that your web server, application server, load balancer, etc. is configured to only serve such content via HTTPS. Consider implementing HTTP Strict Transport Security.

ascanbeta.insecurehttpmethod.connect.exploitable.desc = \u0905\u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 HTTP \u0935\u093f\u0927\u093f [{0}] \u0907\u0938 \u0938\u0902\u0938\u093e\u0927\u0928 \u0915\u0947 \u0932\u093f\u090f \u0938\u0915\u094d\u0937\u092e \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948, \u0914\u0930 \u0926\u094b\u0939\u0928 \u0939\u0948\u0964 \u092f\u0939 \u0938\u0947\u0935\u093e \u0907\u0938 HTTP \u092a\u0926\u094d\u0927\u0924\u093f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947, \u090f\u0915 \u0924\u0940\u0938\u0930\u0940 \u092a\u093e\u0930\u094d\u091f\u0940 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 tunneled \u0938\u0949\u0915\u0947\u091f \u0915\u0928\u0947\u0915\u094d\u0936\u0928 \u0938\u094d\u0925\u093e\u092a\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u0902\u092d\u0935 \u0939\u094b \u092a\u093e\u092f\u093e \u0925\u093e\u0964  \u092f\u0939 \u0938\u0947\u0935\u093e \u090f\u0915 \u0905\u0928\u093e\u092e \u0938\u094d\u092a\u0948\u092e \u0930\u093f\u0932\u0947 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902, \u092f\u093e \u090f\u0915 \u0935\u0947\u092c \u092a\u094d\u0930\u0949\u0915\u094d\u0938\u0940 \u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u092a\u094d\u0930\u0924\u093f\u092c\u0902\u0927\u094b\u0902 \u0915\u094b \u0926\u0930\u0915\u093f\u0928\u093e\u0930, \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0907\u0938\u094d\u0924\u0947\u092e\u093e\u0932 \u0915\u093f\u092f\u093e \u091c\u093e \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0939\u094b\u0917\u0940\u0964 \u092f\u0939 \u092d\u0940 \u0907\u0938\u0947 \u090f\u0915 tunneled \u0935\u0940\u092a\u0940\u090f\u0928, \u092a\u094d\u0930\u092d\u093e\u0935\u0940 \u0922\u0902\u0917 \u0938\u0947 \u0905\u0935\u093f\u0936\u094d\u0935\u0938\u094d\u0924 \u0918\u091f\u0915\u094b\u0902 \u0915\u094b \u0936\u093e\u092e\u093f\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u092a\u0930\u093f\u0927\u093f \u0915\u093e \u0935\u093f\u0938\u094d\u0924\u093e\u0930 \u0938\u094d\u0925\u093e\u092a\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0907\u0938\u094d\u0924\u0947\u092e\u093e\u0932 \u0915\u093f\u092f\u093e \u091c\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948\u0964 
ascanbeta.insecurehttpmethod.connect.exploitable.extrainfo = \u0915\u0928\u0947\u0915\u094d\u091f \u0935\u093f\u0927\u093f [{0}], \u090f\u0915 \u0938\u0949\u0915\u0947\u091f \u0915\u0928\u0947\u0915\u094d\u0936\u0928 \u0926\u094d\u0935\u093e\u0930\u093e \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0938\u094d\u0925\u093e\u092a\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0907\u0938\u094d\u0924\u0947\u092e\u093e\u0932 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0925\u093e\u0964
ascanbeta.insecurehttpmethod.delete.exploitable.desc = This method is most commonly used in REST services, It is used to delete a resource.
ascanbeta.insecurehttpmethod.delete.exploitable.extrainfo = See the discussion on stackexchange\: https\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods, for understanding REST operations see https\://www.restapitutorial.com/lessons/httpmethods.html
ascanbeta.insecurehttpmethod.desc = \u0905\u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 HTTP \u0935\u093f\u0927\u093f [{0}] \u0907\u0938 \u0938\u0902\u0938\u093e\u0927\u0928 \u0915\u0947 \u0932\u093f\u090f \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u092a\u0930 \u0938\u0915\u094d\u0937\u092e \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\u0964 \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930\u0947\u0936\u0928, \u0914\u0930 \u0905\u0902\u0924\u0930\u094d\u0928\u093f\u0939\u093f\u0924 \u0915\u093e\u0930\u094d\u092f\u093e\u0928\u094d\u0935\u092f\u0928 \u0938\u0902\u0938\u093e\u0927\u0928 \u0915\u0940 \u0938\u0947\u0935\u093e \u0915\u0947 \u0932\u093f\u090f \u091c\u093f\u092e\u094d\u092e\u0947\u0926\u093e\u0930, \u0915\u0947 \u0906\u0927\u093e\u0930 \u092a\u0930 \u092f\u0939 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948 \u092f\u093e \u0926\u094b\u0939\u0928 \u0928\u0939\u0940\u0902 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964 \u091f\u094d\u0930\u0948\u0915 \u0914\u0930 \u091f\u094d\u0930\u0947\u0938 \u0935\u093f\u0927\u093f\u092f\u093e\u0901 \u0906\u0915\u094d\u0930\u092e\u0923\u0915\u0930\u094d\u0924\u093e \u0926\u094d\u0935\u093e\u0930\u093e, \u092d\u0932\u0947 \u0939\u0940 \u0938\u0924\u094d\u0930 \u0915\u0941\u0915\u0940 ''HttpOnly'' \u0927\u094d\u0935\u091c \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0939\u0948 \u092a\u094d\u0930\u093e\u0927\u093f\u0915\u093e\u0930 \u091f\u094b\u0915\u0928/\u0938\u0924\u094d\u0930 \u0915\u0941\u0915\u0940 \u090f\u0915 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e, \u0915\u0947 \u0932\u093f\u090f \u092a\u0939\u0941\u0901\u091a \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0907\u0938\u094d\u0924\u0947\u092e\u093e\u0932 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e\u0964 \u0907\u0938 \u0939\u092e\u0932\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u092b\u0932 \u0939\u094b\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0906\u092e \u0924\u094c\u0930 \u092a\u0930 \u090f\u0915 \u092c\u0921\u093c\u0947 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930, \u092f\u093e \u090f\u0915 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0939\u0948 \u091c\u094b \u0939\u0948 \u090f\u0915 \u090f\u0915 \u0939\u0940 \u092e\u0942\u0932 \u0928\u0940\u0924\u093f (\u092d\u0947\u0926\u094d\u092f\u0924\u093e \u092c\u093e\u092f\u092a\u093e\u0938 \u0936\u0930\u093e\u092c\u0940) \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e \u091a\u093e\u0939\u093f\u090f\u0964 ''\u0915\u0928\u0947\u0915\u094d\u091f'' \u0935\u093f\u0927\u093f \u090f\u0915 \u0935\u0947\u092c \u0915\u094d\u0932\u093e\u0907\u0902\u091f \u0926\u094d\u0935\u093e\u0930\u093e \u0924\u0943\u0924\u0940\u092f \u092a\u0915\u094d\u0937 \u0915\u0940 \u0935\u0947\u092c\u0938\u093e\u0907\u091f\u094b\u0902 \u092f\u093e \u0938\u0947\u0935\u093e\u0913\u0902 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 HTTP \u0938\u0941\u0930\u0902\u0917 \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0907\u0938\u094d\u0924\u0947\u092e\u093e\u0932 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e\u0964
ascanbeta.insecurehttpmethod.detailed.name = \u0905\u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 HTTP \u0935\u093f\u0927\u093f - {0}
ascanbeta.insecurehttpmethod.extrainfo = \u0928\u093f\u092e\u094d\u0928 HTTP \u0924\u0930\u0940\u0915\u094b\u0902 \u0907\u0938 \u0938\u0902\u0938\u093e\u0927\u0928 \u0915\u0947 \u0932\u093f\u090f \u0938\u0915\u094d\u0937\u092e \u0935\u093f\u0915\u0932\u094d\u092a \u0935\u093f\u0927\u093f \u0916\u0941\u0932\u093e\u0938\u093e \u0915\u093f\u092f\u093e\: [{0}]
ascanbeta.insecurehttpmethod.insecure = response code {0} for insecure HTTP METHOD
ascanbeta.insecurehttpmethod.name = \u0905\u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 HTTP \u0935\u093f\u0927\u093f
ascanbeta.insecurehttpmethod.options.exploitable.desc = This is a diagnostic method and should never be turned on in production mode.
ascanbeta.insecurehttpmethod.options.exploitable.extrainfo = See the discussion on stackexchange\: https\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods
ascanbeta.insecurehttpmethod.patch.exploitable.desc = This method is now most commonly used in REST services, PATCH is used for **modify** capabilities. The PATCH request only needs to contain the changes to the resource, not the complete resource.
ascanbeta.insecurehttpmethod.patch.exploitable.extrainfo = See the discussion on stackexchange\: https\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods, for understanding REST operations see https\://www.restapitutorial.com/lessons/httpmethods.html
ascanbeta.insecurehttpmethod.potentiallyinsecure = response code {0} for potentially insecure HTTP METHOD
ascanbeta.insecurehttpmethod.put.exploitable.desc = This method was originally intended for file management operations. It is now most commonly used in REST services, PUT is most-often utilized for **update** capabilities, PUT-ing to a known resource URI with the request body containing the newly-updated representation of the original resource..
ascanbeta.insecurehttpmethod.put.exploitable.extrainfo = See the discussion on stackexchange\: https\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods, for understanding REST operations see https\://www.restapitutorial.com/lessons/httpmethods.html
ascanbeta.insecurehttpmethod.soln = \u0910\u0938\u0947 \u091f\u094d\u0930\u0948\u0915, \u091f\u094d\u0930\u0947\u0938, \u0914\u0930 \u0915\u0928\u0947\u0915\u094d\u091f \u0905\u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0924\u0930\u0940\u0915\u0947 \u0915\u094b \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u092a\u0930 \u0905\u0915\u094d\u0937\u092e \u0915\u0930\u0947\u0902, \u0914\u0930 \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0947\u0902 \u0915\u093f \u0905\u0902\u0924\u0930\u094d\u0928\u093f\u0939\u093f\u0924 \u0938\u0947\u0935\u093e \u0915\u093e\u0930\u094d\u092f\u093e\u0928\u094d\u0935\u092f\u0928 \u0905\u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0924\u0930\u0940\u0915\u0947 \u0915\u093e \u0938\u092e\u0930\u094d\u0925\u0928 \u0928\u0939\u0940\u0902 \u0915\u0930\u0924\u093e\u0964
ascanbeta.insecurehttpmethod.trace.exploitable.desc = \u0905\u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 HTTP \u0935\u093f\u0927\u093f [{0}] \u0907\u0938 \u0938\u0902\u0938\u093e\u0927\u0928 \u0915\u0947 \u0932\u093f\u090f \u0938\u0915\u094d\u0937\u092e \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948, \u0914\u0930 \u0926\u094b\u0939\u0928 \u0939\u0948\u0964 \u091f\u094d\u0930\u0948\u0915 \u0914\u0930 \u091f\u094d\u0930\u0947\u0938 \u0935\u093f\u0927\u093f\u092f\u093e\u0901 \u0906\u0915\u094d\u0930\u092e\u0923\u0915\u0930\u094d\u0924\u093e \u0926\u094d\u0935\u093e\u0930\u093e, \u092d\u0932\u0947 \u0939\u0940 \u0938\u0924\u094d\u0930 \u0915\u0941\u0915\u0940 ''HttpOnly'' \u0927\u094d\u0935\u091c \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0939\u0948 \u092a\u094d\u0930\u093e\u0927\u093f\u0915\u093e\u0930 \u091f\u094b\u0915\u0928/\u0938\u0924\u094d\u0930 \u0915\u0941\u0915\u0940 \u090f\u0915 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e, \u0915\u0947 \u0932\u093f\u090f \u092a\u0939\u0941\u0901\u091a \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0907\u0938\u094d\u0924\u0947\u092e\u093e\u0932 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e\u0964 \u0907\u0938 \u0939\u092e\u0932\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u092b\u0932 \u0939\u094b\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0906\u092e \u0924\u094c\u0930 \u092a\u0930 \u090f\u0915 \u092c\u0921\u093c\u0947 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930, \u092f\u093e \u090f\u0915 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0939\u0948 \u091c\u094b \u0939\u0948 \u090f\u0915 \u090f\u0915 \u0939\u0940 \u092e\u0942\u0932 \u0928\u0940\u0924\u093f (\u092d\u0947\u0926\u094d\u092f\u0924\u093e \u092c\u093e\u092f\u092a\u093e\u0938 \u0936\u0930\u093e\u092c\u0940) \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u093e \u091a\u093e\u0939\u093f\u090f\u0964
ascanbeta.insecurehttpmethod.trace.exploitable.extrainfo = \u090f\u0915 \u091f\u094d\u0930\u0947\u0938 \u0905\u0928\u0941\u0930\u094b\u0927 \u090f\u0915 \u0915\u0938\u094d\u091f\u092e \u0915\u0941\u0915\u0940 \u092e\u093e\u0928 [{0}] \u0915\u0947 \u0938\u093e\u0925 \u0907\u0938 \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u0947 \u0932\u093f\u090f \u092d\u0947\u091c\u093e \u0917\u092f\u093e \u0925\u093e\u0964 \u092f\u0939 \u0915\u0941\u0915\u0940 \u092e\u093e\u0928 HTTP \u092a\u094d\u0930\u0924\u093f\u0938\u093e\u0926 \u092e\u0947\u0902, \u0938\u0941\u0930\u0915\u094d\u0937\u093e \u092d\u0947\u0926\u094d\u092f\u0924\u093e \u0905\u0928\u0941\u0930\u0941\u092a \u0916\u0941\u0932\u093e\u0938\u093e \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0925\u093e\u0964
ascanbeta.insecurehttpmethod.webdav.exploitable.desc = This HTTP method is a WEBDAV method\: {0}. If this server is not offering any WEBDAV services, these methods should not be available.
ascanbeta.insecurehttpmethod.webdav.exploitable.extrainfo = See the discussion on stackexchange\: https\://security.stackexchange.com/questions/21413/how-to-exploit-http-methods

ascanbeta.integeroverflow.desc = An integer overflow condition exists when an integer used in a compiled program extends beyond the range limits and has not been properly checked from the input stream.
ascanbeta.integeroverflow.error1 = Potential Integer Overflow.  Status code changed on the input of a long string of random integers.
ascanbeta.integeroverflow.error2 = Potential Integer Overflow.  Status code changed on the input of a long string of zeros.
ascanbeta.integeroverflow.error3 = Potential Integer Overflow.  Status code changed on the input of a long string of ones.
ascanbeta.integeroverflow.error4 = Potential Integer Overflow.  Status code changed on the input of a long string of nines.
ascanbeta.integeroverflow.name = Integer Overflow Error
ascanbeta.integeroverflow.refs = https\://en.wikipedia.org/wiki/Integer_overflow\nhttps\://cwe.mitre.org/data/definitions/190.html
ascanbeta.integeroverflow.soln = In order to prevent overflows and divide by 0 (zero) errors in the application, please rewrite the backend program, checking if the values of integers being processed are within the application's allowed range. This will require a recompilation of the backend executable.

ascanbeta.name = Active Scan Rules - beta

ascanbeta.noanticsrftokens.desc = \u0915\u094b\u0908 \u090f\u0902\u091f\u0940-CSRF \u091f\u094b\u0915\u0928 \u090f\u0915 HTML \u092a\u094d\u0930\u0938\u094d\u0924\u0941\u0924 \u092b\u093e\u0930\u094d\u092e \u092e\u0947\u0902 \u092a\u093e\u090f \u0917\u090f\u0964
ascanbeta.noanticsrftokens.name = \u0935\u093f\u0930\u094b\u0927\u0940-CSRF \u091f\u094b\u0915\u0928 \u0915\u0940 \u0905\u0928\u0941\u092a\u0938\u094d\u0925\u093f\u0924\u093f

ascanbeta.oobxss.name = Out of Band XSS
ascanbeta.oobxss.skipped = no Active Scan OAST service is selected.

ascanbeta.proxydisclosure.attack = TRACE, OPTIONS methods with 'Max-Forwards' header. TRACK method.
ascanbeta.proxydisclosure.desc = {0} proxy server(s) were detected or fingerprinted. This information helps a potential attacker to determine \n - A list of targets for an attack against the application.\n - Potential vulnerabilities on the proxy servers that service the application.\n - The presence or absence of any proxy-based components that might cause attacks against the application to be detected, prevented, or mitigated. 
ascanbeta.proxydisclosure.extrainfo.proxyserver = - {0}
ascanbeta.proxydisclosure.extrainfo.proxyserver.header = Using the TRACE, OPTIONS, and TRACK methods, the following proxy servers have been identified between ZAP and the application/web server\: 
ascanbeta.proxydisclosure.extrainfo.silentproxyserver = - {0}
ascanbeta.proxydisclosure.extrainfo.silentproxyserver.header = The following 'silent' proxy servers were identified. Due to their behaviour, it is not known at which point in the network topology these proxy servers reside\:
ascanbeta.proxydisclosure.extrainfo.traceenabled = The 'TRACE' method is enabled on one or more of the proxy servers, or on the origin server. This method leaks all information submitted from the web browser and proxies back to the user agent. This may facilitate 'Cross Site Tracing' attacks. 
ascanbeta.proxydisclosure.extrainfo.unknown = Unknown
ascanbeta.proxydisclosure.extrainfo.webserver = - {0}
ascanbeta.proxydisclosure.extrainfo.webserver.header = The following web/application server has been identified\: 
ascanbeta.proxydisclosure.name = Proxy Disclosure
ascanbeta.proxydisclosure.refs = https\://tools.ietf.org/html/rfc7231\#section-5.1.2
ascanbeta.proxydisclosure.soln = Disable the 'TRACE' method on the proxy servers, as well as the origin web/application server.\nDisable the 'OPTIONS' method on the proxy servers, as well as the origin web/application server, if it is not required for other purposes, such as 'CORS' (Cross Origin Resource Sharing).\nConfigure the web and application servers with custom error pages, to prevent 'fingerprintable' product-specific error pages being leaked to the user in the event of HTTP errors, such as 'TRACK' requests for non-existent pages.\nConfigure all proxies, application servers, and web servers to prevent disclosure of the technology and version information in the 'Server' and 'X-Powered-By' HTTP response headers.\n

ascanbeta.relativepathconfusion.desc = The web server is configured to serve responses to ambiguous URLs in a manner that is likely to lead to confusion about the correct "relative path" for the URL. Resources (CSS, images, etc.) are also specified in the page response using relative, rather than absolute URLs. In an attack, if the web browser parses the "cross-content" response in a permissive manner, or can be tricked into permissively parsing the "cross-content" response, using techniques such as framing, then the web browser may be fooled into interpreting HTML as CSS (or other content types), leading to an XSS vulnerability.
ascanbeta.relativepathconfusion.extrainfo.contenttypeenabled = A Content Type of "{0}" was specified. If the web browser is employing strict parsing rules, this will prevent cross-content attacks from succeeding. Quirks Mode in the web browser would disable strict parsing.  
ascanbeta.relativepathconfusion.extrainfo.framingallowed = No X-Frame-Options header was specified, so the page can be framed, and this can be used to enable Quirks Mode, allowing the specified Content Type to be bypassed.
ascanbeta.relativepathconfusion.extrainfo.morethanonebasetag = More than one <base> tag was specified in the HTML <head> tag to define the location for relative URLs, which is not valid.
ascanbeta.relativepathconfusion.extrainfo.nobasetag = No <base> tag was specified in the HTML <head> tag to define the location for relative URLs.
ascanbeta.relativepathconfusion.extrainfo.nocontenttype = No Content Type was specified, so Quirks Mode is not required to exploit the vulnerability in the web browser. 
ascanbeta.relativepathconfusion.extrainfo.quirksmodeenabledexplicitly = Quirks Mode is explicitly enabled via <meta http-equiv\="{0}", allowing the specified Content Type to be bypassed.
ascanbeta.relativepathconfusion.extrainfo.quirksmodeenabledimplicitly = Quirks Mode is implicitly enabled via the use of an old DOCTYPE with PUBLIC id "{0}", allowing the specified Content Type to be bypassed in some web browsers.
ascanbeta.relativepathconfusion.extrainfo.quirksmodeenabledimplicitlynodoctype = Quirks Mode is implicitly enabled via the absence of a DOCTYPE, allowing the specified Content Type to be bypassed.
ascanbeta.relativepathconfusion.name = Relative Path Confusion
ascanbeta.relativepathconfusion.refs = https\://arxiv.org/abs/1811.00917\nhttps\://hsivonen.fi/doctype/\nhttps\://www.w3schools.com/tags/tag_base.asp
ascanbeta.relativepathconfusion.soln = Web servers and frameworks should be updated to be configured to not serve responses to ambiguous URLs in such a way that the relative path of such URLs could be mis-interpreted by components on either the client side, or server side.\nWithin the application, the correct use of the "<base>" HTML tag in the HTTP response will unambiguously specify the base URL for all relative URLs in the document.\nUse the "Content-Type" HTTP response header to make it harder for the attacker to force the web browser to mis-interpret the content type of the response.\nUse the "X-Content-Type-Options\: nosniff" HTTP response header to prevent the web browser from "sniffing" the content type of the response.\nUse a modern DOCTYPE such as "<\!doctype html>" to prevent the page from being rendered in the web browser using "Quirks Mode", since this results in the content type being ignored by the web browser.\nSpecify the "X-Frame-Options" HTTP response header to prevent Quirks Mode from being enabled in the web browser using framing attacks. 

ascanbeta.sessionfixation.alert.attack = {0} \u0915\u094d\u0937\u0947\u0924\u094d\u0930\: [{1}]
ascanbeta.sessionfixation.alert.cookie.extrainfo = \u0915\u0941\u0915\u0940 \u0915\u0940 \u092a\u094d\u0930\u0924\u093f\u0915\u094d\u0930\u093f\u092f\u093e \u092e\u0947\u0902 \u0938\u0947\u091f \u091c\u092c \u0915\u0941\u0915\u0940 \u092b\u093c\u0940\u0932\u094d\u0921 [{0}] \u0928\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u0947\u091f \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\: [{1}] \u0915\u0947 \u0938\u093e\u0925 \u092a\u094d\u0930\u0924\u093f\u0915\u094d\u0930\u093f\u092f\u093e \u092e\u0947\u0902 \u0938\u0947\u091f \u0915\u0941\u0915\u0940 \u0909\u0927\u093e\u0930 \u0932\u093f\u092f\u093e (\u092e\u093e\u0928\u094d\u092f) \u0915\u0941\u0915\u0940 \u092e\u093e\u0928 \u0905\u0928\u0941\u0930\u094b\u0927 [{1}] \u092e\u0947\u0902\: [{2}]
ascanbeta.sessionfixation.alert.cookie.extrainfo.loginpage = The url on which the issue was discovered was flagged as a logon page.\n\nThis issue should be manually validated by checking that the session token set on the logon page is still valid once logged in, and that the token can be used to directly access a page/resource which should require the user to be logged in.
ascanbeta.sessionfixation.alert.url.extrainfo = \u091c\u092c URL \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930/\u091b\u0926\u094d\u092e URL \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 [{0}] \u0928\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u0947\u091f \u0939\u0948 \u090f\u0915 \u0938\u0902\u092d\u093e\u0935\u0928\u093e \u0938\u0924\u094d\u0930 \u092e\u093e\u0928 Url \u092e\u0947\u0902 HTML \u0906\u0909\u091f\u092a\u0941\u091f \u092e\u0947\u0902 \u092a\u094d\u0930\u0915\u091f \u0939\u0941\u0908 \u0939\u0948\: [{1}] \u091c\u092c \u092f\u0939 \u0909\u0927\u093e\u0930'' \u0938\u0924\u094d\u0930 [{1}]'' \u0907\u0938 URL \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u092c\u093e\u0926 \u0915\u0947 \u0905\u0928\u0941\u0930\u094b\u0927 \u092e\u0947\u0902 \u092a\u094d\u0930\u092f\u094b\u0917 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948, \u090f\u0915 \u0928\u092f\u093e \u0938\u0924\u094d\u0930 \u0928\u0939\u0940\u0902 \u092c\u0928\u093e\u0908 \u0917\u0908 \u0939\u0948\u0964
ascanbeta.sessionfixation.alert.url.extrainfo.loginpage = Url \u092a\u0930 \u091c\u094b \u092e\u0941\u0926\u094d\u0926\u0947 \u0915\u0940 \u0916\u094b\u091c \u0915\u0940 \u0925\u0940 \u090f\u0915 \u0932\u0949\u0917\u0911\u0928 \u092a\u0943\u0937\u094d\u0920 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u091d\u0902\u0921\u0940 \u0926\u093f\u0916\u093e\u0915\u0930 \u0930\u0935\u093e\u0928\u093e \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0925\u093e\u0964
ascanbeta.sessionfixation.desc = \u0938\u0924\u094d\u0930 \u0928\u093f\u0930\u094d\u0927\u093e\u0930\u0923 \u0938\u0902\u092d\u0935 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964 \u092f\u0926\u093f \u090f\u0915 \u0932\u0949\u0917\u093f\u0928 (\u091c\u0939\u093e\u0901 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0938\u094d\u0935\u092f\u0902 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 authenticates) URL \u0915\u0947 \u0938\u093e\u0925 \u092f\u0939 \u0938\u092e\u0938\u094d\u092f\u093e \u0939\u094b\u0924\u0940 \u0939\u0948, \u0924\u094b \u092f\u0942\u0906\u0930\u090f\u0932 \u090f\u0915 \u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0938\u0924\u094d\u0930 id, \u0915\u0947 \u0938\u093e\u0925 \u0938\u093e\u0925 \u090f\u0915 \u0939\u092e\u0932\u093e\u0935\u0930 \u0926\u094d\u0935\u093e\u0930\u093e \u0936\u093f\u0915\u093e\u0930 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0906\u0926\u0947\u0936 \u092e\u0947\u0902 \u092c\u093e\u0926 \u092e\u0947\u0902 \u0926\u093f\u090f \u0917\u090f \u0938\u0924\u094d\u0930 id \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0936\u093f\u0915\u093e\u0930 \u0915\u0940 \u092a\u0939\u091a\u093e\u0928 \u092e\u093e\u0928 \u0915\u0947 \u0932\u093f\u090f \u0926\u0940 \u091c\u093e \u0938\u0915\u0924\u0940 \u0939\u0948\u0964 \u092f\u0926\u093f \u0915\u093f\u0938\u0940 \u0917\u0948\u0930-\u0932\u0949\u0917\u0907\u0928 \u092a\u0947\u091c \u0915\u0947 \u0938\u093e\u0925 \u0938\u092e\u0938\u094d\u092f\u093e \u0939\u094b\u0924\u0940 \u0939\u0948, \u092f\u0942\u0906\u0930\u090f\u0932 \u0914\u0930 \u092b\u093f\u0915\u094d\u0938\u094d\u0921 \u0938\u0924\u094d\u0930 id \u0915\u0947\u0935\u0932 \u090f\u0915 \u0939\u092e\u0932\u093e\u0935\u0930 \u0928\u0947 \u090f\u0915 \u091c\u093f\u0938\u092e\u0947\u0902 \u0905\u092a\u094d\u0930\u092e\u093e\u0923\u093f\u0915 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u0915\u094b \u091f\u094d\u0930\u0948\u0915 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0907\u0938\u094d\u0924\u0947\u092e\u093e\u0932 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e\u0964 \u092f\u0926\u093f \u091c\u094b\u0916\u093f\u092e \u092a\u0930 \u090f\u0915 \u0915\u0941\u0915\u0940 \u092b\u093c\u0940\u0932\u094d\u0921 \u092f\u093e \u0915\u093f\u0938\u0940 \u092a\u094d\u0930\u092a\u0924\u094d\u0930 \u092b\u093c\u0940\u0932\u094d\u0921 (\u092a\u094b\u0938\u094d\u091f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930) \u0915\u0947 \u092c\u091c\u093e\u092f \u090f\u0915 URL (\u091c\u093e\u0913) \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u092a\u0930 \u0939\u094b\u0924\u0940 \u0939\u0948, \u0924\u092c \u0915\u0941\u091b \u0905\u0928\u094d\u092f \u092d\u0947\u0926\u094d\u092f\u0924\u093e \u092d\u0940 \u0915\u0941\u0915\u0940 \u0915\u094d\u0937\u0947\u0924\u094d\u0930 \u092d\u0947\u0926\u094d\u092f\u0924\u093e \u0915\u093e \u0936\u094b\u0937\u0923 \u0915\u093f\u092f\u093e \u091c\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u0940\u0921\u093c\u093f\u0924 \u0915\u0947 \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u092a\u0930, \u0938\u0947\u091f \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u0921\u093c \u0938\u0915\u0924\u093e \u0939\u0948\u0964
ascanbeta.sessionfixation.name = \u0938\u0924\u094d\u0930 \u0928\u093f\u0930\u094d\u0927\u093e\u0930\u0923
ascanbeta.sessionfixation.refs = https\://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A2-Broken_Authentication\nhttps\://owasp.org/www-community/attacks/Session_fixation\nhttps\://acrossecurity.com/papers/session_fixation.pdf\nhttps\://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html
ascanbeta.sessionfixation.soln = 1) Prevent the attacker from gaining a session id by enforcing strict session ids, and by only allocating session ids upon successful authentication to the application.\n2) The server should always create a new session id upon authentication, regardless of whether a session is already in place.\n3) Bind the session id to some identifiable client attribute combination, such as IP address, SSL client certificate.\n4) Sessions, when destroyed, must be destroyed on the server, as well as on the client.\n5) Implement a logout mechanism which will destroy all previous sessions for the client.\n6) Implement absolute session timeouts.\n7)Switch from a URL based to a cookie or form based session id implementation, as the latter typically require additional vulnerabilities, in order to be exploitable by an attacker\n

ascanbeta.sessionidaccessiblebyjavascript.alert.attack = {0} \u0915\u094d\u0937\u0947\u0924\u094d\u0930\: [{1}]
ascanbeta.sessionidaccessiblebyjavascript.alert.extrainfo = session identifier {0} field [{1}], value [{2}] may be accessed using JavaScript in the web browser
ascanbeta.sessionidaccessiblebyjavascript.alert.extrainfo.loginpage = Url \u092a\u0930 \u091c\u094b \u092e\u0941\u0926\u094d\u0926\u0947 \u0915\u0940 \u0916\u094b\u091c \u0915\u0940 \u0925\u0940 \u090f\u0915 \u0932\u0949\u0917\u0911\u0928 \u092a\u0943\u0937\u094d\u0920 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u091d\u0902\u0921\u0940 \u0926\u093f\u0916\u093e\u0915\u0930 \u0930\u0935\u093e\u0928\u093e \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0925\u093e\u0964
ascanbeta.sessionidaccessiblebyjavascript.desc = A Session Id cookie sent by the server (when the URL is modified by setting the named parameter field to NULL) may be accessed by JavaScript on the client. In conjunction with another vulnerability, this may allow the session to be hijacked.  
#Session Id Cookie accessible by JavaScript
ascanbeta.sessionidaccessiblebyjavascript.name = Session ID Cookie Accessible to JavaScript
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidaccessiblebyjavascript.refs=
ascanbeta.sessionidaccessiblebyjavascript.soln = 1) Use the 'httponly' flag when setting a cookie containing a session id, to prevent it from being accessed by JavaScript in the web browser.  

ascanbeta.sessionidexpiry.alert.attack = {0} \u0915\u094d\u0937\u0947\u0924\u094d\u0930\: [{1}]
ascanbeta.sessionidexpiry.alert.extrainfo = \u091c\u092c \u0924\u0915 \u0915\u093f \u0938\u0924\u094d\u0930 \u0915\u094b \u0928\u0937\u094d\u091f \u0915\u0930 \u0926\u093f\u092f\u093e \u0939\u0948 \u0938\u0924\u094d\u0930 \u092a\u0939\u091a\u093e\u0928\u0915\u0930\u094d\u0924\u093e {0} \u092b\u093c\u0940\u0932\u094d\u0921 [{1}], [{2}] \u092e\u0942\u0932\u094d\u092f [(\u0915\u0941\u0915\u0940 {4} \u092a\u0930 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0925\u093e \u0915\u0947 \u092c\u093e\u0926 \u0938\u0947){3} \u0924\u0915], \u092a\u0939\u0941\u0901\u091a\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0939\u0948\u0964
ascanbeta.sessionidexpiry.alert.extrainfo.loginpage = Url \u092a\u0930 \u091c\u094b \u092e\u0941\u0926\u094d\u0926\u0947 \u0915\u0940 \u0916\u094b\u091c \u0915\u0940 \u0925\u0940 \u090f\u0915 \u0932\u0949\u0917\u0911\u0928 \u092a\u0943\u0937\u094d\u0920 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u091d\u0902\u0921\u0940 \u0926\u093f\u0916\u093e\u0915\u0930 \u0930\u0935\u093e\u0928\u093e \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0925\u093e\u0964
ascanbeta.sessionidexpiry.browserclose = \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u092c\u0902\u0926 \u0915\u0930\u0947\u0902
ascanbeta.sessionidexpiry.desc = \u090f\u0915 \u0938\u0924\u094d\u0930 Id \u0915\u0941\u0915\u0940 \u091c\u092c (URL \u0928\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0928\u093e\u092e\u093e\u0902\u0915\u093f\u0924 \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u092b\u093c\u0940\u0932\u094d\u0921 \u0938\u0947\u091f\u093f\u0902\u0917 \u0915\u0947 \u0926\u094d\u0935\u093e\u0930\u093e \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948) \u0938\u0930\u094d\u0935\u0930 \u0926\u094d\u0935\u093e\u0930\u093e \u092d\u0947\u091c\u093e \u0917\u092f\u093e \u090f\u0915 \u0905\u0924\u094d\u092f\u0927\u093f\u0915 \u0938\u092e\u092f \u0905\u0935\u0927\u093f \u0915\u0947 \u0932\u093f\u090f \u092e\u093e\u0928\u094d\u092f \u0939\u094b\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u0947\u091f \u0939\u0948\u0964 \u092f\u0939 \u090f\u0915 \u0939\u092e\u0932\u093e\u0935\u0930 \u0926\u094d\u0935\u093e\u0930\u093e \u0926\u094b\u0939\u0928 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948 \u0905\u0917\u0930 \u092c\u093e\u0939\u0930, \u0932\u0949\u0917 \u0911\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u092d\u0942\u0932\u0924\u093e \u092f\u0926\u093f \u0932\u0949\u0917\u0906\u0909\u091f \u0915\u093e\u0930\u094d\u092f\u0915\u094d\u0937\u092e\u0924\u093e \u0938\u0924\u094d\u0930 \u0938\u0939\u0940 \u0922\u0902\u0917 \u0938\u0947 \u0928\u0937\u094d\u091f \u0928\u0939\u0940\u0902 \u0915\u0930\u0924\u093e \u0939\u0948, \u092f\u093e \u092f\u0926\u093f \u0938\u0924\u094d\u0930 id \u0926\u094d\u0935\u093e\u0930\u093e \u0915\u0941\u091b \u0905\u0928\u094d\u092f \u0905\u0930\u094d\u0925 \u0939\u0948 \u0938\u092e\u091d\u094c\u0924\u093e \u0915\u093f\u092f\u093e \u0939\u0948\u0964     
#Session Id Cookie Expiry
ascanbeta.sessionidexpiry.name = \u0905\u0924\u094d\u092f\u0927\u093f\u0915 \u0938\u0924\u094d\u0930 ID \u0938\u092e\u093e\u092a\u094d\u0924\u093f \u0938\u092e\u092f/Max-\u0906\u092f\u0941 \u0939\u0948
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidexpiry.refs=
ascanbeta.sessionidexpiry.soln = 1) '\u0928\u093f\u0936\u094d\u0935\u093e\u0938\u0928' \u092f\u093e '\u0905\u0927\u093f\u0915\u0924\u092e \u0906\u092f\u0941' \u0915\u0941\u0915\u0940 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u091c\u092c \u092f\u0941\u0915\u094d\u0924 \u090f\u0915 \u0938\u0924\u094d\u0930 id \u0915\u0941\u0915\u0940 \u0938\u0947\u091f\u093f\u0902\u0917 \u092f\u0939 \u0938\u092e\u092f \u0915\u0940 \u0932\u0902\u092c\u0940 \u0905\u0935\u0927\u093f \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u0932\u092c\u094d\u0927 \u0939\u094b\u0928\u0947 \u0938\u0947 \u0930\u094b\u0915\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902\u0964 2) \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0947\u0902 \u0915\u093f \u0932\u0949\u0917 \u0906\u0909\u091f \u0915\u093e\u0930\u094d\u092f\u0915\u094d\u0937\u092e\u0924\u093e \u092e\u094c\u091c\u0942\u0926 \u0939\u0948, \u0914\u0930 \u0915\u093f \u092f\u0939 \u0938\u0939\u0940 \u0922\u0902\u0917 \u0938\u0947 \u0938\u0924\u094d\u0930 \u0915\u094b \u0928\u0937\u094d\u091f \u0915\u0930 \u0926\u0947\u0924\u093e \u0939\u0948\u0964 3) \u0905\u0917\u0930 \u090f\u0915 \u0938\u0924\u094d\u0930 id \u0938\u092e\u091d\u094c\u0924\u093e \u0915\u093f\u092f\u093e \u0939\u0948, \u0907\u0938\u0947 \u0928\u0939\u0940\u0902 \u0915\u093e \u0936\u094b\u0937\u0923 \u0915\u093f\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0915\u093f \u092f\u0939 \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0928\u094d\u092f preventative \u0909\u092a\u093e\u092f\u094b\u0902 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902\u0964
ascanbeta.sessionidexpiry.timeexpired = \u0915\u0940 \u0938\u092e\u092f \u0938\u0940\u092e\u093e \u0938\u092e\u093e\u092a\u094d\u0924
ascanbeta.sessionidexpiry.timelessthanonehour = \u0915\u092e \u0938\u0947 \u0915\u092e \u090f\u0915 \u0918\u0902\u091f\u093e
ascanbeta.sessionidexpiry.timemorethanoneday = \u0905\u0927\u093f\u0915 \u0938\u0947 \u0905\u0927\u093f\u0915 \u090f\u0915 \u0926\u093f\u0928
ascanbeta.sessionidexpiry.timemorethanonehour = \u090f\u0915 \u0918\u0902\u091f\u0947 \u0938\u0947 \u0905\u0927\u093f\u0915
ascanbeta.sessionidexpiry.timemorethanoneweek = \u0905\u0927\u093f\u0915 \u0938\u0947 \u0905\u0927\u093f\u0915 \u090f\u0915 \u0938\u092a\u094d\u0924\u093e\u0939

ascanbeta.sessionidexposedinurl.alert.attack = {0} \u0915\u094d\u0937\u0947\u0924\u094d\u0930\: [{1}]
ascanbeta.sessionidexposedinurl.alert.extrainfo = {0} [{1}] \u092b\u093c\u0940\u0932\u094d\u0921 \u090f\u0915 \u0909\u091c\u093e\u0917\u0930 \u0938\u0924\u094d\u0930 \u092a\u0939\u091a\u093e\u0928\u0915\u0930\u094d\u0924\u093e [{2}] \u0936\u093e\u092e\u093f\u0932 \u0939\u0948\u0902
ascanbeta.sessionidexposedinurl.alert.extrainfo.loginpage = Url \u092a\u0930 \u091c\u094b \u092e\u0941\u0926\u094d\u0926\u0947 \u0915\u0940 \u0916\u094b\u091c \u0915\u0940 \u0925\u0940 \u090f\u0915 \u0932\u0949\u0917\u0911\u0928 \u092a\u0943\u0937\u094d\u0920 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u091d\u0902\u0921\u0940 \u0926\u093f\u0916\u093e\u0915\u0930 \u0930\u0935\u093e\u0928\u093e \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0925\u093e\u0964
ascanbeta.sessionidexposedinurl.desc = A session id is exposed in the URL. By sharing such a website URL (containing the session id), a naive user may be inadvertently granting access to their data, compromising its confidentiality, integrity, and availability.  URLs containing the session identifier also appear in web browser bookmarks, web server log files, and proxy server log files. 
#Exposed Session Id messages
ascanbeta.sessionidexposedinurl.name = \u0909\u091c\u093e\u0917\u0930 \u0938\u0924\u094d\u0930 ID
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidexposedinurl.refs = https\://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A2-Broken_Authentication
ascanbeta.sessionidexposedinurl.soln = \u090f\u0915 \u0905\u0927\u093f\u0915 \u0938\u0941\u0930\u0915\u094d\u0937\u093f\u0924 \u0938\u0924\u094d\u0930 \u092a\u094d\u0930\u092c\u0902\u0927\u0928 \u0915\u093e\u0930\u094d\u092f\u093e\u0928\u094d\u0935\u092f\u0928, \u091c\u0948\u0938\u0947 \u0915\u093f \u0938\u0924\u094d\u0930 \u0915\u0941\u0915\u0940\u091c\u093c \u091c\u094b \u0930\u0942\u092a \u092e\u0947\u0902 \u0906\u0938\u093e\u0928\u0940 \u0938\u0947 \u0905\u0928\u091c\u093e\u0928\u0947 \u0938\u093e\u091d\u093e \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902 \u0928\u0939\u0940\u0902 \u0939\u0948, \u0914\u0930 \u091c\u094b \u0938\u0930\u094d\u0935\u0930 \u0932\u0949\u0917 \u092b\u093e\u0907\u0932 \u092f\u093e \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u092c\u0941\u0915\u092e\u093e\u0930\u094d\u0915\u094d\u0938 \u092e\u0947\u0902 \u0938\u093e\u092e\u093e\u0928\u094d\u092f\u0924\u092f\u093e \u092a\u094d\u0930\u0915\u091f \u0928\u0939\u0940\u0902 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902, \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u093e \u0939\u0948 \u090f\u0915 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902\u0964

ascanbeta.sessionidsentinsecurely.alert.attack = {0} \u0915\u094d\u0937\u0947\u0924\u094d\u0930\: [{1}]
ascanbeta.sessionidsentinsecurely.alert.extrainfo = session identifier {0} field [{1}], value [{2}] may be sent via an insecure mechanism.  
ascanbeta.sessionidsentinsecurely.alert.extrainfo.loginpage = Url \u092a\u0930 \u091c\u094b \u092e\u0941\u0926\u094d\u0926\u0947 \u0915\u0940 \u0916\u094b\u091c \u0915\u0940 \u0925\u0940 \u090f\u0915 \u0932\u0949\u0917\u0911\u0928 \u092a\u0943\u0937\u094d\u0920 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u091d\u0902\u0921\u0940 \u0926\u093f\u0916\u093e\u0915\u0930 \u0930\u0935\u093e\u0928\u093e \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0925\u093e\u0964
ascanbeta.sessionidsentinsecurely.alert.extrainfo.secureflagnotset = The 'secure' flag was not set on the session cookie supplied by the server.
ascanbeta.sessionidsentinsecurely.desc = A session id may be sent via an insecure mechanism. In the case of a cookie sent in the request, this occurs when HTTP, rather than HTTPS, is used.  In the case of a cookie sent by the server in response (when the URL is modified by setting the named parameter field to NULL), the 'secure' flag is not set, allowing the cookie to be sent later via HTTP rather than via HTTPS. This may allow a passive eavesdropper on the network path to gain full access to the victim's session.  
#Session Id Cookie not sent securely
ascanbeta.sessionidsentinsecurely.name = Session ID Transmitted Insecurely
#these refs cannot be referenced, but we leave it here in the hope that it can be in the future..
ascanbeta.sessionidsentinsecurely.refs = https\://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A2-Broken_Authentication
ascanbeta.sessionidsentinsecurely.soln = 1) Use the latest available version of SSL/TLS (for HTTPS) for all pages where a session id is communicated between the browser and the web server.\n2) Do not allow the communication to be forced down to the unencrypted HTTP protocol.\n3) Use the 'secure' flag when setting a cookie containing a session id, to prevent its subsequent transmission by an insecure mechanism.\n4) Forward non-secure HTTP page requests to the secure HTTPS equivalent page.  

ascanbeta.shellshock.desc = \u0938\u0930\u094d\u0935\u0930 \u0926\u0942\u0930\u0938\u094d\u0925 \u0939\u092e\u0932\u093e\u0935\u0930\u094b\u0902 \u092a\u0930 \u0938\u094d\u0935\u0948\u091a\u094d\u091b\u093f\u0915 \u0915\u094b\u0921 \u0915\u094b \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948 \u092a\u093e\u0930\u094d\u091f\u0940 \u0915\u0940 \u092f\u094b\u091c\u0928\u093e \u092c\u0928\u093e\u0908 \u0916\u094b\u0932 \u0915\u0947 \u0915\u093f\u0938\u0940 \u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u091a\u0932 \u0930\u0939\u093e \u0939\u0948 
ascanbeta.shellshock.extrainfo = CVE-2014-6271 \u0938\u0947\: \u0917\u094d\u0928\u0942 Bash 4.3 \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0924\u093e\u0930 \u0915\u0947 \u092a\u0940\u091b\u0947 \u091a\u0932 \u0938\u092e\u093e\u0930\u094b\u0939 \u092a\u0930\u093f\u092d\u093e\u0937\u093e\u090f\u0901 \u092a\u0930\u093f\u0935\u0947\u0936 \u091a\u0930, \u0915\u0947 \u092c\u093e\u0926 \u092e\u0942\u0932\u094d\u092f\u094b\u0902 \u092e\u0947\u0902 \u091c\u094b \u0935\u0948\u0915\u094d\u091f\u0930 OpenSSH sshd, mod_cgi \u0914\u0930 mod_cgid \u092e\u0947\u0902 \u092e\u0949\u0921\u094d\u092f\u0942\u0932 \u0915\u094b Apache HTTP \u0938\u0930\u094d\u0935\u0930, \u0905\u0928\u093f\u0930\u094d\u0926\u093f\u0937\u094d\u091f DHCP \u0915\u094d\u0932\u093e\u0907\u0902\u091f, \u0914\u0930 \u0905\u0928\u094d\u092f \u0938\u094d\u0925\u093f\u0924\u093f\u092f\u094b\u0902 \u092e\u0947\u0902 \u091c\u094b \u0938\u0947\u091f\u093f\u0902\u0917 \u092a\u0930\u094d\u092f\u093e\u0935\u0930\u0923 Bash \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 \u0938\u0947 \u090f\u0915 \u0935\u093f\u0936\u0947\u0937\u093e\u0927\u093f\u0915\u093e\u0930 \u0938\u0940\u092e\u093e \u092a\u093e\u0930 \u0939\u094b\u0924\u0940 \u0939\u0948 \u0926\u094d\u0935\u093e\u0930\u093e \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0932\u093f\u092a\u093f\u092f\u094b\u0902 \u092e\u0947\u0902 ForceCommand \u0938\u0941\u0935\u093f\u0927\u093e \u0915\u094b \u0936\u093e\u092e\u093f\u0932 \u0915\u0930\u0915\u0947 \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u0928 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0926\u0942\u0930\u0938\u094d\u0925 \u0939\u092e\u0932\u093e\u0935\u0930\u094b\u0902 \u090f\u0915 \u0917\u0922\u093c\u0940 \u0917\u0908 \u092a\u0930\u094d\u092f\u093e\u0935\u0930\u0923 \u0915\u0947 \u091c\u0930\u093f\u090f \u092e\u0928\u092e\u093e\u0928\u093e \u0915\u094b\u0921 \u0915\u094b \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948 \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930\u0924\u093e \u0939\u0948, \u0909\u0930\u094d\u092b "ShellShock." \u0928\u094b\u091f\: \u0907\u0938 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u0947 \u092e\u0942\u0932 \u0928\u093f\u0926\u093e\u0928 \u0917\u0932\u0924 \u0925\u093e; CVE-2014-7169 \u0917\u093c\u0932\u0924 \u0924\u092f \u0915\u0930\u0928\u0947 \u0915\u0947 \u092c\u093e\u0926 \u0905\u092d\u0940 \u092d\u0940 \u092e\u094c\u091c\u0942\u0926 \u0939\u0948 \u0907\u0938 \u092d\u0947\u0926\u094d\u092f\u0924\u093e \u0915\u094b \u0915\u0935\u0930 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0938\u093e\u0907\u0928 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\u0964
ascanbeta.shellshock.name = \u0930\u093f\u092e\u094b\u091f \u0915\u094b\u0921 \u0915\u093e \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 - \u0936\u0947\u0932 \u0936\u0949\u0915
ascanbeta.shellshock.ref = https\://nvd.nist.gov/vuln/detail/CVE-2014-6271\nhttps\://www.troyhunt.com/everything-you-need-to-know-about2/
ascanbeta.shellshock.soln = \u092a\u093e\u0930\u094d\u091f\u0940 \u0915\u0940 \u092f\u094b\u091c\u0928\u093e \u092c\u0928\u093e\u0908 \u0915\u093e \u0928\u0935\u0940\u0928\u0924\u092e \u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u0915\u094b \u0938\u0930\u094d\u0935\u0930 \u092a\u0930 \u0905\u0926\u094d\u092f\u0924\u0928
ascanbeta.shellshock.timingbased.evidence = \u0939\u092e\u0932\u0947 \u0915\u093e \u0909\u092a\u092f\u094b\u0917, [{0}] \u092e\u093f\u0932\u0940\u0938\u0947\u0915\u0947\u0902\u0921\u094b\u0902 \u0915\u0940 \u090f\u0915 \u0935\u093f\u0932\u0902\u092c \u092a\u094d\u0930\u0947\u0930\u093f\u0924 \u092a\u093e\u092f\u093e \u0917\u092f\u093e \u0914\u0930 \u0925\u093e

ascanbeta.sourcecodedisclosure.desc = The source code for the current page was disclosed by the web server.
ascanbeta.sourcecodedisclosure.gitbased.evidence = The source code for [{0}] was extracted using [{1}]
ascanbeta.sourcecodedisclosure.gitbased.name = Source Code Disclosure - Git 
ascanbeta.sourcecodedisclosure.gitbased.soln = Ensure that Git metadata files are not deployed to the web server or application server
ascanbeta.sourcecodedisclosure.lfibased.extrainfo = The output for the source code filename [{0}] differs sufficiently from that of the random parameter [{1}], at [{2}%], compared to a threshold of [{3}%]
ascanbeta.sourcecodedisclosure.lfibased.name = Source Code Disclosure - File Inclusion
ascanbeta.sourcecodedisclosure.svnbased.extrainfo = [{0}] \u0915\u0947 \u0932\u093f\u090f \u0938\u094d\u0930\u094b\u0924 \u0915\u094b\u0921 [{1}] \u092a\u0930 \u092a\u093e\u092f\u093e \u0917\u092f\u093e \u0925\u093e
ascanbeta.sourcecodedisclosure.svnbased.name = \u0938\u094d\u0930\u094b\u0924 \u0915\u094b\u0921 \u092a\u094d\u0930\u0915\u091f\u0940\u0915\u0930\u0923 - SVN
ascanbeta.sourcecodedisclosure.svnbased.soln = \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0947\u0902 \u0915\u093f Git \u092e\u0947\u091f\u093e\u0921\u0947\u091f\u093e \u092b\u093c\u093e\u0907\u0932\u0947\u0902 \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u092f\u093e \u0938\u0930\u094d\u0935\u0930 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0915\u0947 \u0932\u093f\u090f \u0924\u0948\u0928\u093e\u0924 \u0928\u0939\u0940\u0902 \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902

ascanbeta.sourcecodedisclosurecve-2012-1823.desc = \u0915\u094d\u0935\u0947\u0930\u0940 \u0924\u093e\u0930 \u0915\u093f PHP \u0938\u094d\u0930\u094b\u0924 \u0915\u094b\u0921 \u092a\u094d\u0930\u0915\u091f\u0940\u0915\u0930\u0923, \u0914\u0930 \u092e\u0928\u092e\u093e\u0928\u093e \u0915\u094b\u0921 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 \u0915\u094b \u0938\u0915\u094d\u0937\u092e \u0915\u0930\u0928\u0947 \u0915\u0947 \u090f\u0915 unescaped "\=" \u0935\u0930\u094d\u0923, \u0915\u092e\u0940 \u0915\u0941\u091b PHP \u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u0939\u0948, \u091c\u092c CGI, \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u091a\u0932\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0938\u0939\u0940 \u0924\u0930\u0940\u0915\u0947 \u0938\u0947 \u0939\u0948\u0902\u0921\u0932 \u0928\u0939\u0940\u0902\u0964 \u0907\u0938 \u092e\u093e\u092e\u0932\u0947 \u092e\u0947\u0902, PHP \u092b\u093c\u093e\u0907\u0932 \u0915\u0940 \u0938\u093e\u092e\u0917\u094d\u0930\u0940 \u0938\u0940\u0927\u0947 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0915\u0947 \u0932\u093f\u090f \u0938\u0947\u0935\u093e \u0915\u0940 \u0925\u0947\u0964 \u0939\u093e\u0932\u093e\u0902\u0915\u093f \u092f\u0939 \u092d\u0940 \u0939\u094b \u0938\u0915\u0924\u0940 \u0939\u0948 \u0938\u0940\u0927\u0940 HTML \u0907\u0938 \u0906\u0909\u091f\u092a\u0941\u091f \u092e\u0947\u0902 \u0906\u092e\u0924\u094c\u0930 \u092a\u0930 PHP, \u0936\u093e\u092e\u093f\u0932 \u0939\u094b\u0902\u0917\u0947\u0964
ascanbeta.sourcecodedisclosurecve-2012-1823.name = \u0938\u094d\u0930\u094b\u0924 \u0915\u094b\u0921 \u092a\u094d\u0930\u0915\u091f\u0940\u0915\u0930\u0923 - CVE-2012-1823
ascanbeta.sourcecodedisclosurecve-2012-1823.soln = PHP \u0915\u093e \u0928\u0935\u0940\u0928\u0924\u092e \u0938\u094d\u0925\u093f\u0930 \u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u0915\u0947 \u0932\u093f\u090f \u0928\u0935\u0940\u0928\u0940\u0915\u0930\u0923, \u092f\u093e \u0926\u0941\u0930\u094d\u092d\u093e\u0935\u0928\u093e\u092a\u0942\u0930\u094d\u0923 \u0905\u0928\u0941\u0930\u094b\u0927\u094b\u0902 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u0947 "RewriteCond" \u0914\u0930 "RewriteRule" \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u092c\u093e\u0939\u0930 \u092b\u093c\u093f\u0932\u094d\u091f\u0930 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f Apache \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0914\u0930 mod_rewrite \u092e\u0949\u0921\u094d\u092f\u0942\u0932 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902\u0964

ascanbeta.ssrf.desc = The web server receives a remote address and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.
ascanbeta.ssrf.name = Server Side Request Forgery
ascanbeta.ssrf.otherinfo.canaryinbody = The canary token from the out-of-band service was found in the response body.
ascanbeta.ssrf.refs = https\://cheatsheetseries.owasp.org/cheatsheets/Server_Side_Request_Forgery_Prevention_Cheat_Sheet.html
ascanbeta.ssrf.skipped = no Active Scan OAST service is selected.
ascanbeta.ssrf.soln = Do not accept remote addresses as request parameters, and if you must, ensure that they are validated against an allow-list of expected values.

ascanbeta.text4shell.desc = Apache Commons Text prior to 1.10.0 allows RCE when applied to untrusted input due to insecure interpolation defaults.Apache Commons Text performs variable interpolation, allowing properties to be dynamically evaluated and expanded.The application has been shown to initial contact with remote servers via variable interpolation and may well be vulnerable to Remote Code Execution (RCE).
ascanbeta.text4shell.name = Text4shell (CVE-2022-42889)
ascanbeta.text4shell.refs = https\://nvd.nist.gov/vuln/detail/CVE-2022-42889\nhttps\://securitylab.github.com/advisories/GHSL-2022-018_Apache_Commons_Text/
ascanbeta.text4shell.skipped = no Active Scan OAST service is selected.
ascanbeta.text4shell.soln = Upgrade Apache Commons Text prior to version 1.10.0 or newer.

ascanbeta.usernameenumeration.alert.attack = Manipulate [{0}] field\: [{1}] and monitor the output 
ascanbeta.usernameenumeration.alert.extrainfo = [{0}] parameter [{1}] leaks information on whether a user exists. The [{5}] differences in output, for the valid original username value [{2}], and invalid username value [{3}] are\:\n[{4}]
ascanbeta.usernameenumeration.desc = It may be possible to enumerate usernames, based on differing HTTP responses when valid and invalid usernames are provided. This would greatly increase the probability of success of password brute-forcing attacks against the system. Note that false positives may sometimes be minimised by increasing the 'Attack Strength' Option in ZAP.  Please manually check the 'Other Info' field to confirm if this is actually an issue. 
ascanbeta.usernameenumeration.name = Possible Username Enumeration
ascanbeta.usernameenumeration.refs = https\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/03-Identity_Management_Testing/04-Testing_for_Account_Enumeration_and_Guessable_User_Account.html\nhttps\://dl.ifip.org/db/conf/sec/sec2011/FreilingS11.pdf\nhttps\://cwe.mitre.org/data/definitions/204.html
ascanbeta.usernameenumeration.soln = Do not divulge details of whether a username is valid or invalid. In particular, for unsuccessful login attempts, do not differentiate between an invalid user and an invalid password in the error message, page title, page contents, HTTP headers, or redirection logic.


pscanrules.desc = Pasif Tarama Kurallar\u0131

pscanrules.payloader.desc=Provides support for custom payloads in scan rules.
pscanrules.payloader.name=Passive Scan Rules Release Custom Payloads

pscanrules.authenticationcredentialscaptured.name=Do\u011frulama Kimlik Bilgileri Yakalanan
pscanrules.authenticationcredentialscaptured.desc=An insecure authentication mechanism is in use. This allows an attacker on the network access to the userid and password of the authenticated user. For Basic Authentication, the attacker must merely monitor the network traffic until a Basic Authentication request is received, and then base64 decode the username and password.  For Digest Authentication, the attacker has access to the username, and possibly also the password, if the hash (including a nonce) can be successfully cracked, or if a Man-In-The-Middle attack is mounted.\nThe attacker eavesdrops on the network until an authentication has completed.
pscanrules.authenticationcredentialscaptured.soln=HTTPS kullan\u0131n ve un-\u015fifreli bi\u00e7imde kimli\u011fi veya \u015fifre iletmez g\u00fcvenli bir kimlik do\u011frulama mekanizmas\u0131 kullan\u0131n. Bu \u00f6nemsiz \u015fa\u015f\u0131rtmaca mekanizmas\u0131 kolayca bozuldu \u00e7\u00fcnk\u00fc \u00d6zellikle, Temel Kimlik Do\u011frulama mekanizmas\u0131n\u0131n kullan\u0131m\u0131n\u0131 \u00f6nlemek. 
pscanrules.authenticationcredentialscaptured.refs=https\://owasp.org/www-community/attacks/Brute_force_attack\nhttp\://en.wikipedia.org/wiki/Digest_access_authentication
pscanrules.authenticationcredentialscaptured.alert.basicauth.extrainfo=[ {0} ] [ {1} ] g\u00fcvensiz kimlik do\u011frulama mekanizmas\u0131 kullan\u0131r [ {2} ], ad\u0131n\u0131 if\u015fa [ {3} ] ve \u015fifre [ {4} ].
pscanrules.authenticationcredentialscaptured.alert.digestauth.extrainfo=[ {0} ] [ {1} ] g\u00fcvensiz kimlik do\u011frulama mekanizmas\u0131 kullan\u0131r [ {2} ], ad\u0131n\u0131 if\u015fa [ {3} ] ve ek bilgiler [ {4} ].

pscanrules.charsetmismatch.variant.no_mismatch_metacontenttype_missing=(Meta \u0130\u00e7erik T\u00fcr\u00fc Karakter K\u00fcmesi Eksik)
pscanrules.charsetmismatch.name=Karakter uyu\u015fmazl\u0131\u011f\u0131
pscanrules.charsetmismatch.variant.header_metacontentype_mismatch=(Ba\u015fl\u0131\u011fa Kar\u015f\u0131 Meta \u0130\u00e7erik T\u00fcr\u00fc Karakter K\u00fcmesi)
pscanrules.charsetmismatch.variant.header_metacharset_mismatch=(Ba\u015fl\u0131\u011fa Kar\u015f\u0131 Meta Karakter K\u00fcmesi)
pscanrules.charsetmismatch.variant.metacontenttype_metacharset_mismatch=(Meta Karakter K\u00fcmesine Kar\u015f\u0131 Meta \u0130\u00e7erik T\u00fcr\u00fc Karakter K\u00fcmesi)
pscanrules.charsetmismatch.desc=This check identifies responses where the HTTP Content-Type header declares a charset different from the charset defined by the body of the HTML or XML. When there's a charset mismatch between the HTTP header and content body Web browsers can be forced into an undesirable content-sniffing mode to determine the content's correct character set.\n\nAn attacker could manipulate content on the page to be interpreted in an encoding of their choice. For example, if an attacker can control content at the beginning of the page, they could inject script using UTF-7 encoded text and manipulate some browsers into interpreting that text.
pscanrules.charsetmismatch.soln=Kuvvet UTF-8 XML HTTP ba\u015fl\u0131k ve meta etiketleri hem veya kodlama beyanlar t\u00fcm metin i\u00e7erik i\u00e7in.
pscanrules.charsetmismatch.refs=http\://code.google.com/p/browsersec/wiki/Part2\#Character_set_handling_and_detection
pscanrules.charsetmismatch.extrainfo.html.no_mismatch_metacontenttype_missing=Karakter k\u00fcmesi yaln\u0131zca META karakter setiyle tan\u0131mlan\u0131r, META i\u00e7erik t\u00fcr\u00fc taraf\u0131ndan tan\u0131mlanacak karakter k\u00fcmesini bekleyen daha eski istemciler bu i\u00e7eri\u011fi do\u011fru \u015fekilde g\u00f6r\u00fcnt\u00fcleyemez.
pscanrules.charsetmismatch.extrainfo.html.header_metacontentype_mismatch=HTTP \u00dcstbilgisi ile META i\u00e7erik t\u00fcr\u00fc kodlama bildirimleri aras\u0131nda bir karakter k\u00fcmesi uyumsuzlu\u011fu vard\u0131\: [{0}] ve [{1}] e\u015fle\u015fmiyor.
pscanrules.charsetmismatch.extrainfo.html.header_metacharset_mismatch=HTTP \u00dcstbilgisi ile META karakter k\u00fcmesi kodlama bildirimleri aras\u0131nda bir karakter k\u00fcmesi uyumsuzlu\u011fu vard\u0131\: [{0}] ve [{1}] e\u015fle\u015fmiyor.
pscanrules.charsetmismatch.extrainfo.html.metacontenttype_metacharset_mismatch=META i\u00e7erik t\u00fcr\u00fc ile META karakter k\u00fcmesi kodlama bildirimleri aras\u0131nda bir karakter k\u00fcmesi uyumsuzlu\u011fu vard\u0131\: [{0}] ve [{1}] e\u015fle\u015fmiyor.
pscanrules.charsetmismatch.extrainfo.xml=HTTP \u00dcstbilgi ve XML kodlama bildirimi aras\u0131nda bir charset uyumsuzlu\u011fu vard\u0131\: [ {0} ] ve [ {1} ] uyu\u015fmuyor.

pscanrules.cookiesamesite.name = Cookie without SameSite Attribute
pscanrules.cookiesamesite.none.name = Cookie with SameSite Attribute None
pscanrules.cookiesamesite.desc=Bir \u00e7erez, SameSite \u00f6zniteli\u011fi olmadan ayarlan\u0131r; bu, \u00e7erezin bir "site \u00e7ap\u0131nda" talep sonucunda g\u00f6nderilebilece\u011fi anlam\u0131na gelir. SameSite \u00f6zniteli\u011fi, siteler aras\u0131 iste\u011fi sahtekarl\u0131k, site \u00e7ap\u0131nda komut dosyas\u0131 dahil etme ve zamanlama sald\u0131r\u0131lar\u0131 i\u00e7in etkili bir kar\u015f\u0131 \u00f6nlemdir.
pscanrules.cookiesamesite.none.desc=A cookie has been set with its SameSite attribute set to "none", which means that the cookie can be sent as a result of a 'cross-site' request. \nThe SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.
pscanrules.cookiesamesite.badval.name = Cookie with Invalid SameSite Attribute
pscanrules.cookiesamesite.badval.desc=Bir \u00e7erez ge\u00e7ersiz bir SameSite \u00f6znitelik de\u011feri ile ayarland\u0131; bu, \u00e7erezin bir "site \u00e7ap\u0131nda" talep sonucu g\u00f6nderilebilece\u011fi anlam\u0131na geliyor. SameSite \u00f6zniteli\u011fi, siteler aras\u0131 iste\u011fi sahtekarl\u0131k, site \u00e7ap\u0131nda komut dosyas\u0131 dahil etme ve zamanlama sald\u0131r\u0131lar\u0131 i\u00e7in etkili bir kar\u015f\u0131 \u00f6nlemdir.
pscanrules.cookiesamesite.soln=SameSite \u00f6zniteli\u011finin t\u00fcm \u00e7erezler i\u00e7in 'gev\u015fek' veya ideal olarak 'kat\u0131' olarak ayarland\u0131\u011f\u0131ndan emin olun.
pscanrules.cookiesamesite.refs=https\://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site

pscanrules.crossdomain.name=Etki Alanlar\u0131 Aras\u0131 yanl\u0131\u015f yap\u0131land\u0131r\u0131lmas\u0131
pscanrules.crossdomain.desc=Etki Alanlar\u0131 Aras\u0131 yanl\u0131\u015f yap\u0131land\u0131r\u0131lmas\u0131
pscanrules.crossdomain.soln=Bu hassas veriler kimli\u011fi do\u011frulanmam\u0131\u015f bir \u015fekilde (\u00f6rne\u011fin, IP adresi, beyaz-liste kullanarak) mevcut olmad\u0131\u011f\u0131ndan emin olun. Etki daha k\u0131s\u0131tlay\u0131c\u0131 dizi "Eri\u015fim Kontrol-izin-K\u00f6keni" HTTP ba\u015fl\u0131\u011f\u0131n\u0131 yap\u0131land\u0131rma ya da web taray\u0131c\u0131s\u0131 daha k\u0131s\u0131tlay\u0131c\u0131 bir \u015fekilde ayn\u0131 K\u00f6keni Politikas\u0131 (SOP) uygulamak i\u00e7in izin, tamamen t\u00fcm CORS ba\u015fl\u0131klar\u0131n\u0131 \u00e7\u0131kar\u0131n.
pscanrules.crossdomain.refs=http\://www.hpenterprisesecurity.com/vulncat/en/vulncat/vb/html5_overly_permissive_cors_policy.html
pscanrules.crossdomain.extrainfo=Web sunucusu \u00fczerinde CORS yanl\u0131\u015f yap\u0131land\u0131rma etki alanlar\u0131 aras\u0131 bu etki kimli\u011fi do\u011frulanmam\u0131\u015f API'leri kullanarak keyfi \u00fc\u00e7\u00fcnc\u00fc taraf etki alanlar\u0131ndan istekleri, okuma verir. Web taray\u0131c\u0131s\u0131 uygulamalar\u0131, ancak kimli\u011fi do\u011frulanm\u0131\u015f API'ler yan\u0131t\u0131 okumak i\u00e7in keyfi \u00fc\u00e7\u00fcnc\u00fc taraflar\u0131n izin vermez. Bu biraz riskini azalt\u0131r. Bu yanl\u0131\u015f yap\u0131land\u0131rma do\u011frulanmam\u0131\u015f bir \u015fekilde kullan\u0131labilir verilere eri\u015fmek i\u00e7in bir sald\u0131rgan taraf\u0131ndan kullan\u0131labilir, ancak hangi IP adresinin beyaz liste olarak, g\u00fcvenlik di\u011fer baz\u0131 form kullan\u0131r.

pscanrules.cookielooselyscoped.name=Gev\u015fek Scoped \u00c7erez
pscanrules.cookielooselyscoped.desc=\u00c7erezler etki alan\u0131 veya yolu ile kapsaml\u0131 edilebilir. Bu onay, bir \u00e7erez uygulanan etki scope.The alan\u0131 kapsam\u0131 ile sadece endi\u015fe etki eri\u015febilir belirler. \u00d6rne\u011fin, bir \u00e7erez bir alt \u00f6rn www.nottrusted.com veya gev\u015fek bir \u00fcst etki, \u00f6rne\u011fin nottrusted.com i\u00e7in kapsaml\u0131 kesinlikle kapsaml\u0131 olabilir. Bu durumda, herhangi bir alt etki alan\u0131 nottrusted.com tan\u0131mlama eri\u015febilir. Gev\u015fek kapsaml\u0131 \u00e7erezler google.com ve live.com gibi mega-uygulamalar yayg\u0131nd\u0131r.
pscanrules.cookielooselyscoped.soln=Bir FQDN (Tam Etki Alan\u0131 Ad\u0131) Her zaman kapsam tan\u0131mlama.
pscanrules.cookielooselyscoped.refs=https\://tools.ietf.org/html/rfc6265\#section-4.1\nhttps\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttp\://code.google.com/p/browsersec/wiki/Part2\#Same-origin_policy_for_cookies
pscanrules.cookielooselyscoped.extrainfo=Kar\u015f\u0131la\u015ft\u0131rma i\u00e7in kullan\u0131lan men\u015fe alan\u0131 oldu\: {0} {1} \n\n
pscanrules.cookielooselyscoped.extrainfo.cookie={0}\n

pscanrules.informationdisclosuredebugerrors.name=Bilginin A\u00e7\u0131\u011fa \u00c7\u0131kmas\u0131 - Hata Mesajlar\u0131 Hata Ay\u0131klama
pscanrules.informationdisclosuredebugerrors.desc=Yan\u0131t, ASP.NET gibi platformlar taraf\u0131ndan d\u00f6nd\u00fcr\u00fclen genel hata iletilerini ve IIS ve Apache gibi Web sunucular\u0131n\u0131 i\u00e7eriyor gibi g\u00f6r\u00fcn\u00fcyor. S\u0131k kullan\u0131lan hata ay\u0131klama mesajlar\u0131n\u0131n bir listesini yap\u0131land\u0131rabilirsiniz.
pscanrules.informationdisclosuredebugerrors.soln=\u00dcretmeye ge\u00e7meden \u00f6nce hata ay\u0131klama mesajlar\u0131n\u0131 devre d\u0131\u015f\u0131 b\u0131rak\u0131n.

pscanrules.informationdisclosureinurl.name=Information Disclosure - Sensitive Information in URL
pscanrules.informationdisclosureinurl.desc=\u0130ste\u011fin, URL'de s\u0131zd\u0131r\u0131lm\u0131\u015f hassas bilgileri i\u00e7erdi\u011fi g\u00f6r\u00fcld\u00fc. Bu, PCI ve \u00e7o\u011fu kurulu\u015f uyum politikas\u0131n\u0131 ihlal edebilir. Ortam\u0131n\u0131za \u00f6zg\u00fc de\u011ferleri eklemek veya kald\u0131rmak i\u00e7in bu denetimin dizelerinin listesini yap\u0131land\u0131rabilirsiniz.
pscanrules.informationdisclosureinurl.otherinfo.sensitiveinfo=The URL contains potentially sensitive information. The following string was found via the pattern\: {0}\n{1}
pscanrules.informationdisclosureinurl.otherinfo.cc=URL, kredi kart\u0131 bilgileri i\u00e7eriyor gibi g\u00f6r\u00fcn\u00fcyor.
pscanrules.informationdisclosureinurl.otherinfo.email=URL eposta adresi(ler) i\u00e7eriyor.
pscanrules.informationdisclosureinurl.otherinfo.ssn=URL, ABD Sosyal G\u00fcvenlik Numaras\u0131(lar\u0131) i\u00e7eriyor gibi g\u00f6r\u00fcn\u00fcyor
pscanrules.informationdisclosureinurl.soln=Hassas bilgileri URL'lerde ge\u00e7irmeyin.

pscanrules.informationdisclosurereferrer.name=Bilginin A\u00e7\u0131\u011fa \u00c7\u0131kmas\u0131 - HTTP Y\u00f6nlendirme Ba\u015fl\u0131\u011f\u0131nda Hassas Bilgiler
pscanrules.informationdisclosurereferrer.desc=HTTP ba\u015fl\u0131\u011f\u0131, potansiyel hassas bir parametreyi ba\u015fka bir alana s\u0131zd\u0131rm\u0131\u015f olabilir. Bu, PCI ve \u00e7o\u011fu kurulu\u015f uyum politikas\u0131n\u0131 ihlal edebilir. Ortam\u0131n\u0131za \u00f6zg\u00fc de\u011ferleri eklemek veya kald\u0131rmak i\u00e7in bu denetimin dizelerinin listesini yap\u0131land\u0131rabilirsiniz.
pscanrules.informationdisclosurereferrer.otherinfo.sensitiveinfo=HTTP y\u00f6nlendiren ba\u015fl\u0131k alan\u0131ndaki URL, hassas bilgiler i\u00e7eriyor gibi g\u00f6r\u00fcn\u00fcyor.
pscanrules.informationdisclosurereferrer.otherinfo.cc=HTTP y\u00f6nlendiren ba\u015fl\u0131k alan\u0131ndaki URL, kredi kart\u0131 bilgileri i\u00e7eriyor gibi g\u00f6r\u00fcn\u00fcyor.
pscanrules.informationdisclosurereferrer.otherinfo.email=HTTP y\u00f6nlendiren ba\u015fl\u0131k alan\u0131ndaki URL, e-posta adresi(leri) i\u00e7eriyor.
pscanrules.informationdisclosurereferrer.otherinfo.ssn=HTTP y\u00f6nlendiren ba\u015fl\u0131k alan\u0131ndaki URL, ABD Sosyal G\u00fcvenlik Numaras\u0131(lar\u0131) i\u00e7eriyor gibi g\u00f6r\u00fcn\u00fcyor.
pscanrules.informationdisclosurereferrer.soln=Hassas bilgileri URL'lerde ge\u00e7irmeyin.
pscanrules.informationdisclosurereferrer.bin.field=Bank Identification Number\:
pscanrules.informationdisclosurereferrer.brand.field=Brand\:
pscanrules.informationdisclosurereferrer.category.field=Category\:
pscanrules.informationdisclosurereferrer.issuer.field=Yay\u0131nc\u0131\:

pscanrules.informationdisclosuresuspiciouscomments.name=Bilginin A\u00e7\u0131\u011fa \u00c7\u0131kmas\u0131 - \u015e\u00fcpheli Yorumlar
pscanrules.informationdisclosuresuspiciouscomments.desc=The response appears to contain suspicious comments which may help an attacker. Note\: Matches made within script blocks or files are against the entire content not only comments.
pscanrules.informationdisclosuresuspiciouscomments.otherinfo=The following pattern was used\: {0} and was detected in the element starting with\: "{1}", see evidence field for the suspicious comment/snippet.
pscanrules.informationdisclosuresuspiciouscomments.otherinfo2=The following pattern was used\: {0} and was detected {2} times, the first in the element starting with\: "{1}", see evidence field for the suspicious comment/snippet.
pscanrules.informationdisclosuresuspiciouscomments.soln=Bir sald\u0131rgana yard\u0131mc\u0131 olabilecek bilgileri d\u00f6nd\u00fcren t\u00fcm yorumlar\u0131 kald\u0131r\u0131n ve alttaki ba\u015fvurulan problemleri d\u00fczeltin.

pscanrules.insecureauthentication.name=Zay\u0131f Kimlik Do\u011frulama Y\u00f6ntemi
pscanrules.insecureauthentication.desc=HTTP Temel ya da \u00f6zet kimlik do\u011frulamas\u0131 g\u00fcvenli olmayan ba\u011flant\u0131 \u00fczerinden kullan\u0131l\u0131r olmu\u015ftur. kimlik okuyun ve sonra a\u011fa eri\u015fimi olan bir ki\u015fi taraf\u0131ndan yeniden kullan\u0131labilir.
pscanrules.insecureauthentication.soln=HTTPS kullanarak ba\u011flant\u0131y\u0131 korumak veya daha g\u00fc\u00e7l\u00fc bir kimlik do\u011frulama mekanizmas\u0131 kullan\u0131n
pscanrules.insecureauthentication.refs=https\://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html

pscanrules.insecurejsfviewstate.name=G\u00fcvensiz JSF ViewState
pscanrules.insecurejsfviewstate.desc=a\u015fa\u011f\u0131daki URL'den yan\u0131t\u0131 yok kriptografik koruma olan bir ViewState de\u011feri i\u00e7erir.
pscanrules.insecurejsfviewstate.soln=Ortam\u0131n\u0131za bir MAC \u00f6zg\u00fc olan G\u00fcvenli viewstate
pscanrules.insecurejsfviewstate.refs=https\://www.trustwave.com/spiderlabs/advisories/TWSL2010-001.txt
pscanrules.insecurejsfviewstate.extrainfo=JSF ViewState [ {0} ] g\u00fcvensiz

pscanrules.noanticsrftokens.name=Anti-CSRF belirte\u00e7leri olmamas\u0131
pscanrules.noanticsrftokens.desc=Hay\u0131r Anti-CSRF belirte\u00e7leri HTML g\u00f6nderme formunda bulundu.
pscanrules.noanticsrftokens.alert.extrainfo=Bilinen Anti-CSRF belirte\u00e7leri {0} a\u015fa\u011f\u0131daki HTML formlar\u0131 bulundu\: {1} .  
pscanrules.noanticsrftokens.extrainfo.annotation=Form, bir anti-CSRF Token'e ihtiya\u00e7 duymad\u0131\u011f\u0131n\u0131 belirten bir g\u00fcvenlik a\u00e7\u0131klamas\u0131 oldu\u011fu i\u00e7in bu bir bilgilendirme uyar\u0131s\u0131d\u0131r. Bu, a\u00e7\u0131klaman\u0131n do\u011fru oldu\u011fundan emin olmak i\u00e7in manuel olarak test edilmelidir.

pscanrules.timestampdisclosure.name=Zaman Damgas\u0131 Bilgilendirme
pscanrules.timestampdisclosure.desc=Bir zaman damgas\u0131 uygulama / web sunucusu taraf\u0131ndan if\u015fa edildi
pscanrules.timestampdisclosure.soln=El ile zaman damgas\u0131 veri duyarl\u0131 olmad\u0131\u011f\u0131n\u0131 ve veri s\u00f6m\u00fcr\u00fclebilir desenleri if\u015fa etmek toplanm\u0131\u015f olamaz teyit etmektedir.
pscanrules.timestampdisclosure.refs=http\://projects.webappsec.org/w/page/13246936/Information%20Leakage
pscanrules.timestampdisclosure.extrainfo={0} , de\u011ferlendirir hangi\: {1}

pscanrules.usernameidor.name = Kullan\u0131c\u0131 Ad\u0131 Anlams\u0131z Bulundu
pscanrules.usernameidor.desc = Yan\u0131tta bir kullan\u0131c\u0131 ad\u0131 sa\u011flanmas\u0131 ({0}) bulundu. Bu, uygulaman\u0131n G\u00fcvensiz Bir Do\u011frudan Nesne Ba\u015fvurusu (IDOR) g\u00fcvenlik a\u00e7\u0131\u011f\u0131 bulundu\u011funu g\u00f6sterebilir. Bu ke\u015ffin suiistimal edilip edilemeyece\u011fini g\u00f6rmek i\u00e7in manuel test gerekecek.
pscanrules.usernameidor.otherinfo = The hash was an {0}, with value\: {1} 
pscanrules.usernameidor.soln = Kullan\u0131c\u0131 veya oturum ba\u015f\u0131na dolayl\u0131 nesne ba\u015fvurular\u0131 kullan\u0131n (kullan\u0131m s\u0131ras\u0131nda ge\u00e7ici bir e\u015fleme olu\u015fturun). Veya do\u011frudan nesne ba\u015fvurusunun her kullan\u0131m\u0131n\u0131n, kullan\u0131c\u0131n\u0131n istenen nesne i\u00e7in yetkili oldu\u011fundan emin olmak i\u00e7in bir yetkilendirme denetimine ba\u011fland\u0131\u011f\u0131ndan emin olun. 
pscanrules.usernameidor.refs = https\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/05-Authorization_Testing/04-Testing_for_Insecure_Direct_Object_References.html

pscanrules.xaspnetversion.name = X-AspNet-Version Response Header
pscanrules.xaspnetversion.desc =  Sunucu "X-AspNet-Version"/"X-AspNetMvc-Version" HTTP cevap ba\u015fl\u0131k alan\u0131 (alanlar\u0131) \u00fczerinden bilgi s\u0131zd\u0131r\u0131yor.
pscanrules.xaspnetversion.soln = Sunucuyu bu \u00fcstbilgileri d\u00f6d\u00fcrmeyecek \u015fekilde yap\u0131land\u0131r\u0131n.
pscanrules.xaspnetversion.extrainfo = Bir sald\u0131rgan, bilinen a\u00e7\u0131klardan faydalanmak i\u00e7in bu bilgiyi kullanabilir.
pscanrules.xaspnetversion.refs = https\://www.troyhunt.com/shhh-dont-let-your-response-headers/\nhttps\://blogs.msdn.microsoft.com/varunm/2013/04/23/remove-unwanted-http-response-headers/

pscanrules.xdebugtoken.name=X-Debug-Token Bilgi S\u0131z\u0131nt\u0131s\u0131
pscanrules.xdebugtoken.desc=Yan\u0131t, X-Debug-Token veya X-Debug-Token-Link ba\u015fl\u0131\u011f\u0131 i\u00e7eriyordu. Bu, Symfony'nin Profiler'\u0131n hassas verilerin kullan\u0131mda oldu\u011funu ve g\u00f6sterildi\u011fini g\u00f6sterir.
pscanrules.xdebugtoken.otherinfo=http\://target_host/_profiler/token_value (\u00f6r\: http\://example.com/_profiler_/123ab4) formundaki bir URL'ye eri\u015ferek, profil sa\u011flay\u0131c\u0131ya ve daha fazla s\u0131zan bilgiye eri\u015fime sahip olabilirsiniz.
pscanrules.xdebugtoken.refs=https\://symfony.com/doc/current/cookbook/profiler/profiling_data.html\nhttps\://symfony.com/blog/new-in-symfony-2-4-quicker-access-to-the-profiler-when-working-on-an-api
pscanrules.xdebugtoken.soln=Limit access to Symfony's Profiler, either via authentication/authorization or limiting inclusion of the header to specific clients (by IP, etc.).

pscanrules.xpoweredbyheaderinfoleak.name=Sunucu "X-Powered-By" \u00fczerinden bilgiler Ka\u00e7aklar HTTP yan\u0131t \u00fcstbilgisi Field (ler)
pscanrules.xpoweredbyheaderinfoleak.desc=Web / uygulama sunucusu, bir veya daha fazla "X-Powered-By" HTTP cevap ba\u015fl\u0131klar\u0131n\u0131n yoluyla bilgi s\u0131zd\u0131r\u0131yor. B\u00f6yle bilgiye eri\u015fim, web uygulamas\u0131 ba\u011f\u0131ml\u0131 olan di\u011fer \u00e7er\u00e7eveler / bile\u015fenleri tan\u0131mlayan sald\u0131rganlar\u0131n kolayla\u015ft\u0131rabilir ve g\u00fcvenlik a\u00e7\u0131klar\u0131 gibi bile\u015fenler tabi olabilir.
pscanrules.xpoweredbyheaderinfoleak.refs=http\://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx http\://www.troyhunt.com/2012/02/shhh-dont -Art\u0131k-your-tepki-headers.html
pscanrules.xpoweredbyheaderinfoleak.soln=Vb web sunucusu, uygulama sunucusu, y\u00fck dengeleyici, "X-Powered-By" ba\u015fl\u0131klar\u0131n\u0131 \u00f6nlemek i\u00e7in yap\u0131land\u0131r\u0131lm\u0131\u015f oldu\u011fundan emin olun.
pscanrules.xpoweredbyheaderinfoleak.extrainfo=
pscanrules.xpoweredbyheaderinfoleak.otherinfo.msg=The following X-Powered-By headers were also found\:\r\n

pscanrules.xframeoptions.name = X-Frame-Options Header
pscanrules.xframeoptions.incInCsp = The Content-Security-Policy does include a 'frame-ancestors' element which takes precedence over the X-Frame-Options header, which is why this has been raised with a LOW risk.  
pscanrules.xframeoptions.missing.name = X-Frame-Options Header Not Set
pscanrules.xframeoptions.missing.desc = X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.
pscanrules.xframeoptions.missing.refs = https\://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
pscanrules.xframeoptions.missing.soln = Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's "frame-ancestors" directive. 
pscanrules.xframeoptions.multiple.header.name = Multiple X-Frame-Options Header Entries
pscanrules.xframeoptions.multiple.header.desc = X-Frame-Options (XFO) headers were found, a response with multiple XFO header entries may not be predictably treated by all user-agents.
pscanrules.xframeoptions.multiple.header.refs = https\://tools.ietf.org/html/rfc7034
pscanrules.xframeoptions.multiple.header.soln = Ensure only a single X-Frame-Options header is present in the response.
pscanrules.xframeoptions.compliance.meta.name = X-Frame-Options Defined via META (Non-compliant with Spec)
pscanrules.xframeoptions.compliance.meta.desc = An X-Frame-Options (XFO) META tag was found, defining XFO via a META tag is explicitly not supported by the spec (RFC 7034).
pscanrules.xframeoptions.compliance.meta.refs = https\://tools.ietf.org/html/rfc7034\#section-4
pscanrules.xframeoptions.compliance.meta.soln = Ensure X-Frame-Options is set via a response header field.  Alternatively consider implementing Content Security Policy's "frame-ancestors" directive.
pscanrules.xframeoptions.compliance.malformed.setting.name = X-Frame-Options Setting Malformed
pscanrules.xframeoptions.compliance.malformed.setting.desc = An X-Frame-Options header was present in the response but the value was not correctly set.
pscanrules.xframeoptions.compliance.malformed.setting.refs = https\://tools.ietf.org/html/rfc7034\#section-2.1
pscanrules.xframeoptions.compliance.malformed.setting.soln = Ensure a valid setting is used on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY.  Alternatively consider implementing Content Security Policy's "frame-ancestors" directive.

pscanrules.xcontenttypeoptions.name = X-Content-Type-Options Header Missing
pscanrules.xcontenttypeoptions.desc = The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.
pscanrules.xcontenttypeoptions.otherinfo = This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt "High" threshold this scan rule will not alert on client or server error responses.
pscanrules.xcontenttypeoptions.refs = http\://msdn.microsoft.com/en-us/library/ie/gg622941%28v\=vs.85%29.aspx\nhttps\://owasp.org/www-community/Security_Headers
pscanrules.xcontenttypeoptions.soln = Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.

pscanrules.applicationerrors.name = Application Error Disclosure
pscanrules.applicationerrors.desc = This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.
pscanrules.applicationerrors.soln = Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.

pscanrules.cachecontrol.name = Incomplete or No Cache-control Header Set
pscanrules.cachecontrol.desc = The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content.
pscanrules.cachecontrol.soln = Whenever possible ensure the cache-control HTTP header is set with no-cache, no-store, must-revalidate.
pscanrules.cachecontrol.refs = https\://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html\#web-content-caching\nhttps\://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control

pscanrules.contenttypemissing.name = Content-Type Header Missing
pscanrules.contenttypemissing.name.empty = Content-Type Header Empty
pscanrules.contenttypemissing.desc = The Content-Type header was either missing or empty.
pscanrules.contenttypemissing.soln=Ensure each page is setting the specific and appropriate content-type value for the content being delivered.
pscanrules.contenttypemissing.refs=http\://msdn.microsoft.com/en-us/library/ie/gg622941%28v\=vs.85%29.aspx

pscanrules.cookiehttponly.name = Cookie No HttpOnly Flag
pscanrules.cookiehttponly.desc=A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.
pscanrules.cookiehttponly.soln=Ensure that the HttpOnly flag is set for all cookies.
pscanrules.cookiehttponly.refs=https\://owasp.org/www-community/HttpOnly

pscanrules.cookiesecureflag.name = Cookie Without Secure Flag
pscanrules.cookiesecureflag.desc=A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.
pscanrules.cookiesecureflag.soln=Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.
pscanrules.cookiesecureflag.refs=https\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html

pscanrules.crossdomainscriptinclusion.name = Cross-Domain JavaScript Source File Inclusion
pscanrules.crossdomainscriptinclusion.desc=The page includes one or more script files from a third-party domain.
pscanrules.crossdomainscriptinclusion.soln=Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.

pscanrules.csp.name=CSP
pscanrules.csp.desc=Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.
pscanrules.csp.desc.extended=\n\nThe directive(s)\: {0} are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything.
pscanrules.csp.refs=http\://www.w3.org/TR/CSP2/\nhttp\://www.w3.org/TR/CSP/\nhttp\://caniuse.com/\#search\=content+security+policy\nhttp\://content-security-policy.com/\nhttps\://github.com/shapesecurity/salvation\nhttps\://developers.google.com/web/fundamentals/security/csp\#policy_applies_to_a_wide_variety_of_resources
pscanrules.csp.soln=Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.
pscanrules.csp.notices.name=Notices
pscanrules.csp.notices.errors=Hatalar\:
pscanrules.csp.notices.warnings=Warnings\:
pscanrules.csp.notices.infoitems=Info Items\:
pscanrules.csp.scriptsrc.unsafe.name=script-src unsafe-inline
pscanrules.csp.scriptsrc.unsafe.desc=script-src includes unsafe-inline.
pscanrules.csp.stylesrc.unsafe.name=style-src unsafe-inline
pscanrules.csp.stylesrc.unsafe.desc=style-src includes unsafe-inline.
pscanrules.csp.wildcard.name=Wildcard Directive
pscanrules.csp.wildcard.desc=The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined\: \n{0}
pscanrules.csp.xcsp.name=X-Content-Security-Policy
pscanrules.csp.xcsp.desc=The header X-Content-Security-Policy was found on this response. While it is a good sign that CSP is implemented to some degree the policy specified in this header has not been analyzed by ZAP. To ensure full support by modern browsers ensure that the Content-Security-Policy header is defined and attached to responses.
pscanrules.csp.xwkcsp.name=X-WebKit-CSP
pscanrules.csp.xwkcsp.desc=The header X-WebKit-CSP was found on this response. While it is a good sign that CSP is implemented to some degree the policy specified in this header has not been analyzed by ZAP. To ensure full support by modern browsers ensure that the Content-Security-Policy header is defined and attached to responses.

pscanrules.mixedcontent.name = Secure Pages Include Mixed Content
pscanrules.mixedcontent.name.inclscripts = Secure Pages Include Mixed Content (Including Scripts)
pscanrules.mixedcontent.desc=The page includes mixed content, that is content accessed via HTTP instead of HTTPS.
pscanrules.mixedcontent.soln=A page that is available over SSL/TLS must be comprised completely of content which is transmitted over SSL/TLS.\nThe page must not contain any content that is transmitted over unencrypted HTTP.\n This includes content from third party sites.
pscanrules.mixedcontent.refs=https\://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html

pscanrules.infoprivateaddressdisclosure.name = Private IP Disclosure
pscanrules.infoprivateaddressdisclosure.desc = A private IP (such as 10.x.x.x, 172.x.x.x, 192.168.x.x) or an Amazon EC2 private hostname (for example, ip-10-0-56-78) has been found in the HTTP response body. This information might be helpful for further attacks targeting internal systems.
pscanrules.infoprivateaddressdisclosure.soln = Remove the private IP address from the HTTP response body.  For comments, use JSP/ASP/PHP comment instead of HTML/JavaScript comment which can be seen by client browsers.
pscanrules.infoprivateaddressdisclosure.refs = https\://tools.ietf.org/html/rfc1918

pscanrules.infosessionidurl.name = Session ID in URL Rewrite
pscanrules.infosessionidurl.desc = URL rewrite is used to track user session ID. The session ID may be disclosed via cross-site referer header. In addition, the session ID might be stored in browser history or server logs.
pscanrules.infosessionidurl.soln = For secure content, put session ID in a cookie. To be even more secure consider using a combination of cookie and URL rewrite.
pscanrules.infosessionidurl.refs = http\://seclists.org/lists/webappsec/2002/Oct-Dec/0111.html
pscanrules.infosessionidurl.referrer.alert = Referer Exposes Session ID
pscanrules.infosessionidurl.referrer.desc = A hyperlink pointing to another host name was found. As session ID URL rewrite is used, it may be disclosed in referer header to external hosts.
pscanrules.infosessionidurl.referrer.soln = This is a risk if the session ID is sensitive and the hyperlink refers to an external or third party host. For secure content, put session ID in secured session cookie.

pscanrules.viewstate.name=Viewstate
pscanrules.viewstate.soln=Sa\u011flanan bilgilerin gizli olmad\u0131\u011f\u0131n\u0131 do\u011frulay\u0131n.
pscanrules.viewstate.oldver.name=Eski Asp.Net S\u00fcr\u00fcm\u00fc Kullan\u0131mda
pscanrules.viewstate.oldver.desc=*** DENEYSEL ***\nBu web sitesi ASP.NET s\u00fcr\u00fcm 1.0 veya 1.1 kullanmakta.\n\n
pscanrules.viewstate.oldver.soln=Me\u015fgul yap\u0131n\u0131n halen Microsoft taraf\u0131ndan desteklendi\u011finden emin olun.
pscanrules.viewstate.nomac.unsure.name=MAC \u0130mzas\u0131 olmayan (G\u00fcvensiz) Viewstate
pscanrules.viewstate.nomac.unsure.desc=*** DENEYSEL ***\nBu web sitesi ASP.NET Viewstate kullan\u0131yor fakat herhangi bir MAC olmadan kullan\u0131yor olabilir.\n\n
pscanrules.viewstate.nomac.unsure.soln=Bu web sitesindeki t\u00fcm sayfalar i\u00e7in MAC ayarland\u0131\u011f\u0131ndan emin olun.
pscanrules.viewstate.nomac.unsure.refs=http\://msdn.microsoft.com/en-us/library/ff649308.aspx
pscanrules.viewstate.nomac.sure.name=MAC \u0130mzas\u0131 olmayan (G\u00fcvenli) Viewstate
pscanrules.viewstate.nomac.sure.desc=*** EXPERIMENTAL ***\nBu web sitesi ASP.NET Viewstate'i kullan\u0131r fakat herhangi bir MAC i\u00e7ermez.\n\n
pscanrules.viewstate.nomac.sure.soln=Bu web sitesindeki t\u00fcm sayfalar i\u00e7in MAC ayarland\u0131\u011f\u0131ndan emin olun.
pscanrules.viewstate.nomac.sure.refs=http\://msdn.microsoft.com/en-us/library/ff649308.aspx
pscanrules.viewstate.split.name=Viewstate'\u0131 Kullan\u0131mda Ay\u0131r
pscanrules.viewstate.split.desc=*** EXPERIMENTAL ***\nBu web sitesi ASP.NET Viewstate'i kullan\u0131r ve de\u011feri birka\u00e7 par\u00e7aya b\u00f6l\u00fcn\u00fcr.\n
pscanrules.viewstate.split.soln=Hi\u00e7biri - bu varsay\u0131lan ayar olmad\u0131\u011f\u0131 i\u00e7in sunucuyu y\u00f6neten ki\u015filer yap\u0131land\u0131rmay\u0131 de\u011fi\u015ftirmi\u015f olabilir.
pscanrules.viewstate.content.email.name=Viewstate'te Bulunan epostalar
pscanrules.viewstate.content.email.desc=A\u015fa\u011f\u0131daki e-postalar\u0131n g\u00f6r\u00fcn\u00fc\u015f alan\u0131nda seri hale getirilmi\u015f oldu\u011fu bulundu\:
pscanrules.viewstate.content.email.pattern.source=Eposta kal\u0131b\u0131 - http\://www.regular-expressions.info/regexbuddy/email.htm
pscanrules.viewstate.content.ip.name=Viewstate i\u00e7inde Bulunan Potansiyel IP Adresleri
pscanrules.viewstate.content.ip.desc=G\u00f6r\u00fcn\u00fcm durumu alan\u0131nda a\u015fa\u011f\u0131daki potansiyel IP adresleri seri hale getirilmi\u015ftir\:
pscanrules.viewstate.content.ip.pattern.source=IP kal\u0131b\u0131 - http\://www.regular-expressions.info/examples.html

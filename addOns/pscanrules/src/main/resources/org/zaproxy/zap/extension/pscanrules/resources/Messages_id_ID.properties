pscanrules.desc = Aturan Pindai Pasif

pscanrules.payloader.desc=Provides support for custom payloads in scan rules.
pscanrules.payloader.name=Passive Scan Rules Release Custom Payloads

pscanrules.authenticationcredentialscaptured.name=Kredensial Otentikasi Ditangkap
pscanrules.authenticationcredentialscaptured.desc=An insecure authentication mechanism is in use. This allows an attacker on the network access to the userid and password of the authenticated user. For Basic Authentication, the attacker must merely monitor the network traffic until a Basic Authentication request is received, and then base64 decode the username and password.  For Digest Authentication, the attacker has access to the username, and possibly also the password, if the hash (including a nonce) can be successfully cracked, or if a Man-In-The-Middle attack is mounted.\nThe attacker eavesdrops on the network until an authentication has completed.
pscanrules.authenticationcredentialscaptured.soln=Gunakan HTTPS, dan gunakan mekanisme otentikasi aman yang tidak mentransmisikan kata sandi pengguna atau kata sandi dengan cara yang tidak dienkripsi. Secara khusus, hindari penggunaan mekanisme Otentikasi Dasar, karena mekanisme obfuscasi sepele ini mudah rusak. 
pscanrules.authenticationcredentialscaptured.refs=https\://owasp.org/www-community/attacks/Brute_force_attack\nhttp\://en.wikipedia.org/wiki/Digest_access_authentication
pscanrules.authenticationcredentialscaptured.alert.basicauth.extrainfo=[{0}] [{1}] menggunakan mekanisme autentikasi yang tidak aman [{2}], mengungkapkan nama pengguna [{3}] dan kata sandi [{4}].
pscanrules.authenticationcredentialscaptured.alert.digestauth.extrainfo=[{0}] [{1}] menggunakan mekanisme autentikasi yang tidak aman [{2}], mengungkapkan nama pengguna [{3}] dan informasi tambahan [{4}].

pscanrules.charsetmismatch.variant.no_mismatch_metacontenttype_missing=(Meta Content-Type Charset Hilang)
pscanrules.charsetmismatch.name=Charset Mismatch
pscanrules.charsetmismatch.variant.header_metacontentype_mismatch=(Header Versus Meta Content-Type Charset)
pscanrules.charsetmismatch.variant.header_metacharset_mismatch=(Header Versus Meta Charset)
pscanrules.charsetmismatch.variant.metacontenttype_metacharset_mismatch=(Meta Charset Versus Meta Content-Type Charset)
pscanrules.charsetmismatch.desc=This check identifies responses where the HTTP Content-Type header declares a charset different from the charset defined by the body of the HTML or XML. When there's a charset mismatch between the HTTP header and content body Web browsers can be forced into an undesirable content-sniffing mode to determine the content's correct character set.\n\nAn attacker could manipulate content on the page to be interpreted in an encoding of their choice. For example, if an attacker can control content at the beginning of the page, they could inject script using UTF-7 encoded text and manipulate some browsers into interpreting that text.
pscanrules.charsetmismatch.soln=Force UTF-8 untuk semua konten teks di kedua header HTTP dan tag meta dalam deklarasi HTML atau pengkodean dalam XML.
pscanrules.charsetmismatch.refs=http\://code.google.com/p/browsersec/wiki/Part2\#Character_set_handling_and_detection
pscanrules.charsetmismatch.extrainfo.html.no_mismatch_metacontenttype_missing=Charset didefinisikan hanya oleh META charset, klien lama yang mengharapkan karakter ditetapkan untuk didefinisikan oleh jenis konten META mungkin tidak menampilkan konten dengan benar.
pscanrules.charsetmismatch.extrainfo.html.header_metacontentype_mismatch=Ada ketidakcocokan charset antara Header HTTP dan dekoder pengkodean konten META\: [{0}] dan [{1}] tidak cocok.
pscanrules.charsetmismatch.extrainfo.html.header_metacharset_mismatch=Ada ketidakcocokan charset antara Header HTTP dan deklarasi pengkodean charset META\: [{0}] dan [{1}] tidak cocok.
pscanrules.charsetmismatch.extrainfo.html.metacontenttype_metacharset_mismatch=Ada ketidakcocokan charset antara META charset dan deklarasi enkoding tipe konten META\: [{0}] dan [{1}] tidak cocok.
pscanrules.charsetmismatch.extrainfo.xml=Ada ketidakcocokan charset antara HTTP Header dan deklarasi pengkodean XML\: [{0}] dan [{1}] tidak cocok.

pscanrules.cookiesamesite.name = Cookie without SameSite Attribute
pscanrules.cookiesamesite.none.name = Cookie with SameSite Attribute None
pscanrules.cookiesamesite.desc=Kuki telah ditetapkan tanpa atribut SameSite, yang berarti cookie tersebut dapat dikirim sebagai hasil permintaan 'permintaan lintas situs'.\nAtribut SameSite adalah ukuran penghitung yang efektif untuk pemalsuan permintaan lintas situs, penyisipan naskah lintas situs, dan serangan waktu.
pscanrules.cookiesamesite.none.desc=A cookie has been set with its SameSite attribute set to "none", which means that the cookie can be sent as a result of a 'cross-site' request. \nThe SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.
pscanrules.cookiesamesite.badval.name = Cookie with Invalid SameSite Attribute
pscanrules.cookiesamesite.badval.desc=Kuki telah ditetapkan dengan nilai atribut SameSite yang tidak valid, yang berarti cookie tersebut dapat dikirim sebagai hasil permintaan 'permintaan lintas situs'.\nAtribut SameSite adalah ukuran penghitung yang efektif untuk pemalsuan permintaan lintas situs, penyisipan naskah lintas situs, dan serangan waktu.
pscanrules.cookiesamesite.soln=Memastikan bahwa perlengkapan SameSite diatur baik 'lemah' atau pilihan yang 'ketat' untuk semua cookie.
pscanrules.cookiesamesite.refs=https\://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site

pscanrules.crossdomain.name=Kesalahan konfigurasi lintas domain
pscanrules.crossdomain.desc=Loading data browser web dimungkinkan, karena kesalahan konfigurasi Cross Origin Resource Sharing (CORS) pada server web
pscanrules.crossdomain.soln=Pastikan data sensitif tidak tersedia dengan cara yang tidak berkepentingan (dengan menggunakan daftar putih alamat IP, misalnya).\nKonfigurasikan tajuk HTTP "Akses Kontrol-Izinkan-Asal" ke kumpulan domain yang lebih ketat, atau hapus semua header CORS sama sekali, untuk memungkinkan browser web menerapkan Same Origin Policy (SOP) dengan cara yang lebih ketat.
pscanrules.crossdomain.refs=http\://www.hpenterprisesecurity.com/vulncat/en/vulncat/vb/html5_overly_permissive_cors_policy.html
pscanrules.crossdomain.extrainfo=Kesalahan konfigurasi CORS pada server web mengizinkan permintaan baca lintas domain dari domain pihak ketiga yang sewenang-wenang, menggunakan API yang tidak diautentikasi pada domain ini. Implementasi browser web tidak mengizinkan pihak ketiga yang sewenang-wenang untuk membaca tanggapan dari API yang diautentikasi. Hal ini mengurangi risikonya. Kesalahan konfigurasi ini dapat digunakan oleh penyerang untuk mengakses data yang tersedia dengan cara yang tidak berkepentingan, namun menggunakan beberapa bentuk keamanan lainnya, seperti daftar putih alamat IP.

pscanrules.cookielooselyscoped.name=Loosely Scoped Cookie
pscanrules.cookielooselyscoped.desc=Cookie bisa di scoped oleh domain atau path. Cek ini hanya berkaitan dengan cakupan domain. Lingkup domain yang diterapkan pada cookie menentukan domain mana yang dapat mengaksesnya. Misalnya, cookie dapat dicolokkan secara ketat ke subdomain mis. www.nottrusted.com, atau dicambuk secara longgar ke domain induk mis. nottrusted.com Dalam kasus terakhir, subdomain dari nottrusted.com dapat mengakses cookie. Kue scoped longgar sering ditemukan di mega-aplikasi seperti google.com dan live.com. Cookie yang ditetapkan dari subdomain seperti app.foo.bar dikirim hanya ke domain itu oleh browser. Namun, cookie yang dicolokkan ke domain tingkat orang tua dapat dikirim ke orang tua, atau subdomain orang tua manapun.
pscanrules.cookielooselyscoped.soln=Selalu keluarkan cookies ke FQDN (Fully Qualified Domain Name).
pscanrules.cookielooselyscoped.refs=https\://tools.ietf.org/html/rfc6265\#section-4.1\nhttps\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttp\://code.google.com/p/browsersec/wiki/Part2\#Same-origin_policy_for_cookies
pscanrules.cookielooselyscoped.extrainfo=Domain asal yang digunakan untuk perbandingan adalah\: \n{0}\n{1}
pscanrules.cookielooselyscoped.extrainfo.cookie={0}\n

pscanrules.informationdisclosuredebugerrors.name=Pengungkapan Informasi - Pesan Kesalahan Debug
pscanrules.informationdisclosuredebugerrors.desc=Respon tersebut tampaknya mengandung pesan kesalahan umum yang dikembalikan oleh platform seperti ASP.NET, dan Web-server seperti IIS dan Apache. Anda dapat mengkonfigurasi daftar pesan debug umum.
pscanrules.informationdisclosuredebugerrors.soln=Nonaktifkan pesan debug sebelum mendorong ke produksi.

pscanrules.informationdisclosureinurl.name=Information Disclosure - Sensitive Information in URL
pscanrules.informationdisclosureinurl.desc=Permintaan tersebut tampaknya mengandung informasi sensitif yang bocor di URL. Hal ini dapat melanggar PCI dan kebijakan kepatuhan organisasi. Anda dapat mengkonfigurasi daftar string untuk pemeriksaan ini untuk menambahkan atau menghilangkan nilai yang spesifik untuk lingkungan Anda.
pscanrules.informationdisclosureinurl.otherinfo.sensitiveinfo=The URL contains potentially sensitive information. The following string was found via the pattern\: {0}\n{1}
pscanrules.informationdisclosureinurl.otherinfo.cc=URL tampaknya berisi informasi kartu kredit.
pscanrules.informationdisclosureinurl.otherinfo.email=URL berisi alamat email(es).
pscanrules.informationdisclosureinurl.otherinfo.ssn=URL tersebut tampaknya berisi Nomor Jaminan Sosial AS (s)
pscanrules.informationdisclosureinurl.soln=Jangan melewati informasi sensitif di URIs.

pscanrules.informationdisclosurereferrer.name=Pengungkapan Informasi - Informasi Sensitif dalam Header Referal HTTP
pscanrules.informationdisclosurereferrer.desc=Header HTTP mungkin telah membocorkan parameter yang berpotensi sensitif ke domain lain. Hal ini dapat melanggar PCI dan kebijakan kepatuhan organisasi. Anda dapat mengkonfigurasi daftar string untuk pemeriksaan ini untuk menambahkan atau menghilangkan nilai yang spesifik untuk lingkungan Anda.
pscanrules.informationdisclosurereferrer.otherinfo.sensitiveinfo=URL di bidang header pengarah HTTP tampaknya berisi informasi sensitif.
pscanrules.informationdisclosurereferrer.otherinfo.cc=URL di bidang header pengarah HTTP tampaknya berisi informasi kartu kredit.
pscanrules.informationdisclosurereferrer.otherinfo.email=URL di bidang header perujuk HTTP berisi alamat email(es).
pscanrules.informationdisclosurereferrer.otherinfo.ssn=URL di bidang taut pengarah HTTP tampaknya berisi Nomor Jaminan Sosial AS (s).
pscanrules.informationdisclosurereferrer.soln=Jangan melewati informasi sensitif di URIs.
pscanrules.informationdisclosurereferrer.bin.field=Bank Identification Number\:
pscanrules.informationdisclosurereferrer.brand.field=Brand\:
pscanrules.informationdisclosurereferrer.category.field=Category\:
pscanrules.informationdisclosurereferrer.issuer.field=Penerbit\:

pscanrules.informationdisclosuresuspiciouscomments.name=Keterbukaan Informasi - Komentar Mencurigakan
pscanrules.informationdisclosuresuspiciouscomments.desc=The response appears to contain suspicious comments which may help an attacker. Note\: Matches made within script blocks or files are against the entire content not only comments.
pscanrules.informationdisclosuresuspiciouscomments.otherinfo=The following pattern was used\: {0} and was detected in the element starting with\: "{1}", see evidence field for the suspicious comment/snippet.
pscanrules.informationdisclosuresuspiciouscomments.otherinfo2=The following pattern was used\: {0} and was detected {2} times, the first in the element starting with\: "{1}", see evidence field for the suspicious comment/snippet.
pscanrules.informationdisclosuresuspiciouscomments.soln=Hapus semua komentar yang mengembalikan informasi yang dapat membantu penyerang dan memperbaiki masalah mendasar yang mereka lihat.

pscanrules.insecureauthentication.name=Metode Otentikasi Lemah
pscanrules.insecureauthentication.desc=Otentikasi dasar atau ringkasan HTTP telah digunakan selama koneksi tanpa jaminan. Kredensial dapat dibaca dan kemudian digunakan kembali oleh seseorang yang memiliki akses ke jaringan.
pscanrules.insecureauthentication.soln=Lindungi koneksi menggunakan HTTPS atau gunakan mekanisme otentikasi yang lebih kuat
pscanrules.insecureauthentication.refs=https\://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html

pscanrules.insecurejsfviewstate.name=Tidak aman JSF ViewState
pscanrules.insecurejsfviewstate.desc=Tanggapan pada URL berikut berisi nilai ViewState yang tidak memiliki perlindungan kriptografi.
pscanrules.insecurejsfviewstate.soln=Secure VIEWSTATE dengan MAC yang spesifik untuk lingkungan Anda
pscanrules.insecurejsfviewstate.refs=https\://www.trustwave.com/spiderlabs/advisories/TWSL2010-001.txt
pscanrules.insecurejsfviewstate.extrainfo=JSF ViewState [{0}] tidak aman

pscanrules.noanticsrftokens.name=Tidak adanya Token Anti-CSRF
pscanrules.noanticsrftokens.desc=Tidak ada bukti Anti-CSRF yang ditemukan dalam formulir pengiriman HTML.
pscanrules.noanticsrftokens.alert.extrainfo=Tidak ada tanda Anti-CSRF yang diketahui {0} ditemukan dalam bentuk HTML berikut\: {1}.
pscanrules.noanticsrftokens.extrainfo.annotation=Ini adalah informasi peringatan sebagai bentuk keamanan penjelasan yang menunjukkan bahwa hal itu tidak perlu Token anti-CSRF. Ini harus diuji manual untuk memastikan anotasi sudah benar.

pscanrules.timestampdisclosure.name=Pengungkapan Timestamp
pscanrules.timestampdisclosure.desc=Sebuah timestamp telah diungkapkan oleh aplikasi/server web
pscanrules.timestampdisclosure.soln=Secara manual konfirmasikan bahwa data timestamp tidak sensitif, dan data tersebut tidak dapat digabungkan untuk mengungkapkan pola yang dapat dieksploitasi.
pscanrules.timestampdisclosure.refs=http\://projects.webappsec.org/w/page/13246936/Information%20Leakage
pscanrules.timestampdisclosure.extrainfo={0}, yang mengevaluasi ke\: {1}

pscanrules.usernameidor.name = Username Hash Ditemukan
pscanrules.usernameidor.desc = Hash dari nama pengguna ({0}) ditemukan dalam tanggapan. Ini mungkin menunjukkan bahwa aplikasi tunduk pada kerentanan Reference Object Oriented (IDOR) yang tidak aman. Pengujian manual akan diperlukan untuk melihat apakah penemuan ini dapat disalahgunakan.
pscanrules.usernameidor.otherinfo = Hash adalah {0}, dengan nilai\: {1} 
pscanrules.usernameidor.soln = Gunakan per pengguna atau referensi objek tidak langsung sesi (buat pemetaan sementara pada saat penggunaan). Atau, pastikan bahwa setiap penggunaan referensi objek langsung terkait dengan pemeriksaan otorisasi untuk memastikan pengguna diberi wewenang untuk objek yang diminta. 
pscanrules.usernameidor.refs = https\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/05-Authorization_Testing/04-Testing_for_Insecure_Direct_Object_References.html

pscanrules.xaspnetversion.name = X-AspNet-Version Response Header
pscanrules.xaspnetversion.desc =  Server kebocoran informasi melalui "X-AspNet-Version"/"X-AspNetMvc-Version" header header respon HTTP(s).
pscanrules.xaspnetversion.soln = Konfigurasi server sehingga tidak akan mengembalikan header tersebut.
pscanrules.xaspnetversion.extrainfo = Penyerang dapat menggunakan informasi ini untuk memanfaatkan kerentanan yang diketahui.
pscanrules.xaspnetversion.refs = https\://www.troyhunt.com/shhh-dont-let-your-response-headers/ https\://blogs.msdn.microsoft.com/varunm/2013/04/23/remove-unwanted-http-response-headers/

pscanrules.xdebugtoken.name=Kebocoran informasi X-Debug-Token
pscanrules.xdebugtoken.desc=Tanggapan berisi header X-Debug-Token atau X-Debug-Token-Link. Ini menunjukkan bahwa Symfony's Profiler mungkin sedang digunakan dan memperlihatkan data sensitif.
pscanrules.xdebugtoken.otherinfo=Dengan mengakses URL dalam bentuk http\://target_host/_profiler/token_value (i.e.\: http\://example.com/_profiler_/123ab4), Anda dapat memperoleh akses ke profiler dan informasi lebih lanjut bocor.
pscanrules.xdebugtoken.refs=https\://symfony.com/doc/current/cookbook/profiler/profiling_data.html https\://symfony.com/blog/new-in-symfony-2-4-quicker-access-to-the-profiler-when-working-on-an-api
pscanrules.xdebugtoken.soln=Limit access to Symfony's Profiler, either via authentication/authorization or limiting inclusion of the header to specific clients (by IP, etc.).

pscanrules.xpoweredbyheaderinfoleak.name=Informasi Server Leaks via "X-Powered-By" Header Respon HTTP Field (s)
pscanrules.xpoweredbyheaderinfoleak.desc=Server web/aplikasi membocorkan informasi melalui satu atau lebih header respon HTTP "X-Powered-By". Akses terhadap informasi semacam itu dapat mempermudah penyerang untuk mengidentifikasi kerangka/komponen lain yang bergantung pada aplikasi web Anda dan kerentanan komponen semacam itu dapat dikenai.
pscanrules.xpoweredbyheaderinfoleak.refs=http\://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx http\://www.troyhunt.com/2012/02/shhh-dont -let-your-response-headers.html
pscanrules.xpoweredbyheaderinfoleak.soln=Pastikan server web, server aplikasi, penyeimbang beban, dan lain-lain dikonfigurasi untuk menekan header "X-Powered-By".
pscanrules.xpoweredbyheaderinfoleak.extrainfo=
pscanrules.xpoweredbyheaderinfoleak.otherinfo.msg=Header X-Powered-By berikut juga ditemukan\:\n

pscanrules.xframeoptions.name = X-Frame-Options Header
pscanrules.xframeoptions.incInCsp = The Content-Security-Policy does include a 'frame-ancestors' element which takes precedence over the X-Frame-Options header, which is why this has been raised with a LOW risk.  
pscanrules.xframeoptions.missing.name = X-Frame-Options Header Not Set
pscanrules.xframeoptions.missing.desc = X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.
pscanrules.xframeoptions.missing.refs = https\://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
pscanrules.xframeoptions.missing.soln = Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's "frame-ancestors" directive. 
pscanrules.xframeoptions.multiple.header.name = Multiple X-Frame-Options Header Entries
pscanrules.xframeoptions.multiple.header.desc = X-Frame-Options (XFO) headers were found, a response with multiple XFO header entries may not be predictably treated by all user-agents.
pscanrules.xframeoptions.multiple.header.refs = https\://tools.ietf.org/html/rfc7034
pscanrules.xframeoptions.multiple.header.soln = Ensure only a single X-Frame-Options header is present in the response.
pscanrules.xframeoptions.compliance.meta.name = X-Frame-Options Defined via META (Non-compliant with Spec)
pscanrules.xframeoptions.compliance.meta.desc = An X-Frame-Options (XFO) META tag was found, defining XFO via a META tag is explicitly not supported by the spec (RFC 7034).
pscanrules.xframeoptions.compliance.meta.refs = https\://tools.ietf.org/html/rfc7034\#section-4
pscanrules.xframeoptions.compliance.meta.soln = Ensure X-Frame-Options is set via a response header field.  Alternatively consider implementing Content Security Policy's "frame-ancestors" directive.
pscanrules.xframeoptions.compliance.malformed.setting.name = X-Frame-Options Setting Malformed
pscanrules.xframeoptions.compliance.malformed.setting.desc = An X-Frame-Options header was present in the response but the value was not correctly set.
pscanrules.xframeoptions.compliance.malformed.setting.refs = https\://tools.ietf.org/html/rfc7034\#section-2.1
pscanrules.xframeoptions.compliance.malformed.setting.soln = Ensure a valid setting is used on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY.  Alternatively consider implementing Content Security Policy's "frame-ancestors" directive.

pscanrules.xcontenttypeoptions.name = X-Content-Type-Options Header Missing
pscanrules.xcontenttypeoptions.desc = The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.
pscanrules.xcontenttypeoptions.otherinfo = This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt "High" threshold this scan rule will not alert on client or server error responses.
pscanrules.xcontenttypeoptions.refs = http\://msdn.microsoft.com/en-us/library/ie/gg622941%28v\=vs.85%29.aspx\nhttps\://owasp.org/www-community/Security_Headers
pscanrules.xcontenttypeoptions.soln = Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.

pscanrules.applicationerrors.name = Application Error Disclosure
pscanrules.applicationerrors.desc = This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.
pscanrules.applicationerrors.soln = Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.

pscanrules.cachecontrol.name = Incomplete or No Cache-control Header Set
pscanrules.cachecontrol.desc = The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content.
pscanrules.cachecontrol.soln = Whenever possible ensure the cache-control HTTP header is set with no-cache, no-store, must-revalidate.
pscanrules.cachecontrol.refs = https\://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html\#web-content-caching\nhttps\://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control

pscanrules.contenttypemissing.name = Content-Type Header Missing
pscanrules.contenttypemissing.name.empty = Content-Type Header Empty
pscanrules.contenttypemissing.desc = The Content-Type header was either missing or empty.
pscanrules.contenttypemissing.soln=Ensure each page is setting the specific and appropriate content-type value for the content being delivered.
pscanrules.contenttypemissing.refs=http\://msdn.microsoft.com/en-us/library/ie/gg622941%28v\=vs.85%29.aspx

pscanrules.cookiehttponly.name = Cookie No HttpOnly Flag
pscanrules.cookiehttponly.desc=A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.
pscanrules.cookiehttponly.soln=Ensure that the HttpOnly flag is set for all cookies.
pscanrules.cookiehttponly.refs=https\://owasp.org/www-community/HttpOnly

pscanrules.cookiesecureflag.name = Cookie Without Secure Flag
pscanrules.cookiesecureflag.desc=A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.
pscanrules.cookiesecureflag.soln=Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.
pscanrules.cookiesecureflag.refs=https\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html

pscanrules.crossdomainscriptinclusion.name = Cross-Domain JavaScript Source File Inclusion
pscanrules.crossdomainscriptinclusion.desc=The page includes one or more script files from a third-party domain.
pscanrules.crossdomainscriptinclusion.soln=Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.

pscanrules.csp.name=CSP
pscanrules.csp.desc=Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.
pscanrules.csp.desc.extended=\n\nThe directive(s)\: {0} are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything.
pscanrules.csp.refs=http\://www.w3.org/TR/CSP2/\nhttp\://www.w3.org/TR/CSP/\nhttp\://caniuse.com/\#search\=content+security+policy\nhttp\://content-security-policy.com/\nhttps\://github.com/shapesecurity/salvation\nhttps\://developers.google.com/web/fundamentals/security/csp\#policy_applies_to_a_wide_variety_of_resources
pscanrules.csp.soln=Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.
pscanrules.csp.notices.name=Notices
pscanrules.csp.notices.errors=Kesalahan\:
pscanrules.csp.notices.warnings=Warnings\:
pscanrules.csp.notices.infoitems=Info Items\:
pscanrules.csp.scriptsrc.unsafe.name=script-src unsafe-inline
pscanrules.csp.scriptsrc.unsafe.desc=script-src includes unsafe-inline.
pscanrules.csp.stylesrc.unsafe.name=style-src unsafe-inline
pscanrules.csp.stylesrc.unsafe.desc=style-src includes unsafe-inline.
pscanrules.csp.wildcard.name=Wildcard Directive
pscanrules.csp.wildcard.desc=The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined\: \n{0}
pscanrules.csp.xcsp.name=X-Content-Security-Policy
pscanrules.csp.xcsp.desc=The header X-Content-Security-Policy was found on this response. While it is a good sign that CSP is implemented to some degree the policy specified in this header has not been analyzed by ZAP. To ensure full support by modern browsers ensure that the Content-Security-Policy header is defined and attached to responses.
pscanrules.csp.xwkcsp.name=X-WebKit-CSP
pscanrules.csp.xwkcsp.desc=The header X-WebKit-CSP was found on this response. While it is a good sign that CSP is implemented to some degree the policy specified in this header has not been analyzed by ZAP. To ensure full support by modern browsers ensure that the Content-Security-Policy header is defined and attached to responses.

pscanrules.mixedcontent.name = Secure Pages Include Mixed Content
pscanrules.mixedcontent.name.inclscripts = Secure Pages Include Mixed Content (Including Scripts)
pscanrules.mixedcontent.desc=The page includes mixed content, that is content accessed via HTTP instead of HTTPS.
pscanrules.mixedcontent.soln=A page that is available over SSL/TLS must be comprised completely of content which is transmitted over SSL/TLS.\nThe page must not contain any content that is transmitted over unencrypted HTTP.\n This includes content from third party sites.
pscanrules.mixedcontent.refs=https\://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html

pscanrules.infoprivateaddressdisclosure.name = Private IP Disclosure
pscanrules.infoprivateaddressdisclosure.desc = A private IP (such as 10.x.x.x, 172.x.x.x, 192.168.x.x) or an Amazon EC2 private hostname (for example, ip-10-0-56-78) has been found in the HTTP response body. This information might be helpful for further attacks targeting internal systems.
pscanrules.infoprivateaddressdisclosure.soln = Remove the private IP address from the HTTP response body.  For comments, use JSP/ASP/PHP comment instead of HTML/JavaScript comment which can be seen by client browsers.
pscanrules.infoprivateaddressdisclosure.refs = https\://tools.ietf.org/html/rfc1918

pscanrules.infosessionidurl.name = Session ID in URL Rewrite
pscanrules.infosessionidurl.desc = URL rewrite is used to track user session ID. The session ID may be disclosed via cross-site referer header. In addition, the session ID might be stored in browser history or server logs.
pscanrules.infosessionidurl.soln = For secure content, put session ID in a cookie. To be even more secure consider using a combination of cookie and URL rewrite.
pscanrules.infosessionidurl.refs = http\://seclists.org/lists/webappsec/2002/Oct-Dec/0111.html
pscanrules.infosessionidurl.referrer.alert = Referer Exposes Session ID
pscanrules.infosessionidurl.referrer.desc = A hyperlink pointing to another host name was found. As session ID URL rewrite is used, it may be disclosed in referer header to external hosts.
pscanrules.infosessionidurl.referrer.soln = This is a risk if the session ID is sensitive and the hyperlink refers to an external or third party host. For secure content, put session ID in secured session cookie.

pscanrules.viewstate.name=Viewstate
pscanrules.viewstate.soln=Verifikasi informasi yang diberikan tidak rahasia.
pscanrules.viewstate.oldver.name=Versi Asp.Net Lama di Gunakan
pscanrules.viewstate.oldver.desc=*** EXPERIMENTAL *** \nWebsite ini menggunakan ASP.NET versi 1.0 atau 1.1.\n\n
pscanrules.viewstate.oldver.soln=Pastikan framework yang sedang berjalan masih didukung oleh Microsoft.
pscanrules.viewstate.nomac.unsure.name=Kondisi tampilan tanpa tanda tangan MAC (tidak yakin)
pscanrules.viewstate.nomac.unsure.desc=*** EXPERIMENTAL ***\nWebsite ini menggunakan Viewstate ASP.NET tapi mungkin tanpa MAC.\n\n
pscanrules.viewstate.nomac.unsure.soln=Pastikan MAC diset untuk semua halaman di situs ini.
pscanrules.viewstate.nomac.unsure.refs=http\://msdn.microsoft.com/en-us/library/ff649308.aspx
pscanrules.viewstate.nomac.sure.name=Kondisi tampilan tanpa tanda tangan MAC (yakin)
pscanrules.viewstate.nomac.sure.desc=*** EKSPERIMENTAL ***\nSitus web ini menggunakan ASP.NET's Viewstate namun tanpa MAC.\n\n
pscanrules.viewstate.nomac.sure.soln=Pastikan MAC diset untuk semua halaman di situs ini.
pscanrules.viewstate.nomac.sure.refs=http\://msdn.microsoft.com/en-us/library/ff649308.aspx
pscanrules.viewstate.split.name=Split Viewstate in Use
pscanrules.viewstate.split.desc=*** EXPERIMENTAL ***\nSitus web ini menggunakan Viewstate ASP.NET dan nilainya dibagi menjadi beberapa bagian.\n
pscanrules.viewstate.split.soln=Tidak ada - orang-orang yang menjalankan server mungkin telah menyetel konfigurasi karena ini bukan pengaturan default.
pscanrules.viewstate.content.email.name=Email Ditemukan di kondisi tampilan belakang
pscanrules.viewstate.content.email.desc=Email berikut ditemukan diserialkan di bidang tampilan lapangan\:
pscanrules.viewstate.content.email.pattern.source=Pola email - http\://www.regular-expressions.info/regexbuddy/email.html
pscanrules.viewstate.content.ip.name=Alamat IP Potensi Ditemukan di kondisi terbuka
pscanrules.viewstate.content.ip.desc=Alamat IP potensial berikut ditemukan diserialisasi di bidang tampilan lapangan\:
pscanrules.viewstate.content.ip.pattern.source=Pola IP - http\://www.regular-expressions.info/examples.html

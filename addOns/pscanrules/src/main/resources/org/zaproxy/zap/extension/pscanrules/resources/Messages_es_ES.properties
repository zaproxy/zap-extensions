pscanrules.desc = Reglas de la exploraci\u00f3n pasiva

pscanrules.payloader.desc=Provides support for custom payloads in scan rules.
pscanrules.payloader.name=Passive Scan Rules Release Custom Payloads

pscanrules.authenticationcredentialscaptured.name=Credenciales de autenticaci\u00f3n capturadas
pscanrules.authenticationcredentialscaptured.desc=An insecure authentication mechanism is in use. This allows an attacker on the network access to the userid and password of the authenticated user. For Basic Authentication, the attacker must merely monitor the network traffic until a Basic Authentication request is received, and then base64 decode the username and password.  For Digest Authentication, the attacker has access to the username, and possibly also the password, if the hash (including a nonce) can be successfully cracked, or if a Man-In-The-Middle attack is mounted.\nThe attacker eavesdrops on the network until an authentication has completed.
pscanrules.authenticationcredentialscaptured.soln=Utilice HTTPS y un mecanismo de autenticaci\u00f3n segura que no transmita el ID de usuario o la contrase\u00f1a sin cifrarlos.  En particular, evite el uso del mecanismo HTTP de autenticaci\u00f3n b\u00e1sica ya que este utiliza un mecanismo de ofuscaci\u00f3n trivial, que se rompe f\u00e1cilmente. 
pscanrules.authenticationcredentialscaptured.refs=https\://owasp.org/www-community/attacks/Brute_force_attack\nhttp\://en.wikipedia.org/wiki/Digest_access_authentication
pscanrules.authenticationcredentialscaptured.alert.basicauth.extrainfo=[{0}] [{1}] utiliza el mecanismo de autenticaci\u00f3n inseguro [{2}], revelando el nombre de usuario [{3}] y contrase\u00f1a [{4}].
pscanrules.authenticationcredentialscaptured.alert.digestauth.extrainfo=[{0}] [{1}] utiliza el mecanismo de autenticaci\u00f3n inseguro [{2}], revelando el nombre de usuario [{3}] e informaci\u00f3n adicional [{4}].

pscanrules.charsetmismatch.variant.no_mismatch_metacontenttype_missing=(Falta el Conjunto de Caracteres de Tipo de Contenido Meta)
pscanrules.charsetmismatch.name=Incompatibilidad de caracteres
pscanrules.charsetmismatch.variant.header_metacontentype_mismatch=(Encabezado contra Conjunto de Caracteres de Tipo de Contenido Meta)
pscanrules.charsetmismatch.variant.header_metacharset_mismatch=(Encabezado contra Conjunto de Caracteres Meta)
pscanrules.charsetmismatch.variant.metacontenttype_metacharset_mismatch=(Conjunto de Caracteres Meta contra Conjunto de Caracteres de Tipo de Contenido Meta)
pscanrules.charsetmismatch.desc=This check identifies responses where the HTTP Content-Type header declares a charset different from the charset defined by the body of the HTML or XML. When there's a charset mismatch between the HTTP header and content body Web browsers can be forced into an undesirable content-sniffing mode to determine the content's correct character set.\n\nAn attacker could manipulate content on the page to be interpreted in an encoding of their choice. For example, if an attacker can control content at the beginning of the page, they could inject script using UTF-7 encoded text and manipulate some browsers into interpreting that text.
pscanrules.charsetmismatch.soln=Forzar UTF-8 para todo el contenido de texto tanto en el encabezado HTPP y etiquetas meta en HTML o declaraciones de codificaci\u00f3n en XML.
pscanrules.charsetmismatch.refs=http\://code.google.com/p/browsersec/wiki/Part2\#Character_set_handling_and_detection
pscanrules.charsetmismatch.extrainfo.html.no_mismatch_metacontenttype_missing=El conjunto de caracteres es definido solo por el conjunto de caracteres META, los clientes m\u00e1s antiguos que esperan que el conjunto de caracteres sea definido por tipo de contenido META podr\u00edan no mostrar correctamente este contenido.
pscanrules.charsetmismatch.extrainfo.html.header_metacontentype_mismatch=Hubo un desajuste de conjunto de caracteres entre el encabezado HTTP y las declaraciones de codificaci\u00f3n de tipo de contenido META\: [{0}] y [{1}] no coinciden.
pscanrules.charsetmismatch.extrainfo.html.header_metacharset_mismatch=Hubo un desajuste de conjunto de caracteres entre el encabezado HTTP La declaraci\u00f3n de codificaci\u00f3n del conjunto de caracteres META\: [{0}] y [{1}] no coinciden.
pscanrules.charsetmismatch.extrainfo.html.metacontenttype_metacharset_mismatch=Hubo un desajuste de conjunto de caracteres entre el conjunto de caracteres META y la declaraci\u00f3n de codificaci\u00f3n del tipo de contenido META\: [{0}] y [{1}] no coinciden.
pscanrules.charsetmismatch.extrainfo.xml=Hubo un desajuste en el conjunto de caracteres entre el encabezado HTTP y la declaraci\u00f3n de c\u00f3digo XML\: [{0}] y [{1}] no coinciden.

pscanrules.cookiesamesite.name = Cookie without SameSite Attribute
pscanrules.cookiesamesite.none.name = Cookie with SameSite Attribute None
pscanrules.cookiesamesite.desc=Una cookie ha sido enviada sin el atributo SameSite, lo que significa que la cookie puede ser enviada como un resultado de una solicitud 'cross-site'. \nEl atributo SameSite es una medida efectiva contra solicitudes de falsificaci\u00f3n de cross-site, inclusi\u00f3n de secuencias cross-site, y ataques sincronizados.
pscanrules.cookiesamesite.none.desc=A cookie has been set with its SameSite attribute set to "none", which means that the cookie can be sent as a result of a 'cross-site' request. \nThe SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.
pscanrules.cookiesamesite.badval.name = Cookie with Invalid SameSite Attribute
pscanrules.cookiesamesite.badval.desc=Una cookie ha sido establecida con un valor de atributo SameSite invalido, lo que significa que la cookie podr\u00eda ser enviada como resultado de una solicitud 'cross-site'.\nEl atributo SameSite es una medida efectiva contra solicitudes de falsificaci\u00f3n cross-site, inclusi\u00f3n de secuencias cross-site, y ataques sincronizados.
pscanrules.cookiesamesite.soln=Aseg\u00farese que el atributo SameSite est\u00e1 establecido como 'lax' o idealmente 'strict' para todas las cookies.
pscanrules.cookiesamesite.refs=https\://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site

pscanrules.crossdomain.name=Desconfiguraci\u00f3n de Dominio cruzado
pscanrules.crossdomain.desc=Descargas de datos del navegador web podr\u00eda ser posible, debido a una desconfiguraci\u00f3n del intercambio de recursos cruzados de origen (CORS) en el servidor web
pscanrules.crossdomain.soln=Aseg\u00farese que los datos sensibles no est\u00e1n disponibles de manera no autenticada (usando direcci\u00f3n IP listado-blanco, por ejemplo). Configurar el encabezado HTTP ''''Access-Control-Allow-Origin" a un conjunto de dominios m\u00e1s restrictivo, o remover completamente todos los encabezados CORS, para permitir que el navegador web refuerce la pol\u00edtica de mismo origen (SOP) en una manera mas restrictiva.
pscanrules.crossdomain.refs=http\://www.hpenterprisesecurity.com/vulncat/en/vulncat/vb/html5_overly_permissive_cors_policy.html
pscanrules.crossdomain.extrainfo=La desconfiguraci\u00f3n CORS en el servidor web permite a dominios cruzados leer peticiones de dominios de terceros arbitrariamente, usando APIs sin autenticaci\u00f3n en este dominio. Las implementaciones de navegador web no permiten a terceros arbitrarios leer la respuesta de APIs autenticados, de todas formas. Esto reduce el riesgo de alguna forma. Esta desconfiguraci\u00f3n podr\u00eda ser usada por un atacante para acceder a datos que est\u00e1 disponible en una manera sin autenticaci\u00f3n, pero que usa otra forma de seguridad, tal como la direcci\u00f3n IP lista-blanca.

pscanrules.cookielooselyscoped.name=Amplia gama de Cookies
pscanrules.cookielooselyscoped.desc=Las Cookies pueden ser delimitadas por dominio o ruta. Esta comprobaci\u00f3n solo se considera con \u00e1mbito de dominio. El \u00e1mbito de dominio aplicado a una cookie determina cuales dominios lo pueden acceder. Por ejemplo, una cookie puede ser delimitada estrictamente a un subdominio por ejemplo, www.nottrusted.com, o libremente delimitada a un dominio padre por ejemplo, nottrusted.com. En el \u00faltimo caso, cualquier subdominio de nottrusted.com puede acceder a la cookie. Las cookies libremente delimitadas son comunes en mega-aplicaciones como google.com y live.com. las cookies establecidas desde un subdominio como app.foo.bar son transmitidas solo al dominio del navegador. Sin embargo, las cookies delimitadas a un dominio de nivel de padre podr\u00eda ser transmitida al padre, o cualquier subdominio del padre.
pscanrules.cookielooselyscoped.soln=Siempre delimitar las cookies a FQDN (Nombre de Dominio Completamente Calificado).
pscanrules.cookielooselyscoped.refs=https\://tools.ietf.org/html/rfc6265\#section-4.1\nhttps\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttp\://code.google.com/p/browsersec/wiki/Part2\#Same-origin_policy_for_cookies
pscanrules.cookielooselyscoped.extrainfo=El dominio de origen usado para comparaciones era\:\n{0}\n{1}
pscanrules.cookielooselyscoped.extrainfo.cookie={0}\n

pscanrules.informationdisclosuredebugerrors.name=Divulgaci\u00f3n de informaci\u00f3n - Mensajes de error de depuraci\u00f3n
pscanrules.informationdisclosuredebugerrors.desc=La respuesta parec\u00eda contener mensajes de errores comunes devueltos por plataformas como ASP.NET, y los servidores web tales como ISS y Apache. Usted puede configurar la lista de mensajes comunes de depuraci\u00f3n.
pscanrules.informationdisclosuredebugerrors.soln=Inhabilitar mensajes de depuraci\u00f3n antes de empujar a la producci\u00f3n.

pscanrules.informationdisclosureinurl.name=Information Disclosure - Sensitive Information in URL
pscanrules.informationdisclosureinurl.desc=La petici\u00f3n aparentaba contener informaci\u00f3n sensible divulgada en el URL. Esto puede violar el PCI y las pol\u00edticas de cumplimiento m\u00e1s organizadas. Usted puede configurar la lista de cadenas para que esta comprobaci\u00f3n agregue o remueva espec\u00edficos valores de su entorno.
pscanrules.informationdisclosureinurl.otherinfo.sensitiveinfo=The URL contains potentially sensitive information. The following string was found via the pattern\: {0}\n{1}
pscanrules.informationdisclosureinurl.otherinfo.cc=El URL aparente contener informaci\u00f3n de tarjetas de cr\u00e9dito.
pscanrules.informationdisclosureinurl.otherinfo.email=El URL contiene direcci\u00f3n(es) de correo electr\u00f3nico.
pscanrules.informationdisclosureinurl.otherinfo.ssn=El URL parece contener N\u00famero(s) de Seguridad Social de Estados Unidos
pscanrules.informationdisclosureinurl.soln=No pase informaci\u00f3n sensible en URIs.

pscanrules.informationdisclosurereferrer.name=Divulgaci\u00f3n de Informaci\u00f3n - Informaci\u00f3n sensible en el Encabezado de Referencia HTTP
pscanrules.informationdisclosurereferrer.desc=El encabezado HTTP podr\u00eda haber filtrado un par\u00e1metro potencialmente sensible a otro dominio. Esto puede violar el PCI y las pol\u00edticas de cumplimientos m\u00e1s organizadas. Puede configurar la lista de cadenas para que esta comprobaci\u00f3n agregue o remueva espec\u00edficos valores de su entorno.
pscanrules.informationdisclosurereferrer.otherinfo.sensitiveinfo=El URL en el campo de encabezado de referencia HTTP aparenta contener informaci\u00f3n sensible.
pscanrules.informationdisclosurereferrer.otherinfo.cc=El URL en el campo de encabezado de referencia HTTP aparenta contener informaci\u00f3n de tarjetas de cr\u00e9dito.
pscanrules.informationdisclosurereferrer.otherinfo.email=EL URLE en el campo de encabezado de referencia HTTP contiene direcci\u00f3n(es) de correo electr\u00f3nico.
pscanrules.informationdisclosurereferrer.otherinfo.ssn=El URL en el campo de encabezado de referencia aparenta contener n\u00famero(s) de seguridad social de Estados Unidos.
pscanrules.informationdisclosurereferrer.soln=No pase informaci\u00f3n sensible en URIs.
pscanrules.informationdisclosurereferrer.bin.field=Bank Identification Number\:
pscanrules.informationdisclosurereferrer.brand.field=Brand\:
pscanrules.informationdisclosurereferrer.category.field=Category\:
pscanrules.informationdisclosurereferrer.issuer.field=Editor\:

pscanrules.informationdisclosuresuspiciouscomments.name=Divulgaci\u00f3n de informaci\u00f3n - Comentarios sospechosos
pscanrules.informationdisclosuresuspiciouscomments.desc=The response appears to contain suspicious comments which may help an attacker. Note\: Matches made within script blocks or files are against the entire content not only comments.
pscanrules.informationdisclosuresuspiciouscomments.otherinfo=The following pattern was used\: {0} and was detected in the element starting with\: "{1}", see evidence field for the suspicious comment/snippet.
pscanrules.informationdisclosuresuspiciouscomments.otherinfo2=The following pattern was used\: {0} and was detected {2} times, the first in the element starting with\: "{1}", see evidence field for the suspicious comment/snippet.
pscanrules.informationdisclosuresuspiciouscomments.soln=Eliminar todos los comentarios que devuelvan informaci\u00f3n que podr\u00eda ayudar a un atacante y arreglar cualquier problema subyacente al que se refieran.

pscanrules.insecureauthentication.name=M\u00e9todo de autenticaci\u00f3n d\u00e9bil
pscanrules.insecureauthentication.desc=M\u00e9todo HTTP de autenticaci\u00f3n b\u00e1sica o por compendio (hash) ha sido utilizado sobre una conexi\u00f3n no segura. Las credenciales pueden ser le\u00eddas y luego reutilizadas por alguien con acceso a la red.
pscanrules.insecureauthentication.soln=Protege la conexi\u00f3n usando el protocolo HTTPS o alg\u00fan mecanismo de autenticaci\u00f3n fuerte
pscanrules.insecureauthentication.refs=https\://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html

pscanrules.insecurejsfviewstate.name=JSF ViewState inseguro
pscanrules.insecurejsfviewstate.desc=La respuesta a la siguiente direcci\u00f3n URL contiene un valor ViewState que no posee ninguna protecci\u00f3n criptogr\u00e1fica.
pscanrules.insecurejsfviewstate.soln=VIEWSTATE seguro utilizando un MAC espec\u00edfico a tu entorno
pscanrules.insecurejsfviewstate.refs=https\://www.trustwave.com/spiderlabs/advisories/TWSL2010-001.txt
pscanrules.insecurejsfviewstate.extrainfo=JSF ViewState [{0}] es inseguro

pscanrules.noanticsrftokens.name=Ausencia de fichas (tokens) Anti-CSRF
pscanrules.noanticsrftokens.desc=No se encontraron fichas (tokens) Anti-CSRF en un formulario HTML.
pscanrules.noanticsrftokens.alert.extrainfo=Ninguna ficha (token) Anti-CSRF {0} fue encontrada en los siguientes formularios HTML\: {1}.  
pscanrules.noanticsrftokens.extrainfo.annotation=Esta es una alerta informativa, porque el formulario tiene una anotaci\u00f3n de seguridad que indica que no necesita un token anti-CSRF. Esto debe probarse manualmente para asegurar que la anotaci\u00f3n es correcta.

pscanrules.timestampdisclosure.name=Divulgaci\u00f3n de la marca de hora
pscanrules.timestampdisclosure.desc=Una marca de tiempo ha sido divulgada por el servidor de la aplicaci\u00f3n/el navegador
pscanrules.timestampdisclosure.soln=Confirmar manualmente que los datos de marca de hora no son sensibles, y que los datos no pueden ser agregados a patrones explotables de divulgaci\u00f3n.
pscanrules.timestampdisclosure.refs=http\://projects.webappsec.org/w/page/13246936/Information%20Leakage
pscanrules.timestampdisclosure.extrainfo={0}, que eval\u00faa a\: {1}

pscanrules.usernameidor.name = Username Hash Found
pscanrules.usernameidor.desc = Un hash de un nombre usuario ({0}) fue encontrado en la respuesta. Esto podr\u00eda indicar que la aplicaci\u00f3n esta sujeta a una vulnerabilidad Insecure Direct Object Reference (IDOR). Pruebas manuales ser\u00e1n requeridas para ver si este descubrimiento puede ser abusado.
pscanrules.usernameidor.otherinfo = The hash was an {0}, with value\: {1} 
pscanrules.usernameidor.soln = Use per user or session indirect object references (create a temporary mapping at time of use). Or, ensure that each use of a direct object reference is tied to an authorization check to ensure the user is authorized for the requested object. 
pscanrules.usernameidor.refs = https\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/05-Authorization_Testing/04-Testing_for_Insecure_Direct_Object_References.html

pscanrules.xaspnetversion.name = X-AspNet-Version Response Header
pscanrules.xaspnetversion.desc =  El servidor divulga informaci\u00f3n mediante campo(s) de encabezado de respuesta HTTP "X-AspNet-Version"/"X-AspNetMvc-Version".
pscanrules.xaspnetversion.soln = Configure the server so it will not return those headers.
pscanrules.xaspnetversion.extrainfo = An attacker can use this information to exploit known vulnerabilities.
pscanrules.xaspnetversion.refs = https\://www.troyhunt.com/shhh-dont-let-your-response-headers/\nhttps\://blogs.msdn.microsoft.com/varunm/2013/04/23/remove-unwanted-http-response-headers/

pscanrules.xdebugtoken.name=X-Debug-Token Information Leak
pscanrules.xdebugtoken.desc=The response contained an X-Debug-Token or X-Debug-Token-Link header. This indicates that Symfony's Profiler may be in use and exposing sensitive data.
pscanrules.xdebugtoken.otherinfo=Al acceder a un URL de la forma http\://target_host/_profiler/token_value (i.e.\: http\://example.com/_profiler_/123ab4), usted podr\u00eda ganar acceso al perfil e informaci\u00f3n divulgada adicional.
pscanrules.xdebugtoken.refs=https\://Symfony.com/doc/Current/Cookbook/Profiler/profiling_data.html \nhttps\://symfony.com/blog/new-in-symfony-2-4-quicker-access-to-the-profiler-when-working-on-an-api
pscanrules.xdebugtoken.soln=Limit access to Symfony's Profiler, either via authentication/authorization or limiting inclusion of the header to specific clients (by IP, etc.).

pscanrules.xpoweredbyheaderinfoleak.name=El servidor divulga informaci\u00f3n mediante un campo(s) de encabezado de respuesta HTTP ''''X-Powered-By''''
pscanrules.xpoweredbyheaderinfoleak.desc=El servidor de la web/aplicaci\u00f3n est\u00e1 divulgando informaci\u00f3n mediante uno o m\u00e1s encabezados de respuesta HTTP ''''X-Powered-By''''. El acceso a tal informaci\u00f3n podr\u00eda facilitarle a los atacantes la identificaci\u00f3n de otros marcos/componentes de los que su aplicaci\u00f3n web depende y las vulnerabilidades a las que pueden estar sujetos tales componentes.
pscanrules.xpoweredbyheaderinfoleak.refs=http\://blogs.msdn.com/b/varunm/Archive/2013/04/23/Remove-Unwanted-http-Response-headers.aspx http\://www.troyhunt.com/2012/02/shhh-don ' t-deje-la-respuesta-headers.html
pscanrules.xpoweredbyheaderinfoleak.soln=Aseg\u00farese que su servidor web, servidor de aplicaci\u00f3n, equilibrador de carga, etc. est\u00e1 configurado para suprimir encabezados ''''X-Powered-By".
pscanrules.xpoweredbyheaderinfoleak.extrainfo=[cadena vac\u00eda]
pscanrules.xpoweredbyheaderinfoleak.otherinfo.msg=Los siguientes encabezados X-Powered-By tambi\u00e9n han sido encontrados\:\n

pscanrules.xframeoptions.name = X-Frame-Options Header
pscanrules.xframeoptions.incInCsp = The Content-Security-Policy does include a 'frame-ancestors' element which takes precedence over the X-Frame-Options header, which is why this has been raised with a LOW risk.  
pscanrules.xframeoptions.missing.name = X-Frame-Options Header Not Set
pscanrules.xframeoptions.missing.desc = X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.
pscanrules.xframeoptions.missing.refs = https\://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
pscanrules.xframeoptions.missing.soln = Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's "frame-ancestors" directive. 
pscanrules.xframeoptions.multiple.header.name = Multiple X-Frame-Options Header Entries
pscanrules.xframeoptions.multiple.header.desc = X-Frame-Options (XFO) headers were found, a response with multiple XFO header entries may not be predictably treated by all user-agents.
pscanrules.xframeoptions.multiple.header.refs = https\://tools.ietf.org/html/rfc7034
pscanrules.xframeoptions.multiple.header.soln = Ensure only a single X-Frame-Options header is present in the response.
pscanrules.xframeoptions.compliance.meta.name = X-Frame-Options Defined via META (Non-compliant with Spec)
pscanrules.xframeoptions.compliance.meta.desc = An X-Frame-Options (XFO) META tag was found, defining XFO via a META tag is explicitly not supported by the spec (RFC 7034).
pscanrules.xframeoptions.compliance.meta.refs = https\://tools.ietf.org/html/rfc7034\#section-4
pscanrules.xframeoptions.compliance.meta.soln = Ensure X-Frame-Options is set via a response header field.  Alternatively consider implementing Content Security Policy's "frame-ancestors" directive.
pscanrules.xframeoptions.compliance.malformed.setting.name = X-Frame-Options Setting Malformed
pscanrules.xframeoptions.compliance.malformed.setting.desc = An X-Frame-Options header was present in the response but the value was not correctly set.
pscanrules.xframeoptions.compliance.malformed.setting.refs = https\://tools.ietf.org/html/rfc7034\#section-2.1
pscanrules.xframeoptions.compliance.malformed.setting.soln = Ensure a valid setting is used on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY.  Alternatively consider implementing Content Security Policy's "frame-ancestors" directive.

pscanrules.xcontenttypeoptions.name = X-Content-Type-Options Header Missing
pscanrules.xcontenttypeoptions.desc = The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.
pscanrules.xcontenttypeoptions.otherinfo = This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt "High" threshold this scan rule will not alert on client or server error responses.
pscanrules.xcontenttypeoptions.refs = http\://msdn.microsoft.com/en-us/library/ie/gg622941%28v\=vs.85%29.aspx\nhttps\://owasp.org/www-community/Security_Headers
pscanrules.xcontenttypeoptions.soln = Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.

pscanrules.applicationerrors.name = Application Error Disclosure
pscanrules.applicationerrors.desc = This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.
pscanrules.applicationerrors.soln = Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.

pscanrules.cachecontrol.name = Incomplete or No Cache-control Header Set
pscanrules.cachecontrol.desc = The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content.
pscanrules.cachecontrol.soln = Whenever possible ensure the cache-control HTTP header is set with no-cache, no-store, must-revalidate.
pscanrules.cachecontrol.refs = https\://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html\#web-content-caching\nhttps\://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control

pscanrules.contenttypemissing.name = Content-Type Header Missing
pscanrules.contenttypemissing.name.empty = Content-Type Header Empty
pscanrules.contenttypemissing.desc = The Content-Type header was either missing or empty.
pscanrules.contenttypemissing.soln=Ensure each page is setting the specific and appropriate content-type value for the content being delivered.
pscanrules.contenttypemissing.refs=http\://msdn.microsoft.com/en-us/library/ie/gg622941%28v\=vs.85%29.aspx

pscanrules.cookiehttponly.name = Cookie No HttpOnly Flag
pscanrules.cookiehttponly.desc=A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.
pscanrules.cookiehttponly.soln=Ensure that the HttpOnly flag is set for all cookies.
pscanrules.cookiehttponly.refs=https\://owasp.org/www-community/HttpOnly

pscanrules.cookiesecureflag.name = Cookie Without Secure Flag
pscanrules.cookiesecureflag.desc=A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.
pscanrules.cookiesecureflag.soln=Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.
pscanrules.cookiesecureflag.refs=https\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html

pscanrules.crossdomainscriptinclusion.name = Cross-Domain JavaScript Source File Inclusion
pscanrules.crossdomainscriptinclusion.desc=The page includes one or more script files from a third-party domain.
pscanrules.crossdomainscriptinclusion.soln=Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.

pscanrules.csp.name=CSP
pscanrules.csp.desc=Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.
pscanrules.csp.desc.extended=\n\nThe directive(s)\: {0} are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything.
pscanrules.csp.refs=http\://www.w3.org/TR/CSP2/\nhttp\://www.w3.org/TR/CSP/\nhttp\://caniuse.com/\#search\=content+security+policy\nhttp\://content-security-policy.com/\nhttps\://github.com/shapesecurity/salvation\nhttps\://developers.google.com/web/fundamentals/security/csp\#policy_applies_to_a_wide_variety_of_resources
pscanrules.csp.soln=Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.
pscanrules.csp.notices.name=Notices
pscanrules.csp.notices.errors=Errores\:
pscanrules.csp.notices.warnings=Warnings\:
pscanrules.csp.notices.infoitems=Info Items\:
pscanrules.csp.scriptsrc.unsafe.name=script-src unsafe-inline
pscanrules.csp.scriptsrc.unsafe.desc=script-src includes unsafe-inline.
pscanrules.csp.stylesrc.unsafe.name=style-src unsafe-inline
pscanrules.csp.stylesrc.unsafe.desc=style-src includes unsafe-inline.
pscanrules.csp.wildcard.name=Wildcard Directive
pscanrules.csp.wildcard.desc=The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined\: \n{0}
pscanrules.csp.xcsp.name=X-Content-Security-Policy
pscanrules.csp.xcsp.desc=The header X-Content-Security-Policy was found on this response. While it is a good sign that CSP is implemented to some degree the policy specified in this header has not been analyzed by ZAP. To ensure full support by modern browsers ensure that the Content-Security-Policy header is defined and attached to responses.
pscanrules.csp.xwkcsp.name=X-WebKit-CSP
pscanrules.csp.xwkcsp.desc=The header X-WebKit-CSP was found on this response. While it is a good sign that CSP is implemented to some degree the policy specified in this header has not been analyzed by ZAP. To ensure full support by modern browsers ensure that the Content-Security-Policy header is defined and attached to responses.

pscanrules.mixedcontent.name = Secure Pages Include Mixed Content
pscanrules.mixedcontent.name.inclscripts = Secure Pages Include Mixed Content (Including Scripts)
pscanrules.mixedcontent.desc=The page includes mixed content, that is content accessed via HTTP instead of HTTPS.
pscanrules.mixedcontent.soln=A page that is available over SSL/TLS must be comprised completely of content which is transmitted over SSL/TLS.\nThe page must not contain any content that is transmitted over unencrypted HTTP.\n This includes content from third party sites.
pscanrules.mixedcontent.refs=https\://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html

pscanrules.infoprivateaddressdisclosure.name = Private IP Disclosure
pscanrules.infoprivateaddressdisclosure.desc = A private IP (such as 10.x.x.x, 172.x.x.x, 192.168.x.x) or an Amazon EC2 private hostname (for example, ip-10-0-56-78) has been found in the HTTP response body. This information might be helpful for further attacks targeting internal systems.
pscanrules.infoprivateaddressdisclosure.soln = Remove the private IP address from the HTTP response body.  For comments, use JSP/ASP/PHP comment instead of HTML/JavaScript comment which can be seen by client browsers.
pscanrules.infoprivateaddressdisclosure.refs = https\://tools.ietf.org/html/rfc1918

pscanrules.infosessionidurl.name = Session ID in URL Rewrite
pscanrules.infosessionidurl.desc = URL rewrite is used to track user session ID. The session ID may be disclosed via cross-site referer header. In addition, the session ID might be stored in browser history or server logs.
pscanrules.infosessionidurl.soln = For secure content, put session ID in a cookie. To be even more secure consider using a combination of cookie and URL rewrite.
pscanrules.infosessionidurl.refs = http\://seclists.org/lists/webappsec/2002/Oct-Dec/0111.html
pscanrules.infosessionidurl.referrer.alert = Referer Exposes Session ID
pscanrules.infosessionidurl.referrer.desc = A hyperlink pointing to another host name was found. As session ID URL rewrite is used, it may be disclosed in referer header to external hosts.
pscanrules.infosessionidurl.referrer.soln = This is a risk if the session ID is sensitive and the hyperlink refers to an external or third party host. For secure content, put session ID in secured session cookie.

pscanrules.viewstate.name=Viewstate
pscanrules.viewstate.soln=Verificar que la informaci\u00f3n dada no es confidencial.
pscanrules.viewstate.oldver.name=Antigua versi\u00f3n de Asp.Net en uso
pscanrules.viewstate.oldver.desc=*** EXPERIMENTAL ***\nEste sitio web usa versi\u00f3n 1.0 o 1.1 de ASP.NET.\n\n
pscanrules.viewstate.oldver.soln=Asegure que el marco comprometido a\u00fan es apoyado por Microsoft.
pscanrules.viewstate.nomac.unsure.name=Viewstate sin Firma de MAC (Inseguro)
pscanrules.viewstate.nomac.unsure.desc=*** EXPERIMENTAL ***\nEste sitio web usa Viewstate de ASP.NET pero posiblemente sin ning\u00fan MAC.\n\n
pscanrules.viewstate.nomac.unsure.soln=Aseg\u00farese que el MAC est\u00e1 establecido para todas las p\u00e1ginas en este sitio web.
pscanrules.viewstate.nomac.unsure.refs=http\://msdn.microsoft.com/en-us/library/ff649308.aspx
pscanrules.viewstate.nomac.sure.name=Viewstate sin firma de MAC (Seguro)
pscanrules.viewstate.nomac.sure.desc=*** EXPERIMENTAL ***\nEste sitio web usa Viewstate ASP.NET's pero sin ning\u00fan MAC.\n\n
pscanrules.viewstate.nomac.sure.soln=Aseg\u00farese que el MAC est\u00e1 establecido para todas las p\u00e1ginas en este sitio web.
pscanrules.viewstate.nomac.sure.refs=http\://msdn.microsoft.com/en-us/library/ff649308.aspx
pscanrules.viewstate.split.name=Separar el Viewstate en Uso
pscanrules.viewstate.split.desc=*** EXPERIMENTAL ***\nEste sitio web usa Viewstate ASP.NET's y su valor es separar en varios trozos.\n
pscanrules.viewstate.split.soln=Ninguno - los chicos corriendo el servidor podr\u00edan haber concertado la configuraci\u00f3n como si este no fuera la configuraci\u00f3n predeterminada.
pscanrules.viewstate.content.email.name=Se han encontrado correos electr\u00f3nicos en el Viewstate
pscanrules.viewstate.content.email.desc=Los siguientes correos electr\u00f3nicos fueron encontrados siendo enumerados por serie en el campo de Viewstate\:
pscanrules.viewstate.content.email.pattern.source=Patr\u00f3n de correo electr\u00f3nico - http\://www.regular-expressions.info/regexbuddy/email.html
pscanrules.viewstate.content.ip.name=Direcciones IP potenciales encontradas en el Viewstate
pscanrules.viewstate.content.ip.desc=Las siguientes potenciales direcciones IP fueron encontradas siendo enumeradas por serie en el campo de Viewstate\:
pscanrules.viewstate.content.ip.pattern.source=Patr\u00f3n de IP - http\://www.regular-expressions.info/examples.html

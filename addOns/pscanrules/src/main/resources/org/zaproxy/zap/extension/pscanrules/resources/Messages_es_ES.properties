pscanrules.anticlickjacking.compliance.malformed.setting.desc = Una cabecera X-Frame-Option est\u00e1 presente en la repuesta, pero su valor no est\u00e1 configurado de manera correcta.
pscanrules.anticlickjacking.compliance.malformed.setting.name = Configuraci\u00f3n X-Frame-Options mal formada
pscanrules.anticlickjacking.compliance.malformed.setting.refs = https\://tools.ietf.org/html/rfc7034\#section-2.1
pscanrules.anticlickjacking.compliance.malformed.setting.soln = Aseg\u00farese de que se utiliza una configuraci\u00f3n v\u00e1lida en todas las p\u00e1ginas web devueltas por su sitio (si espera que la p\u00e1gina est\u00e9 enmarcada solo por p\u00e1ginas de su servidor (por ejemplo, si es parte de un FRAMESET), entonces querr\u00e1 utilizar SAMEORIGIN, de lo contrario, si nunca espera que la p\u00e1gina est\u00e9 enmarcada, deber\u00eda utilizar DENY. Alternativamente, considere implementar la directiva "frame-ancestors" de la Pol\u00edtica de Seguridad de Contenidos.
pscanrules.anticlickjacking.compliance.meta.desc = Si encuentra una etiqueta META de X-Frame-Options (XFO), la especificaci\u00f3n (RFC 7034) no admite expl\u00edcitamente la definici\u00f3n de XFO a trav\u00e9s de una etiqueta META.
pscanrules.anticlickjacking.compliance.meta.name = X-Frame-Options definidas a trav\u00e9s de META (No conformes con las especificaciones)
pscanrules.anticlickjacking.compliance.meta.refs = https\://tools.ietf.org/html/rfc7034\#section-4
pscanrules.anticlickjacking.compliance.meta.soln = Aseg\u00farese de que X-Frame-Options se define a trav\u00e9s de un campo de cabecera de respuesta. Alternativamente considere implementar la directiva \u00abframe-ancestors\u00bb de la Pol\u00edtica de Seguridad de Contenidos.
pscanrules.anticlickjacking.incInCsp = La Pol\u00edtica de Seguridad de Contenidos incluye un elemento \u00abframe-ancestors\u00bb que tiene prioridad sobre la cabecera X-Frame-Options, por lo que se ha planteado un riesgo BAJO.
pscanrules.anticlickjacking.missing.desc = La respuesta no protege contra ataques de "ClickJacking". Debes incluir Content-Security-Policy con la directiva "frame-ancestors" o X-Frame-Options.
pscanrules.anticlickjacking.missing.name = Falta de cabecera Anti-Clickjacking
pscanrules.anticlickjacking.missing.refs = https\://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
pscanrules.anticlickjacking.missing.soln = Los navegadores web modernos admiten las cabeceras HTTP Content-Security-Policy y X-Frame-Options. Aseg\u00farese de que una de ellas est\u00e1 configurada en todas las p\u00e1ginas web devueltas por su sitio/aplicaci\u00f3n.\nSi espera que la p\u00e1gina est\u00e9 enmarcada solo por p\u00e1ginas en su servidor (por ejemplo, si forma parte de un FRAMESET), utilice SAMEORIGIN; de lo contrario, si no espera que la p\u00e1gina est\u00e9 enmarcada, utilice DENY. Alternativamente, considere implementar la directiva "frame-ancestors" de la Pol\u00edtica de Seguridad de Contenidos.
pscanrules.anticlickjacking.multiple.header.desc = Se encontraron encabezados X-Frame-Options (XFO), una respuesta con m\u00faltiples entradas de cabeceras XFO puede no ser tratada de manera predecible por todos los user-agent.
pscanrules.anticlickjacking.multiple.header.name = M\u00faltiples entradas de cabeceras X-Frame-Options
pscanrules.anticlickjacking.multiple.header.refs = https\://tools.ietf.org/html/rfc7034
pscanrules.anticlickjacking.multiple.header.soln = Aseg\u00farese de que s\u00f3lo haya una cabecera X-Frame-Options en la respuesta.
pscanrules.anticlickjacking.name = Cabecera Anti-Clickjacking

pscanrules.applicationerrors.desc = Esta p\u00e1gina contiene un mensaje de error/advertencia que podr\u00eda revelar informaci\u00f3n sensible como la ubicaci\u00f3n del archivo que produjo la excepci\u00f3n no controlada. Esta informaci\u00f3n puede ser usada para lanzas futuros ataques contra la aplicaci\u00f3n web. La alerta podr\u00eda ser una falso positivo si el mensaje de error es encontrado dentro de una p\u00e1gina de documentaci\u00f3n.
pscanrules.applicationerrors.name = Divulgaci\u00f3n de error de aplicaci\u00f3n
pscanrules.applicationerrors.soln = Revisar el c\u00f3digo de fuente de esta p\u00e1gina. Implementaci\u00f3n de p\u00e1ginas de error personalizadas. Considerar implementar un mecanismos para proveer una \u00fanica referencia/identificaci\u00f3n de error para el cliente (navegador) mientras insertando los detalles en el sitio del navegador y no exponi\u00e9ndolos al usuario.

pscanrules.authenticationcredentialscaptured.alert.basicauth.extrainfo = [{0}] [{1}] utiliza el mecanismo de autenticaci\u00f3n inseguro [{2}], revelando el nombre de usuario [{3}] y contrase\u00f1a [{4}].
pscanrules.authenticationcredentialscaptured.alert.digestauth.extrainfo = [{0}] [{1}] utiliza el mecanismo de autenticaci\u00f3n inseguro [{2}], revelando el nombre de usuario [{3}] e informaci\u00f3n adicional [{4}].
pscanrules.authenticationcredentialscaptured.desc = Se est\u00e1 utilizando un mecanismo de autenticaci\u00f3n inseguro. Esto permite a un atacante en la red acceder al ID de usuario y contrase\u00f1a del usuario autenticado. Para la autenticaci\u00f3n b\u00e1sica, el atacante debe simplemente monitorizar el tr\u00e1fico de red hasta que se reciba una solicitud de autenticaci\u00f3n b\u00e1sica y, a continuaci\u00f3n, decodificar en base64 el nombre de usuario y la contrase\u00f1a. Para la autenticaci\u00f3n Digest, el atacante tiene acceso al nombre de usuario, y posiblemente tambi\u00e9n a la contrase\u00f1a, si el hash (incluyendo un nonce) puede ser descifrado con \u00e9xito, o si se monta un ataque Man-In-The-Middle.\nEl atacante escucha a escondidas en la red hasta que una autenticaci\u00f3n se ha completado.
pscanrules.authenticationcredentialscaptured.name = Credenciales de Autenticaci\u00f3n Capturadas
pscanrules.authenticationcredentialscaptured.refs = https\://owasp.org/www-community/attacks/Brute_force_attack\nhttps\://en.wikipedia.org/wiki/Digest_access_authentication
pscanrules.authenticationcredentialscaptured.soln = Utilice HTTPS y un mecanismo de autenticaci\u00f3n seguro que no transmita el ID de usuario o la contrase\u00f1a sin cifrar. En particular, evite el uso del mecanismo de autenticaci\u00f3n b\u00e1sica, ya que este mecanismo de ofuscaci\u00f3n trivial se rompe f\u00e1cilmente.

pscanrules.bigredirects.desc = El servidor ha respondido con una redirecci\u00f3n que parece proporcionar una respuesta larga. Esto puede indicar que aunque el servidor envi\u00f3 una redirecci\u00f3n, tambi\u00e9n respondi\u00f3 con el contenido del cuerpo (que puede incluir detalles confidenciales, PII, etc.).
pscanrules.bigredirects.extrainfo = Longitud URI de la cabecera de ubicaci\u00f3n\: {0} [{1}].\nTama\u00f1o previsto de la respuesta\: {2}.\nLongitud del cuerpo de la respuesta\: {3}.
pscanrules.bigredirects.multi.desc = El servidor respondi\u00f3 con una redirecci\u00f3n que parece contener varios enlaces. Esto puede indicar que, aunque el servidor envi\u00f3 una redirecci\u00f3n, tambi\u00e9n respondi\u00f3 con enlaces de contenido del cuerpo (que pueden incluir detalles confidenciales, PII, direcciones a paneles de administraci\u00f3n, etc.).
pscanrules.bigredirects.multi.extrainfo = La respuesta contiene {0} apariciones de "HREF".
pscanrules.bigredirects.multi.name = M\u00faltiples redirecciones HREF detectadas (Potencial fuga de informaci\u00f3n sensible)
pscanrules.bigredirects.name = Gran redirecci\u00f3n detectada (posible fuga de informaci\u00f3n confidencial)
pscanrules.bigredirects.soln = Aseg\u00farese de que no se filtre informaci\u00f3n confidencial a trav\u00e9s de las respuestas de redirecci\u00f3n. Las respuestas de redireccionamiento casi no deben tener contenido.

pscanrules.cachecontrol.desc = La cabecera cache-control no se ha configurado correctamente o falta, lo que permite al navegador y a los proxies almacenar contenido en cach\u00e9. Para activos est\u00e1ticos como css, js, o archivos de imagen esto puede ser intencionado, sin embargo, los recursos deben ser revisados para asegurar que ning\u00fan contenido sensible ser\u00e1 cacheado.
pscanrules.cachecontrol.name = Reexaminar las Directivas de Control de Cach\u00e9
pscanrules.cachecontrol.refs = https\://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html\#web-content-caching\nhttps\://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\nhttps\://grayduck.mn/2021/09/13/cache-control-recommendations/
pscanrules.cachecontrol.soln = Para contenido seguro, aseg\u00farese de que la cabecera HTTP cache-control est\u00e1 configurada con \u00abno-cache, no-store, must-revalidate\u00bb. Si un activo debe almacenarse en cach\u00e9, considere establecer las directivas \u00abpublic, max-age, immutable\u00bb.

pscanrules.charsetmismatch.desc = Esta verificaci\u00f3n identifica las respuestas donde la cabecera  HTTP Content-Type declara un juego de caracteres diferente del definido por el cuerpo del HTML o XML. Cuando hay una discrepancia en el juego de caracteres entre el encabezado HTTP y el cuerpo del contenido, los navegadores web pueden verse forzados a entrar en un modo de rastreo de contenido no deseado para determinar el juego de caracteres correcto del contenido.\n\nUn atacante podr\u00eda manipular el contenido de la p\u00e1gina para interpretarlo en una codificaci\u00f3n de su elecci\u00f3n. Por ejemplo, si un atacante puede controlar el contenido al principio de la p\u00e1gina, podr\u00eda inyectar un script con texto codificado en UTF-7 y manipular algunos navegadores para que interpreten ese texto.
pscanrules.charsetmismatch.extrainfo.html.header_metacharset_mismatch = Hubo un desajuste de conjunto de caracteres entre el encabezado HTTP La declaraci\u00f3n de codificaci\u00f3n del conjunto de caracteres META\: [{0}] y [{1}] no coinciden.
pscanrules.charsetmismatch.extrainfo.html.header_metacontentype_mismatch = Hubo un desajuste de conjunto de caracteres entre el encabezado HTTP y las declaraciones de codificaci\u00f3n de tipo de contenido META\: [{0}] y [{1}] no coinciden.
pscanrules.charsetmismatch.extrainfo.html.metacontenttype_metacharset_mismatch = Hubo un desajuste de conjunto de caracteres entre el conjunto de caracteres META y la declaraci\u00f3n de codificaci\u00f3n del tipo de contenido META\: [{0}] y [{1}] no coinciden.
pscanrules.charsetmismatch.extrainfo.html.no_mismatch_metacontenttype_missing = El conjunto de caracteres es definido solo por el conjunto de caracteres META, los clientes m\u00e1s antiguos que esperan que el conjunto de caracteres sea definido por tipo de contenido META podr\u00edan no mostrar correctamente este contenido.
pscanrules.charsetmismatch.extrainfo.xml = Hubo un desajuste en el conjunto de caracteres entre el encabezado HTTP y la declaraci\u00f3n de c\u00f3digo XML\: [{0}] y [{1}] no coinciden.
pscanrules.charsetmismatch.name = Incompatibilidad de CharSet
pscanrules.charsetmismatch.refs = https\://code.google.com/p/browsersec/wiki/Part2\#Character_set_handling_and_detection
pscanrules.charsetmismatch.soln = Forzar UTF-8 para todo el contenido de texto tanto en el encabezado HTTP como en las etiquetas meta en HTML o en las declaraciones de codificaci\u00f3n en XML.
pscanrules.charsetmismatch.variant.header_metacharset_mismatch = (Encabezado HTTP vs. Charset en Meta)
pscanrules.charsetmismatch.variant.header_metacontentype_mismatch = (Encabezado HTTP vs. Charset del Content-Type en Meta)
pscanrules.charsetmismatch.variant.metacontenttype_metacharset_mismatch = (Meta Charset vs. Charset del Content-Type en Meta)
pscanrules.charsetmismatch.variant.no_mismatch_metacontenttype_missing = (Valor del Charset del Content-Type en Meta Faltante)

pscanrules.contentsecuritypolicymissing.desc = La Pol\u00edtica de seguridad de contenido (CSP) es una capa adicional de seguridad que ayuda a detectar y mitigar ciertos tipos de ataques, incluidos Cross Site Scripting (XSS) y ataques de inyecci\u00f3n de datos. Estos ataques se utilizan para todo, desde el robo de datos hasta la desfiguraci\u00f3n del sitio o la distribuci\u00f3n de malware. CSP proporciona un conjunto de encabezados HTTP est\u00e1ndar que permiten a los propietarios de sitios web declarar fuentes de contenido aprobadas que los navegadores deber\u00edan poder cargar en esa p\u00e1gina; los tipos cubiertos son JavaScript, CSS, marcos HTML, fuentes, im\u00e1genes y objetos incrustados como applets de Java, ActiveX, archivos de audio y video.
pscanrules.contentsecuritypolicymissing.name = Cabecera Content Security Policy (CSP) no configurada
pscanrules.contentsecuritypolicymissing.obs.desc = Las cabeceras "X-Content-Security-Policy" y "X-WebKit-CSP" y no se recomiendan.
pscanrules.contentsecuritypolicymissing.obs.name = Cabecera Content Security Policy (CSP) obsoleta encontrada
pscanrules.contentsecuritypolicymissing.refs = https\://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps\://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html\nhttps\://www.w3.org/TR/CSP/\nhttps\://w3c.github.io/webappsec-csp/\nhttps\://web.dev/articles/csp\nhttps\://caniuse.com/\#feat\=contentsecuritypolicy\nhttps\://content-security-policy.com/
pscanrules.contentsecuritypolicymissing.ro.desc = La respuesta conten\u00eda una cabecera Content-Security-Policy-Report-Only, esto puede indicar una implementaci\u00f3n en progreso o un descuido en la promoci\u00f3n de pre-Prod a Prod, etc.\n\nLa Pol\u00edtica de seguridad de contenido (CSP) es una capa adicional de seguridad que ayuda a detectar y mitigar ciertos tipos de ataques, incluidos Cross Site Scripting (XSS) y ataques de inyecci\u00f3n de datos. Estos ataques se utilizan para todo, desde el robo de datos hasta la desfiguraci\u00f3n del sitio o la distribuci\u00f3n de malware. CSP proporciona un conjunto de encabezados HTTP est\u00e1ndar que permiten a los propietarios de sitios web declarar fuentes de contenido aprobadas que los navegadores deber\u00edan poder cargar en esa p\u00e1gina; los tipos cubiertos son JavaScript, CSS, marcos HTML, fuentes, im\u00e1genes y objetos incrustados como applets de Java, ActiveX, archivos de audio y video.
pscanrules.contentsecuritypolicymissing.ro.name = Cabecera Content Security Policy (CSP) Report-Only detectada
pscanrules.contentsecuritypolicymissing.ro.refs = https\://www.w3.org/TR/CSP2/\nhttps\://w3c.github.io/webappsec-csp/\nhttps\://caniuse.com/\#feat\=contentsecuritypolicy\nhttps\://content-security-policy.com/
pscanrules.contentsecuritypolicymissing.soln = Aseg\u00farese de que su servidor web, servidor de aplicaciones, balanceador de carga, etc. est\u00e9 configurado para establecer la cabecera Content-Security-Policy.

pscanrules.contenttypemissing.desc = La cabecera Content-Type falta o est\u00e1 vacia.
pscanrules.contenttypemissing.name = Cabecera Content-Type Perdida
pscanrules.contenttypemissing.name.empty = Cabecera Content-Type Vacia
pscanrules.contenttypemissing.refs = https\://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v\=vs.85)
pscanrules.contenttypemissing.soln = Aseg\u00farese de que cada p\u00e1gina establezca el valor de tipo de contenido espec\u00edfico y apropiado para el contenido que se entrega.

pscanrules.cookiehttponly.desc = Se ha establecido una cookie sin el flag HttpOnly, lo que significa que JavaScript puede acceder a la cookie. Si un script malicioso puede ser ejecutado en esta p\u00e1gina, entonces la cookie ser\u00e1 accesible y puede ser transmitida a otro sitio. Si se trata de una cookie de sesi\u00f3n, el secuestro de sesi\u00f3n puede ser posible.
pscanrules.cookiehttponly.name = Cookie Sin Flag HttpOnly
pscanrules.cookiehttponly.refs = https\://owasp.org/www-community/HttpOnly
pscanrules.cookiehttponly.soln = Aseg\u00farese de que la flag HttpOnly est\u00e1 establecida para todas las cookies.

pscanrules.cookielooselyscoped.desc = Las Cookies pueden ser delimitadas por dominio o ruta. Esta comprobaci\u00f3n solo se considera con \u00e1mbito de dominio. El \u00e1mbito de dominio aplicado a una cookie determina cuales dominios lo pueden acceder. Por ejemplo, una cookie puede ser delimitada estrictamente a un subdominio por ejemplo, www.nottrusted.com, o libremente delimitada a un dominio padre por ejemplo, nottrusted.com. En el \u00faltimo caso, cualquier subdominio de nottrusted.com puede acceder a la cookie. Las cookies libremente delimitadas son comunes en mega-aplicaciones como google.com y live.com. las cookies establecidas desde un subdominio como app.foo.bar son transmitidas solo al dominio del navegador. Sin embargo, las cookies delimitadas a un dominio de nivel de padre podr\u00eda ser transmitida al padre, o cualquier subdominio del padre.
pscanrules.cookielooselyscoped.extrainfo = El dominio de origen utilizado para la comparaci\u00f3n fue\:\n{0}\n{1}
pscanrules.cookielooselyscoped.extrainfo.cookie = {0}
pscanrules.cookielooselyscoped.name = Loosely Scoped Cookie
pscanrules.cookielooselyscoped.refs = https\://tools.ietf.org/html/rfc6265\#section-4.1\nhttps\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttps\://code.google.com/p/browsersec/wiki/Part2\#Same-origin_policy_for_cookies
pscanrules.cookielooselyscoped.soln = Siempre delimitar las cookies a FQDN (Fully Qualified Domain Name).

pscanrules.cookiesamesite.badval.desc = Se ha establecido una cookie con un valor de atributo SameSite no v\u00e1lido, lo que significa que la cookie puede enviarse como resultado de una solicitud 'cross-site'. El atributo SameSite es una medida eficaz para contrarrestar la falsificaci\u00f3n de peticiones entre sitios, la inclusi\u00f3n de scripts entre sitios y los ataques de sincronizaci\u00f3n.
pscanrules.cookiesamesite.badval.name = Cookie con atributo SameSite incorrecto
pscanrules.cookiesamesite.desc = Se ha establecido una cookie sin el atributo SameSite, lo que significa que la cookie puede ser enviada como resultado de una solicitud 'cross-site'. El atributo SameSite es una medida eficaz para contrarrestar la falsificaci\u00f3n de peticiones entre sitios, la inclusi\u00f3n de scripts entre sitios y los ataques de sincronizaci\u00f3n.
pscanrules.cookiesamesite.name = Cookie sin el atributo SameSite
pscanrules.cookiesamesite.none.desc = Se ha establecido una cookie con su atributo SameSite establecido en \u00abnone\u00bb, lo que significa que la cookie puede ser enviada como resultado de una solicitud 'cross-site'. El atributo SameSite es una medida efectiva para contrarrestar la falsificaci\u00f3n de peticiones cross-site, la inclusi\u00f3n de scripts cross-site y los ataques de sincronizaci\u00f3n.
pscanrules.cookiesamesite.none.name = Cookie con el atributo SameSite a None
pscanrules.cookiesamesite.refs = https\://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site
pscanrules.cookiesamesite.soln = Aseg\u00farese que el atributo SameSite est\u00e1 establecido como 'lax' o idealmente 'strict' para todas las cookies.

pscanrules.cookiesecureflag.desc = Se ha establecido una cookie sin el indicador de seguridad, lo que significa que se puede acceder a la cookie a trav\u00e9s de conexiones no cifradas.
pscanrules.cookiesecureflag.name = Cookie Sin Flag de Seguridad
pscanrules.cookiesecureflag.refs = https\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html
pscanrules.cookiesecureflag.soln = Siempre que una cookie contenga informaci\u00f3n sensible o sea un token de sesi\u00f3n, debe pasarse utilizando un canal cifrado. Aseg\u00farese de que el flag de seguridad est\u00e1 activado para las cookies que contengan informaci\u00f3n confidencial.

pscanrules.crossdomain.desc = La carga de datos del navegador web puede ser posible, debido a una mala configuraci\u00f3n de Cross Origin Resource Sharing (CORS) en el servidor web.
pscanrules.crossdomain.extrainfo = La configuraci\u00f3n incorrecta de CORS en el servidor web permite solicitudes de lectura entre dominios de terceros arbitrarios, utilizando API no autenticadas en este dominio. Sin embargo, las implementaciones de los navegadores web no permiten que terceros arbitrarios lean la respuesta de las API autenticadas. Esto reduce un poco el riesgo. Esta configuraci\u00f3n err\u00f3nea podr\u00eda ser utilizada por un atacante para acceder a datos que est\u00e1n disponibles de forma no autenticada, pero que utilizan alguna otra forma de seguridad, como la lista blanca de direcciones IP.
pscanrules.crossdomain.name = Configuraci\u00f3n Incorrecta Cross-Domain
pscanrules.crossdomain.refs = https\://vulncat.fortify.com/en/detail?id\=desc.config.dotnet.html5_overly_permissive_cors_policy
pscanrules.crossdomain.soln = Aseg\u00farese de que los datos confidenciales no est\u00e9n disponibles de forma no autenticada (por ejemplo, mediante listas blancas de direcciones IP).\nConfigure el encabezado HTTP "Access-Control-Allow-Origin" a un conjunto m\u00e1s restrictivo de dominios, o elimine todos los encabezados CORS por completo, para permitir que el navegador web aplique la Pol\u00edtica del Mismo Origen (SOP) de una manera m\u00e1s restrictiva.

pscanrules.crossdomainscriptinclusion.desc = La p\u00e1gina incluye uno o m\u00e1s archivos de script de un dominio de terceros.
pscanrules.crossdomainscriptinclusion.name = Inclusi\u00f3n de archivos fuente JavaScript entre dominios
pscanrules.crossdomainscriptinclusion.soln = Aseg\u00farese de que los archivos fuente JavaScript se cargan solo desde fuentes de confianza, y que las fuentes no pueden ser controladas por los usuarios finales de la aplicaci\u00f3n.

pscanrules.csp.both.desc = El mensaje conten\u00eda ambas CSP especificadas a trav\u00e9s de la cabecera y a trav\u00e9s de la etiqueta Meta. No fue posible unir estas pol\u00edticas para realizar un an\u00e1lisis. Por lo tanto, se han evaluado individualmente.
pscanrules.csp.both.name = Header & Meta
pscanrules.csp.desc = Content Security Policy (CSP) es una capa de seguridad a\u00f1adida que ayuda a detectar y mitigar ciertos tipos de ataques. Incluyendo (pero no limitado a) Cross Site Scripting (XSS), y ataques de inyecci\u00f3n de datos. Estos ataques se utilizan, para todo, desde el robo de datos a la desfiguraci\u00f3n de sitios o la distribuci\u00f3n de malware. CSP proporciona un conjunto de cabeceras HTTP est\u00e1ndar que permiten a los propietarios de sitios web declarar las fuentes de contenido aprobadas que los navegadores deber\u00edan poder cargar en esa p\u00e1gina. Los tipos cubiertos son JavaScript, CSS, marcos HTML, fuentes, im\u00e1genes y objetos incrustables como applets Java, ActiveX y archivos de audio y v\u00eddeo.
pscanrules.csp.malformed.name = Malformed Policy (No-ASCII)
pscanrules.csp.malformed.otherinfo = Se ha encontrado un car\u00e1cter no ASCII al intentar analizar la pol\u00edtica, por lo que esta no es v\u00e1lida (no se ha realizado ninguna otra evaluaci\u00f3n). Se recogieron los siguientes caracteres no v\u00e1lidos\: {0}
pscanrules.csp.meta.bad.directive.desc = La pol\u00edtica especificada a trav\u00e9s del elemento meta contiene una o ambas directivas sandbox o frame-ancestors, que no est\u00e1n permitidas dentro de las definiciones meta CSP.
pscanrules.csp.meta.bad.directive.name = Directiva inv\u00e1lida de meta pol\u00edtica
pscanrules.csp.name = CSP
pscanrules.csp.notices.errors = Errores\:
pscanrules.csp.notices.infoitems = Elementos de informaci\u00f3n\:
pscanrules.csp.notices.name = Avisos
pscanrules.csp.notices.warnings = Advertencias\:
pscanrules.csp.otherinfo.extended = \nLa(s) directiva(s)\: {0} est\u00e1(n) entre las directivas que no retroceden a default-src, omitirlas/excluirlas es lo mismo que permitir cualquier cosa.
pscanrules.csp.refs = https\://www.w3.org/TR/CSP/\nhttps\://caniuse.com/\#search\=content+security+policy\nhttps\://content-security-policy.com/\nhttps\://github.com/HtmlUnit/htmlunit-csp\nhttps\://developers.google.com/web/fundamentals/security/csp\#policy_applies_to_a_wide_variety_of_resources
pscanrules.csp.scriptsrc.unsafe.eval.name = script-src unsafe-eval
pscanrules.csp.scriptsrc.unsafe.eval.otherinfo = script-src incluye unsafe-eval.
pscanrules.csp.scriptsrc.unsafe.hashes.name = script-src unsafe-hashes
pscanrules.csp.scriptsrc.unsafe.hashes.otherinfo = script-src incluye unsafe-hashes, un atacante podr\u00e1 utilizar cualquiera de los c\u00f3digos cubiertos por dichos hashes.
pscanrules.csp.scriptsrc.unsafe.hashes.refs = https\://www.w3.org/TR/CSP3/\#unsafe-hashes-usage\nhttps\://content-security-policy.com/examples/allow-inline-script/
pscanrules.csp.scriptsrc.unsafe.name = script-src unsafe-inline
pscanrules.csp.scriptsrc.unsafe.otherinfo = script-src incluye unsafe-inline.
pscanrules.csp.soln = Aseg\u00farese de que su servidor web, servidor de aplicaci\u00f3n, balanceador de carga, etc. est\u00e1 configurado apropiadamente para establecer la cabecera de Pol\u00edtica de Seguridad de Contenido.
pscanrules.csp.stylesrc.unsafe.hashes.name = style-src unsafe-hashes
pscanrules.csp.stylesrc.unsafe.hashes.otherinfo = style-src incluye unsafe-hashes, un atacante podr\u00e1 utilizar cualquiera de los c\u00f3digos cubiertos por dichos hashes.
pscanrules.csp.stylesrc.unsafe.hashes.refs = https\://www.w3.org/TR/CSP3/\#unsafe-hashes-usage\nhttps\://content-security-policy.com/examples/allow-inline-style/
pscanrules.csp.stylesrc.unsafe.name = style-src unsafe-inline
pscanrules.csp.stylesrc.unsafe.otherinfo = style-src incluye unsafe-inline.
pscanrules.csp.wildcard.name = Directiva Wildcard
pscanrules.csp.wildcard.otherinfo = Las siguientes directivas permiten fuentes comod\u00edn (o ancestros), no est\u00e1n definidas, o est\u00e1n definidas de forma demasiado amplia\:\n{0}
pscanrules.csp.xcsp.name = X-Content-Security-Policy
pscanrules.csp.xcsp.otherinfo = Se ha encontrado la cabecera X-Content-Security-Policy en esta respuesta. Aunque es una buena se\u00f1al de que CSP est\u00e1 implementado hasta cierto punto, la pol\u00edtica especificada en esta cabecera no ha sido analizada por ZAP. Para asegurar un soporte completo por parte de los navegadores modernos, aseg\u00farese de que la cabecera Content-Security-Policy est\u00e1 definida y adjuntada a las respuestas.
pscanrules.csp.xwkcsp.name = X-WebKit-CSP
pscanrules.csp.xwkcsp.otherinfo = Se ha encontrado la cabecera X-WebKit-CSP en esta respuesta. Aunque es una buena se\u00f1al que CSP est\u00e9 implementado hasta cierto punto, la pol\u00edtica especificada en esta cabecera no ha sido analizada por ZAP. Para asegurar un soporte completo por parte de los navegadores modernos, aseg\u00farate de que la cabecera Content-Security-Policy est\u00e1 definida y adjuntada a las respuestas.

pscanrules.desc = Reglas reci\u00e9n a\u00f1adidas de escaneo pasivo.

pscanrules.directorybrowsing.desc = Es posible ver un listado del contenido del directorio. Los listados de directorios pueden revelar scripts ocultos, archivos de inclusi\u00f3n, archivos fuente de copia de seguridad, etc., a los que se puede acceder para revelar informaci\u00f3n sensible.
pscanrules.directorybrowsing.extrainfo = Servidor web identificado\: {0}
pscanrules.directorybrowsing.name = Exploraci\u00f3n de Directorios
pscanrules.directorybrowsing.refs = https\://cwe.mitre.org/data/definitions/548.html
pscanrules.directorybrowsing.soln = Configure el servidor web para desactivar la exploraci\u00f3n de directorios.

pscanrules.hashdisclosure.desc = El servidor web revel\u00f3 un hash.
pscanrules.hashdisclosure.name = Divulgaci\u00f3n de hash
pscanrules.hashdisclosure.refs = https\://openwall.info/wiki/john/sample-hashes
pscanrules.hashdisclosure.soln = Asegurar que los hashes que se usan para proteger credenciales u otros recursos no sean filtrados por el servidor web o la base de datos. Normalmente no es necesario que los hashes de las contrase\u00f1as sean accesibles para el navegador web.

pscanrules.heartbleed.desc = Las implementaciones de TLS y DTLS en OpenSSL 1.0.1 antes de 1.0.1g no manejan correctamente los paquetes Heartbeat Extension, lo que permite a atacantes remotos obtener informaci\u00f3n sensible de la memoria del proceso a trav\u00e9s de paquetes manipulados que desencadenan una sobrelectura del b\u00fafer, revelando potencialmente informaci\u00f3n sensible.
pscanrules.heartbleed.extrainfo = {0} est\u00e1 en uso. Sin embargo, tenga en cuenta que la versi\u00f3n informada podr\u00eda contener correcciones de seguridad antiguas (back-ported) , por lo que el problema podr\u00eda ser un falso positivo. Esto es com\u00fan en Red Hat, por ejemplo.
pscanrules.heartbleed.name = Vulnerabilidad de OpenSSL de Heartbleed (indicativo)
pscanrules.heartbleed.refs = https\://nvd.nist.gov/vuln/detail/CVE-2014-0160
pscanrules.heartbleed.soln = Actualice a OpenSSL 1.0.1g o superior. Vuelva a emitir los certificados HTTPS. Cambie las claves privadas asim\u00e9tricas y las claves secretas compartidas, ya que pueden haber sido comprometidas, sin que haya evidencia de ello en los archivos de registro del servidor.

pscanrules.infoprivateaddressdisclosure.desc = Se ha encontrado una IP privada (como 10.x.x.x, 172.x.x.x, 192.168.x.x) o un nombre de host privado de Amazon EC2 (por ejemplo, ip-10-0-56-78) en el cuerpo de la respuesta HTTP. Esta informaci\u00f3n podr\u00eda ser \u00fatil para futuros ataques dirigidos a sistemas internos.
pscanrules.infoprivateaddressdisclosure.name = Revelaci\u00f3n de IP privada
pscanrules.infoprivateaddressdisclosure.refs = https\://tools.ietf.org/html/rfc1918
pscanrules.infoprivateaddressdisclosure.soln = Eliminar la direcci\u00f3n IP privada del cuerpo de la respuesta HTTP. Para los comentarios, utilice comentarios JSP/ASP/PHP en lugar de comentarios HTML/JavaScript que pueden ser vistos por los navegadores de los clientes.

pscanrules.informationdisclosuredebugerrors.desc = La respuesta parec\u00eda contener mensajes de error comunes devueltos por plataformas como ASP.NET, y servidores Web como IIS y Apache. Puede configurar la lista de mensajes de depuraci\u00f3n comunes.
pscanrules.informationdisclosuredebugerrors.name = Divulgaci\u00f3n de Informaci\u00f3n - Mensajes de Error de Depuraci\u00f3n
pscanrules.informationdisclosuredebugerrors.soln = Desactivar los mensajes de depuraci\u00f3n antes de pasar a producci\u00f3n.

pscanrules.informationdisclosureinurl.desc = La solicitud parec\u00eda contener informaci\u00f3n sensible filtrada en la URL. Esto puede violar las pol\u00edticas de cumplimiento de PCI y de la mayor\u00eda de las organizaciones. Puede configurar la lista de cadenas de esta comprobaci\u00f3n para a\u00f1adir o eliminar valores espec\u00edficos de su entorno.
pscanrules.informationdisclosureinurl.name = Divulgaci\u00f3n de Informaci\u00f3n - Informaci\u00f3n sensible en URL
pscanrules.informationdisclosureinurl.otherinfo.cc = El URL parece contener informaci\u00f3n de tarjetas de cr\u00e9dito.
pscanrules.informationdisclosureinurl.otherinfo.email = El URL contiene direcci\u00f3n(es) de correo electr\u00f3nico.
pscanrules.informationdisclosureinurl.otherinfo.sensitiveinfo = La URL contiene informaci\u00f3n potencialmente sensible. La siguiente cadena fue encontrada a trav\u00e9s del patr\u00f3n\: {0}\n{1}
pscanrules.informationdisclosureinurl.otherinfo.ssn = La URL parece contener n\u00fameros de la Seguridad Social de EE.UU.
pscanrules.informationdisclosureinurl.soln = No pase informaci\u00f3n sensible en URIs.

pscanrules.informationdisclosurereferrer.bin.field = N\u00famero de identificaci\u00f3n bancaria\:
pscanrules.informationdisclosurereferrer.brand.field = Marca\:
pscanrules.informationdisclosurereferrer.category.field = Categor\u00eda\:
pscanrules.informationdisclosurereferrer.desc = El encabezado HTTP podr\u00eda haber filtrado un par\u00e1metro potencialmente sensible a otro dominio. Esto puede violar el PCI y las pol\u00edticas de cumplimientos m\u00e1s organizadas. Puede configurar la lista de cadenas para que esta comprobaci\u00f3n agregue o remueva espec\u00edficos valores de su entorno.
pscanrules.informationdisclosurereferrer.issuer.field = Editor\:
pscanrules.informationdisclosurereferrer.name = Divulgaci\u00f3n de Informaci\u00f3n - Informaci\u00f3n sensible en el Encabezado de Referencia HTTP
pscanrules.informationdisclosurereferrer.otherinfo.cc = La URL en el campo de encabezado de referencia HTTP aparenta contener informaci\u00f3n de tarjetas de cr\u00e9dito.
pscanrules.informationdisclosurereferrer.otherinfo.email = La URL en el campo de encabezado de referencia HTTP contiene direcci\u00f3n(es) de correo electr\u00f3nico.
pscanrules.informationdisclosurereferrer.otherinfo.sensitiveinfo = La URL en el campo de encabezado de referencia HTTP parece contener informaci\u00f3n sensible.
pscanrules.informationdisclosurereferrer.otherinfo.ssn = La URL en el campo de encabezado de referencia parece contener n\u00famero(s) de seguridad social de Estados Unidos.
pscanrules.informationdisclosurereferrer.soln = No muestre informaci\u00f3n sensible en URIs.

pscanrules.informationdisclosuresuspiciouscomments.desc = La respuesta parece contener comentarios sospechosos que pueden ayudar a un atacante. Nota\: Las coincidencias realizadas dentro de los scripts o archivos se refieren a todo el contenido, no solo a los comentarios.
pscanrules.informationdisclosuresuspiciouscomments.name = Divulgaci\u00f3n de informaci\u00f3n - Comentarios sospechosos
pscanrules.informationdisclosuresuspiciouscomments.otherinfo = Se utiliz\u00f3 el siguiente patr\u00f3n\: {0} y se detect\u00f3 en el elemento que comienza por\: "{1}", ver campo de evidencia para el comentario/snippet sospechoso.
pscanrules.informationdisclosuresuspiciouscomments.otherinfo2 = Se utiliz\u00f3 el siguiente patr\u00f3n\: {0} y se detect\u00f3 {2} veces, la primera en el elemento que empieza por\: "{1}", v\u00e9ase el campo de pruebas para el comentario/snippet sospechoso.
pscanrules.informationdisclosuresuspiciouscomments.soln = Eliminar todos los comentarios que muestren informaci\u00f3n que pueda ayudar a un atacante y solucionar el problema al que se refieren.

pscanrules.infosessionidurl.desc = La reescritura de URL se utiliza para rastrear el ID de sesi\u00f3n del usuario. El ID de sesi\u00f3n puede ser revelado a trav\u00e9s del encabezado cross-site referer. Adem\u00e1s, el ID de sesi\u00f3n puede almacenarse en el historial del navegador o en los registros del servidor.
pscanrules.infosessionidurl.name = ID de sesi\u00f3n en la Reescritura de URL
pscanrules.infosessionidurl.referrer.alert = Referer Expone el ID de Sesi\u00f3n
pscanrules.infosessionidurl.referrer.desc = Se encontr\u00f3 un hiperv\u00ednculo apuntando a otro nombre de host. Como se utiliza la reescritura de URL de ID de sesi\u00f3n, puede ser revelada en la cabecera referer a hosts externos.
pscanrules.infosessionidurl.referrer.soln = Esto es un riesgo si el ID de sesi\u00f3n es sensible y el hiperv\u00ednculo se refiere a un host externo o de terceros. Para contenido seguro, ponga el ID de sesi\u00f3n en una cookie de sesi\u00f3n segura.
pscanrules.infosessionidurl.refs = https\://seclists.org/webappsec/2002/q4/111
pscanrules.infosessionidurl.soln = Para contenido seguro, ponga el ID de sesi\u00f3n en una cookie. Para ser a\u00fan m\u00e1s seguro considere usar una combinaci\u00f3n de cookie y URL rewrite.

pscanrules.insecureauthentication.desc = M\u00e9todo HTTP de autenticaci\u00f3n b\u00e1sica o por intercambio de hash, se ha utilizado sobre una conexi\u00f3n no segura. Las credenciales pueden ser leu00eddas y luego reutilizadas por alguien con acceso a la red.
pscanrules.insecureauthentication.name = M\u00e9todo de autenticaci\u00f3n d\u00e9bil
pscanrules.insecureauthentication.refs = https\://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html
pscanrules.insecureauthentication.soln = Proteger la conexi\u00f3n usando HTTPS o usar un mecanismo de autenticaci\u00f3n m\u00e1s fuerte.

pscanrules.insecureformload.desc = Esta comprobaci\u00f3n busca p\u00e1ginas HTTP inseguras que alojen formularios HTTPS. El problema es que una p\u00e1gina HTTP insegura puede ser f\u00e1cilmente secuestrada mediante MITM y el formulario HTTPS seguro puede ser reemplazado o suplantado.
pscanrules.insecureformload.extrainfo = La respuesta a la siguiente solicitud a trav\u00e9s de HTTP inclu\u00eda un valor de atributo de acci\u00f3n de etiqueta de formulario HTTPS\:\n\n{0}\nEl contexto era\:\n\n{1}
pscanrules.insecureformload.name = Transici\u00f3n Insegura de HTTP a HTTPS en la Publicaci\u00f3n del Formulario
pscanrules.insecureformload.soln = Usar HTTPS para p\u00e1ginas de destino que alojan formularios seguros.

pscanrules.insecureformpost.desc = Esta comprobaci\u00f3n identifica p\u00e1ginas HTTPS seguras que alojan formularios HTTP inseguros. El problema es que una p\u00e1gina segura pasa a ser insegura cuando se cargan datos a trav\u00e9s de un formulario. El usuario puede pensar que est\u00e1 enviando datos a una p\u00e1gina segura cuando en realidad no lo est\u00e1 haciendo.
pscanrules.insecureformpost.extrainfo = La respuesta a la siguiente solicitud a trav\u00e9s de HTTPS inclu\u00eda un valor de atributo de acci\u00f3n de etiqueta de formulario HTTP\:\n\n{0}\nEl contexto era\:\n\n{1}
pscanrules.insecureformpost.name = Transici\u00f3n Insegura de HTTPS a HTTP en Post de Formulario
pscanrules.insecureformpost.soln = Aseg\u00farese de que los datos confidenciales solo se env\u00edan a trav\u00e9s de canales HTTPS seguros.

pscanrules.insecurejsfviewstate.desc = La respuesta a la siguiente direcci\u00f3n URL contiene un valor ViewState que no posee ninguna protecci\u00f3n criptogr\u00e1fica.
pscanrules.insecurejsfviewstate.extrainfo = JSF ViewState [{0}] es inseguro.
pscanrules.insecurejsfviewstate.name = JSF ViewState inseguro
pscanrules.insecurejsfviewstate.refs = https\://www.trustwave.com/spiderlabs/advisories/TWSL2010-001.txt
pscanrules.insecurejsfviewstate.soln = Asegure VIEWSTATE con una MAC espec\u00edfica para su entorno.

pscanrules.linktarget.desc = Al menos un enlace en esta p\u00e1gina es vulnerable a Reverse tabnabbing, ya que utiliza un atributo target sin usar ambas palabras clave "noopener" y "noreferrer" en el atributo "rel", lo que permite a la p\u00e1gina de destino tomar el control de esta p\u00e1gina.
pscanrules.linktarget.name = Tabnabbing inverso
pscanrules.linktarget.refs = https\://owasp.org/www-community/attacks/Reverse_Tabnabbing\nhttps\://dev.to/ben/the-targetblank-vulnerability-by-example\nhttps\://mathiasbynens.github.io/rel-noopener/\nhttps\://medium.com/@jitbit/target-blank-the-most-underestimated-vulnerability-ever-96e328301f4c
pscanrules.linktarget.soln = No utilice un atributo target, o si tiene que hacerlo a\u00f1ada tambi\u00e9n el atributo\: rel\="noopener noreferrer".

pscanrules.mixedcontent.desc = La p\u00e1gina incluye contenido mixto, es decir, contenido al que se accede a trav\u00e9s de HTTP en lugar de HTTPS.
pscanrules.mixedcontent.name = Las P\u00e1ginas Seguras Incluyen Contenido Mixto
pscanrules.mixedcontent.name.inclscripts = Las P\u00e1ginas Seguras Incluyen Contenido Mixto (Incluyendo Scripts)
pscanrules.mixedcontent.refs = https\://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html
pscanrules.mixedcontent.soln = Una p\u00e1gina que est\u00e9 disponible sobre SSL/TLS debe estar compuesta completamente de contenido que se transmita sobre SSL/TLS.\nLa p\u00e1gina no debe contener ning\u00fan contenido que se transmita sobre HTTP sin cifrar.\nEsto incluye contenido de sitios de terceros.

pscanrules.modernapp.desc = La aplicaci\u00f3n parece ser una aplicaci\u00f3n web moderna. Si necesita explorarla autom\u00e1ticamente, el Ajax Spider puede ser m\u00e1s eficaz que el est\u00e1ndar.
pscanrules.modernapp.name = Aplicaci\u00f3n Web Moderna
pscanrules.modernapp.other.links = Se han encontrado enlaces que no tienen atributos href tradicionales, lo que indica que se trata de una aplicaci\u00f3n web moderna.
pscanrules.modernapp.other.nolinks = No se han encontrado enlaces aunque s\u00ed scripts, lo que indica que se trata de una aplicaci\u00f3n web moderna.
pscanrules.modernapp.other.noscript = Se ha encontrado una etiqueta noScript, lo que indica que la aplicaci\u00f3n funciona de forma diferente con JavaScript activado que cuando no lo est\u00e1.
pscanrules.modernapp.other.self = Se han encontrado enlaces con un objetivo '_self' - esto es usado a menudo por los frameworks modernos para forzar una recarga completa de la p\u00e1gina.
pscanrules.modernapp.soln = Se trata de una alerta informativa, por lo que no es necesario realizar ning\u00fan cambio.

pscanrules.name = Reglas Escaneo Pasivo

pscanrules.noanticsrftokens.alert.extrainfo = No se ha encontrado ning\u00fan token Anti-CSRF {0} conocido en el siguiente formulario HTML\: {1}.
pscanrules.noanticsrftokens.desc = No se encontraron tokens Anti-CSRF en formulario de env\u00edo HTML.
pscanrules.noanticsrftokens.extrainfo.annotation = Alerta informativa, porque el formulario tiene una anotaci\u00f3n de seguridad que indica que no necesita token anti-CSRF. Se debe confirmar manualmente para asegurar que la anotaci\u00f3n es correcta.
pscanrules.noanticsrftokens.name = Ausencia de Tokens Anti-CSRF

pscanrules.payloader.desc = Proporciona soporte para los payloads personalizados en las reglas de escaneo.
pscanrules.payloader.name = Lanzar reglas de escaneo pasivo con payloads personalizados

pscanrules.pii.bin.field = N\u00famero de identificaci\u00f3n bancaria\:
pscanrules.pii.brand.field = Marca\:
pscanrules.pii.category.field = Categor\u00eda\:
pscanrules.pii.desc = La respuesta contiene Informaci\u00f3n de Identificaci\u00f3n Personal, como el n\u00famero de CC, SSN y datos sensibles similares.
pscanrules.pii.extrainfo = Tipo de tarjeta de cr\u00e9dito detectada\: {0}
pscanrules.pii.issuer.field = Editor\:
pscanrules.pii.name = Revelaci\u00f3n PII
pscanrules.pii.soln = Compruebe la respuesta para detectar la posible presencia de informaci\u00f3n de identificaci\u00f3n personal (PII), aseg\u00farese de que la aplicaci\u00f3n no filtra nada sensible.

pscanrules.polyfillcdnscript.desc1 = La p\u00e1gina incluye uno o m\u00e1s archivos de script cargados desde uno de los dominios 'polyfill'.\nEstos no est\u00e1n asociados con la librer\u00eda polyfill.js y se sabe que sirven contenido malicioso.
pscanrules.polyfillcdnscript.desc2 = La p\u00e1gina incluye uno o m\u00e1s scripts que parecen incluir una referencia a uno de los dominios 'polyfill'.\nEstos no est\u00e1n asociados con la biblioteca polyfill.js y se sabe que sirven contenido malicioso.\nDeber\u00eda comprobar si se trata de una referencia segura (por ejemplo, en un comentario) o si el script est\u00e1 cargando contenido de ese dominio.
pscanrules.polyfillcdnscript.name = Script Servido Desde Dominio Malicioso (polyfill)
pscanrules.polyfillcdnscript.refs = https\://sansec.io/research/polyfill-supply-chain-attack\nhttps\://x.com/triblondon/status/1761852117579427975
pscanrules.polyfillcdnscript.soln = Cambiar todos los scripts para que utilicen una fuente buena conocida basada en su documentaci\u00f3n.

pscanrules.retrievedfromcache.desc = El contenido se ha recuperado de una cach\u00e9 compartida. Si los datos de respuesta son sensibles, personales o espec\u00edficos del usuario, esto puede resultar en la filtraci\u00f3n de informaci\u00f3n sensible. En algunos casos, esto puede incluso resultar en que un usuario obtenga el control completo de la sesi\u00f3n de otro usuario, dependiendo de la configuraci\u00f3n de los componentes de cach\u00e9 en uso en su entorno. Este problema se produce principalmente cuando los servidores de cach\u00e9, como los "proxy", est\u00e1n configurados en la red local. Esta configuraci\u00f3n se encuentra t\u00edpicamente en entornos corporativos o educativos, por ejemplo.
pscanrules.retrievedfromcache.extrainfo.http11ageheader = La presencia de la cabecera 'Age' indica que se est\u00e1 utilizando un servidor de cach\u00e9 compatible con HTTP/1.1.
pscanrules.retrievedfromcache.name = Recuperado de la Cach\u00e9
pscanrules.retrievedfromcache.refs = https\://tools.ietf.org/html/rfc7234\nhttps\://tools.ietf.org/html/rfc7231\nhttps\://www.rfc-editor.org/rfc/rfc9110.html
pscanrules.retrievedfromcache.soln = V\u00e1lida que la respuesta no contenga informaci\u00f3n confidencial, personal o espec\u00edfica del usuario. Si es as\u00ed, considere el uso de los siguientes encabezados de respuesta HTTP para limitar o evitar que otro usuario almacene y recupere el contenido de la memoria cach\u00e9\:\nCache-Control\: no-cache, no-store, must-revalidate, private\nPragma\: no-cache\nExpires\: 0\nEsta configuraci\u00f3n indica a los servidores de almacenamiento en cach\u00e9 compatibles con HTTP 1.0 y HTTP 1.1 que no almacenen la respuesta ni la recuperen (sin validaci\u00f3n) de la memoria cach\u00e9 en respuesta a una solicitud similar.

pscanrules.serverheader.rule.name = Cabecera de Respuesta del Servidor HTTP

pscanrules.serverheaderinfoleak.desc = El servidor web/aplicaci\u00f3n est\u00e1 filtrando la aplicaci\u00f3n que utiliza como servidor web a trav\u00e9s de la cabecera de respuesta HTTP "Server". El acceso a dicha informaci\u00f3n puede facilitar a los atacantes la identificaci\u00f3n de otras vulnerabilidades a las que est\u00e1 sujeto su servidor web/aplicaci\u00f3n. Esta informaci\u00f3n por s\u00ed sola, es decir, sin una cadena de versi\u00f3n, no es muy peligrosa para la seguridad de un servidor; sin embargo, esta informaci\u00f3n en el campo de cabecera de respuesta es casi siempre in\u00fatil y, por lo tanto, solo es un vector de ataque obsoleto.
pscanrules.serverheaderinfoleak.general.refs = https\://httpd.apache.org/docs/current/mod/core.html\#servertokens\nhttps\://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v\=pandp.10)\nhttps\://www.troyhunt.com/shhh-dont-let-your-response-headers/
pscanrules.serverheaderinfoleak.general.soln = Aseg\u00farese de que su servidor web, servidor de aplicaciones, balanceador de carga, etc. est\u00e1 configurado para suprimir la cabecera "Server" o proporcionar detalles gen\u00e9ricos.
pscanrules.serverheaderinfoleak.name = El servidor filtra su aplicaci\u00f3n de servidor web a trav\u00e9s del campo "Server" del encabezado de respuesta HTTP

pscanrules.serverheaderversioninfoleak.desc = El servidor web/aplicaci\u00f3n est\u00e1 filtrando informaci\u00f3n de versi\u00f3n a trav\u00e9s de la cabecera de respuesta HTTP "Server". El acceso a dicha informaci\u00f3n puede facilitar a los atacantes la identificaci\u00f3n de otras vulnerabilidades a las que est\u00e1 sujeto su servidor web/aplicaci\u00f3n.
pscanrules.serverheaderversioninfoleak.name = El servidor filtra informaci\u00f3n de versi\u00f3n a trav\u00e9s del campo "Server" del encabezado de respuesta HTTP

pscanrules.stricttransportsecurity.compliance.malformed.content.desc = Se encontr\u00f3 una cabecera HTTP Strict Transport Security (HSTS), pero contiene alg\u00fan contenido que no se esperaba (quiz\u00e1s comillas rizadas), la expectativa es que el contenido sean caracteres ASCII imprimibles.
pscanrules.stricttransportsecurity.compliance.malformed.content.name = Cabecera Strict-Transport-Security Content Tiene un formato erroneo (Non-compliant with Spec)
pscanrules.stricttransportsecurity.compliance.malformed.content.refs = https\://datatracker.ietf.org/doc/html/rfc6797
pscanrules.stricttransportsecurity.compliance.malformed.content.soln = Revise la configuraci\u00f3n de este control. Aseg\u00farese de que su servidor web, servidor de aplicaciones, equilibrador de carga, etc. est\u00e1 configurado para establecer Strict-Transport-Security con el contenido adecuado.
pscanrules.stricttransportsecurity.compliance.max.age.malformed.desc = Se encontr\u00f3 una cabecera HTTP Strict Transport Security (HSTS), pero contiene comillas que preceden a la directiva de edad m\u00e1xima (el valor de edad m\u00e1xima se puede citar, pero la directiva en s\u00ed no). Consulte RFC 6797 para obtener m\u00e1s detalles.\nHTTP Strict Transport Security (HSTS) es un mecanismo de pol\u00edtica de seguridad web mediante el cual un servidor web declara que los agentes de usuario que cumplen (como un navegador web) deben interactuar con \u00e9l utilizando s\u00f3lo conexiones HTTPS seguras (es decir, HTTP en capas sobre TLS/SSL).
pscanrules.stricttransportsecurity.compliance.max.age.malformed.name = Cabecera Strict-Transport-Security Max-Age Mal formado (No cumple con las especificaciones)
pscanrules.stricttransportsecurity.compliance.max.age.malformed.refs = https\://datatracker.ietf.org/doc/html/rfc6797\#section-6.1
pscanrules.stricttransportsecurity.compliance.max.age.malformed.soln = Revisa la configuraci\u00f3n de esta prueba. Aseg\u00farese de que su servidor web, servidor de aplicaciones, balanceador de carga, etc. est\u00e9n configurados para establecer Strict-Transport-Security con un formato adecuado.
pscanrules.stricttransportsecurity.compliance.max.age.missing.desc = Se encontr\u00f3 una cabecera HTTP Strict Transport Security (HSTS), pero falta la directiva max-age (o falta un valor en la directiva). Consulte RFC 6797 para obtener m\u00e1s detalles.\nHTTP Strict Transport Security (HSTS) es un mecanismo de pol\u00edtica de seguridad web mediante el cual un servidor web declara que los agentes de usuario que cumplen (como un navegador web) deben interactuar con \u00e9l utilizando s\u00f3lo conexiones HTTPS seguras (es decir, HTTP en capas sobre TLS/SSL).
pscanrules.stricttransportsecurity.compliance.max.age.missing.name = Strict-Transport-Security Sin Max-Age (No cumple con las especificaciones)
pscanrules.stricttransportsecurity.compliance.max.age.missing.refs = https\://datatracker.ietf.org/doc/html/rfc6797\#section-6.2
pscanrules.stricttransportsecurity.compliance.max.age.missing.soln = Revise la configuraci\u00f3n de este control. Aseg\u00farese de que su servidor web, servidor de aplicaciones, balanceador de carga, etc. est\u00e9 configurado para establecer Strict-Transport-Security con un valor de edad m\u00e1xima adecuado.
pscanrules.stricttransportsecurity.compliance.meta.desc = Se encontr\u00f3 una etiqueta META HTTP Strict Transport Security (HSTS), que define HTTP Strict Transport Security (HSTS) a trav\u00e9s de una etiqueta META expl\u00edcitamente no es compatible con la especificaci\u00f3n (RFC 6797).
pscanrules.stricttransportsecurity.compliance.meta.name = Strict-Transport-Security Definido por medio de etiqueta META (No cumple con las especificaciones)
pscanrules.stricttransportsecurity.compliance.meta.refs = https\://datatracker.ietf.org/doc/html/rfc6797\#section-8.5
pscanrules.stricttransportsecurity.compliance.meta.soln = No intente configurar HTTP Strict Transport Security (HSTS) a trav\u00e9s de una etiqueta META.
pscanrules.stricttransportsecurity.compliance.multiple.header.desc = Se encontraron cabeceras HTTP Strict Transport Security (HSTS), una respuesta con m\u00faltiples entradas de encabezado HSTS no cumple con la especificaci\u00f3n (RFC 6797) y s\u00f3lo se procesar\u00e1 el primer encabezado HSTS. Los dem\u00e1s ser\u00e1n ignorados por los navegadores o la pol\u00edtica HSTS puede ser aplicado incorrectamente.\nHTTP Strict Transport Security (HSTS) es un mecanismo de pol\u00edtica de seguridad web mediante el cual un servidor web declara que los agentes de usuario que cumplen (como un navegador web) deben interactuar con \u00e9l utilizando s\u00f3lo conexiones HTTPS seguras (es decir, HTTP en capas sobre TLS/SSL).
pscanrules.stricttransportsecurity.compliance.multiple.header.name = Strict-Transport-Security M\u00faltiples Cabeceras (No cumple con las especificaciones)
pscanrules.stricttransportsecurity.compliance.multiple.header.refs = https\://datatracker.ietf.org/doc/html/rfc6797\#section-8.1
pscanrules.stricttransportsecurity.compliance.multiple.header.soln = Aseg\u00farese de que s\u00f3lo un componente en su pila\: c\u00f3digo, servidor web, servidor de aplicaciones, balanceador de carga, etc. est\u00e9 configurado para establecer o agregar un encabezado HTTP Strict-Transport-Security (HSTS).
pscanrules.stricttransportsecurity.desc = HTTP Strict Transport Security (HSTS) es un mecanismo de pol\u00edtica de seguridad web mediante el cual un servidor web declara que los agentes de usuario conformes (como un navegador web) deben interactuar con \u00e9l utilizando \u00fanicamente conexiones HTTPS seguras (es decir, HTTP superpuesto a TLS/SSL). HSTS es un protocolo de seguimiento de est\u00e1ndares del IETF y se especifica en RFC 6797.
pscanrules.stricttransportsecurity.max.age.desc = Se encontr\u00f3 un encabezado HTTP Strict Transport Security (HSTS), pero contiene la directiva max-age\=0 que desactiva el control e indica a los navegadores que restablezcan cualquier configuraci\u00f3n anterior relacionada con HSTS. Consulte RFC 6797 para obtener m\u00e1s detalles.\nHTTP Strict Transport Security (HSTS) es un mecanismo de pol\u00edtica de seguridad web mediante el cual un servidor web declara que los agentes de usuario que cumplen (como un navegador web) deben interactuar con \u00e9l utilizando s\u00f3lo conexiones HTTPS seguras (ej., HTTP sobre TLS/SSL).
pscanrules.stricttransportsecurity.max.age.name = Strict-Transport-Security Deshabilitado
pscanrules.stricttransportsecurity.max.age.refs = https\://datatracker.ietf.org/doc/html/rfc6797\#section-6.2
pscanrules.stricttransportsecurity.max.age.soln = Revise la configuraci\u00f3n de este control. Aseg\u00farese de que su servidor web, servidor de aplicaciones, balanceador de carga, etc. est\u00e9 configurado para establecer Strict-Transport-Security con un valor de edad m\u00e1xima adecuado.
pscanrules.stricttransportsecurity.name = Strict-Transport-Security Header No Establecido
pscanrules.stricttransportsecurity.plain.resp.desc = Se encontr\u00f3 un cabecera HTTP Strict Transport Security (HSTS), pero las cabeceras HSTS se ignoran en las respuestas de texto plano (no HTTPS).\nHTTP Strict Transport Security (HSTS) es un mecanismo de pol\u00edtica de seguridad web mediante el cual un servidor web declara que los agentes de usuario que cumplen (como un navegador web) deben interactuar con \u00e9l utilizando solo conexiones HTTPS seguras (es decir, HTTP en capas sobre TLS/SSL).
pscanrules.stricttransportsecurity.plain.resp.name = Cabecera Strict-Transport-Security en una respuesta HTTP en texto plano
pscanrules.stricttransportsecurity.plain.resp.refs = https\://datatracker.ietf.org/doc/html/rfc6797\#section-8.1
pscanrules.stricttransportsecurity.plain.resp.soln = Revise la configuraci\u00f3n de este control. Aseg\u00farese de que su servidor web, servidor de aplicaciones, balanceador de carga, etc. est\u00e9n configurados para establecer la cabecera Strict-Transport-Security en las respuestas HTTPS.
pscanrules.stricttransportsecurity.refs = https\://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html\nhttps\://owasp.org/www-community/Security_Headers\nhttps\://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttps\://caniuse.com/stricttransportsecurity\nhttps\://datatracker.ietf.org/doc/html/rfc6797
pscanrules.stricttransportsecurity.rule.name = Strict-Transport-Security Header
pscanrules.stricttransportsecurity.soln = Aseg\u00farese de que su servidor web, servidor de aplicaciones, balanceador de carga, etc. est\u00e1 configurado para aplicar Strict-Transport-Security.

pscanrules.timestampdisclosure.desc = Una marca de tiempo fue revelada por la aplicaci\u00f3n/servidor web.
pscanrules.timestampdisclosure.extrainfo = {0}, que se eval\u00faa como\: {1}.
pscanrules.timestampdisclosure.name = Divulgaci\u00f3n de Marcas de Tiempo
pscanrules.timestampdisclosure.refs = https\://cwe.mitre.org/data/definitions/200.html
pscanrules.timestampdisclosure.soln = Confirmar que los datos encontrados de informaci\u00f3n sobre la marca de tiempo no son sensibles, ni se pueden usar en patrones explotables de divulgaci\u00f3n.

pscanrules.usercontrolledcharset.desc = Esta verificaci\u00f3n examina la entrada proporcionada por el usuario en los par\u00e1metros de la cadena de consulta y los datos POST para identificar d\u00f3nde las declaraciones de tipo de contenido (Content-Type) o de codificaci\u00f3n de caracteres (charset) en etiquetas meta podr\u00edan estar controladas por el usuario. Dichas declaraciones de codificaci\u00f3n de caracteres siempre deben ser declaradas por la aplicaci\u00f3n. Si un atacante puede controlar la codificaci\u00f3n de la respuesta, podr\u00eda manipular el HTML para realizar ataques de XSS u otros tipos de ataques. Por ejemplo, si un atacante controla el valor de la codificaci\u00f3n de caracteres en un elemento <meta>, podr\u00eda declarar UTF-7 e incluir suficiente payload controlado por el usuario al principio del documento HTML para que sea interpretado como UTF-7. Al codificar su payload en UTF-7, el atacante podr\u00eda eludir cualquier protecci\u00f3n contra XSS en el servidor e incrustar un script en la p\u00e1gina.
pscanrules.usercontrolledcharset.extrainfo = A(n) [{0}] tag [{1}] attribute\n\nLa entrada de usuario encontrada fue\:\n{2}\={3}\n\nEl valor del juego de caracteres que controlaba era\:\n{4}.
pscanrules.usercontrolledcharset.name = Juego de caracteres controlado por el usuario
pscanrules.usercontrolledcharset.soln = Fuerza UTF-8 en todas las declaraciones de conjuntos de caracteres. Si se requiere la entrada del usuario para decidir una declaraci\u00f3n de juego de caracteres, aseg\u00farese de que s\u00f3lo se use una lista permitida.

pscanrules.usercontrolledcookie.desc = Esta comprobaci\u00f3n examina la entrada proporcionada por el usuario en par\u00e1metros de cadenas de consulta y datos POST para identificar d\u00f3nde podr\u00edan estar controlados los par\u00e1metros de las cookies. Esto se denomina ataque de envenenamiento de cookies, y se convierte en explotable cuando un atacante puede manipular la cookie de varias maneras. En algunos casos esto no ser\u00e1 explotable, sin embargo, permitir que los par\u00e1metros URL establezcan valores de cookies es generalmente considerado un bug.
pscanrules.usercontrolledcookie.extrainfo = {0}Esto se identific\u00f3 en\:\n\n{1}\n\nSe encontr\u00f3 una entrada de usuario en la siguiente cookie\:\n{2}\n\nLa entrada de usuario fue\:\n{3}\={4}
pscanrules.usercontrolledcookie.extrainfo.get = Un atacante puede ser capaz de envenenar los valores de las cookies a trav\u00e9s de par\u00e1metros URL. Intente inyectar un punto y coma para ver si puede a\u00f1adir valores de cookies (por ejemplo, name\=controlledValue;name\=anotherValue;).\n\n
pscanrules.usercontrolledcookie.extrainfo.post = Un atacante puede ser capaz de envenenar los valores de las cookies a trav\u00e9s de par\u00e1metros POST. Para comprobar si se trata de un problema m\u00e1s serio, deber\u00eda intentar reenviar esa petici\u00f3n como GET, con el par\u00e1metro POST incluido como par\u00e1metro de cadena de consulta. Por ejemplo\: https\://nottrusted.com/page?value\=maliciousInput.\n\n
pscanrules.usercontrolledcookie.name = Envenenamiento de Cookie
pscanrules.usercontrolledcookie.refs = https\://en.wikipedia.org/wiki/HTTP_cookie\nhttps\://cwe.mitre.org/data/definitions/565.html
pscanrules.usercontrolledcookie.soln = No permitir que la entrada del usuario controle los nombres y valores de las cookies. Si algunos par\u00e1metros de cadenas de consulta deben establecerse en valores de cookies, aseg\u00farese de filtrar los puntos y comas que puedan servir como delimitadores de pares nombre/valor.

pscanrules.usercontrolledhtmlattributes.desc = Esta comprobaci\u00f3n examina la entrada proporcionada por el usuario en par\u00e1metros de cadenas de consulta y datos POST para identificar d\u00f3nde podr\u00edan estar controlados ciertos valores de atributos HTML. Esto proporciona detecci\u00f3n de puntos calientes para XSS (cross-site scripting) que requerir\u00e1n una revisi\u00f3n adicional por parte de un analista de seguridad para determinar la explotabilidad.
pscanrules.usercontrolledhtmlattributes.extrainfo = Se han encontrado valores de atributos HTML controlados por el usuario. Intente inyectar caracteres especiales para ver si es posible XSS. La p\u00e1gina en la siguiente URL parece incluir una entrada de usuario en una etiqueta [{1}] atributo [{2}] La entrada de usuario encontrada era\:{3}\={4} El valor controlado por el usuario era\:{5}.
pscanrules.usercontrolledhtmlattributes.name = Atributo de elemento HTML controlable por el usuario (XSS potencial)
pscanrules.usercontrolledhtmlattributes.refs = https\://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html
pscanrules.usercontrolledhtmlattributes.soln = V\u00e1lida la entrada y sanea la salida antes de escribirla en cualquier atributo HTML.

pscanrules.usercontrolledjavascriptevent.desc = Esta comprobaci\u00f3n examina la entrada proporcionada por el usuario en par\u00e1metros de cadenas de consulta y datos POST para identificar d\u00f3nde podr\u00edan estar controlados ciertos valores de atributos HTML. Esto proporciona detecci\u00f3n de puntos calientes para XSS (cross-site scripting) que requerir\u00e1n una revisi\u00f3n adicional por parte de un analista de seguridad para determinar la explotabilidad.
pscanrules.usercontrolledjavascriptevent.extrainfo = Se han encontrado eventos javascript controlados por el usuario. La explotabilidad deber\u00e1 determinarse manualmente. La p\u00e1gina en la siguiente URL\:\n\n{0}\n\nincluye el siguiente evento Javascript que puede ser controlado por el atacante\:\n\nSe encontr\u00f3 una entrada de usuario en los siguientes datos de un evento [{1}]\:\n{2}\n\nLa entrada de usuario era\:\n{3}
pscanrules.usercontrolledjavascriptevent.name = Evento JavaScript Controlable por el Usuario (XSS)
pscanrules.usercontrolledjavascriptevent.refs = https\://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html
pscanrules.usercontrolledjavascriptevent.soln = Validar toda la entrada y sanitizar la salida antes de escribir en cualquier evento Javascript on*.

pscanrules.usercontrolledopenredirect.desc = Las redirecciones abiertas son una de las diez vulnerabilidades principales de OWASP 2010. Esta comprobaci\u00f3n examina la entrada proporcionada por el usuario en par\u00e1metros de cadenas de consulta y datos POST para identificar d\u00f3nde podr\u00edan ser posibles las redirecciones abiertas. Las redirecciones abiertas se producen cuando una aplicaci\u00f3n permite que una entrada proporcionada por el usuario (por ejemplo, https\://nottrusted.com) controle una redirecci\u00f3n externa. En general, esta es una forma bastante precisa de encontrar d\u00f3nde los redireccionamientos 301 o 302 podr\u00edan ser explotados por spammers o en ataques de phishing.\n\nPor ejemplo, un atacante podr\u00eda proporcionar a un usuario el siguiente enlace\: https\://ejemplo.com/ejemplo.php?url\=https\://malicious.ejemplo.com.
pscanrules.usercontrolledopenredirect.extrainfo.common = {0} \n\nLa entrada de usuario encontrada fue\: \n\n{1}\= {2} \n\nEl contexto fue\: \n\n{3}
pscanrules.usercontrolledopenredirect.extrainfo.get = La respuesta 301 o 302 a una solicitud de la siguiente URL parec\u00eda contener informaci\u00f3n del usuario en el encabezado de ubicaci\u00f3n\:\n
pscanrules.usercontrolledopenredirect.extrainfo.post = Se ha detectado una redirecci\u00f3n abierta controlada por par\u00e1metros POST. Para comprobar si se trata de un problema m\u00e1s grave, deber\u00eda intentar reenviar esa petici\u00f3n como GET, con el par\u00e1metro POST incluido como par\u00e1metro de cadena de consulta. Por ejemplo\: https\://nottrusted.com/page?url\=https\://lookout.net.\n\nLa respuesta 301 o 302 a una solicitud de la siguiente URL parec\u00eda contener informaci\u00f3n del usuario en el encabezado de ubicaci\u00f3n\:\n
pscanrules.usercontrolledopenredirect.name = Redirecci\u00f3n abierta
pscanrules.usercontrolledopenredirect.refs = https\://cheatsheetseries.owasp.org/cheatsheets/Unvalidated_Redirects_and_Forwards_Cheat_Sheet.html\nhttps\://cwe.mitre.org/data/definitions/601.html
pscanrules.usercontrolledopenredirect.soln = Para evitar la vulnerabilidad de redirecci\u00f3n abierta, los par\u00e1metros del script/programa de la aplicaci\u00f3n deben validarse antes de enviar el c\u00f3digo HTTP 302 (redirecci\u00f3n) al navegador del cliente. Implementar una funcionalidad de redirecci\u00f3n segura que s\u00f3lo redirija a URI relativas, o a una lista de dominios de confianza.

pscanrules.usernameidor.desc = Un hash de nombre de usuario ({0}) se encontro en la respuesta. Esto podr\u00eda indicar que la aplicaci\u00f3n esta sujeta a una vulnerabilidad Insecure Direct Object Reference (IDOR). Comprueba manualmente si esto es asi.
pscanrules.usernameidor.name = Nombre de Usuario Hash Encontrado
pscanrules.usernameidor.otherinfo = El hash era un {0}, con valor\: {1}
pscanrules.usernameidor.refs = https\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/05-Authorization_Testing/04-Testing_for_Insecure_Direct_Object_References.html
pscanrules.usernameidor.soln = Utilice referencias a objetos indirectas por usuario o sesi\u00f3n (cree un mapeo temporal en el momento del uso). O, aseg\u00farese de que cada uso de una referencia directa a un objeto est\u00e1 vinculado a una comprobaci\u00f3n de autorizaci\u00f3n para garantizar que el usuario est\u00e1 autorizado para el objeto solicitado.

pscanrules.viewstate.content.email.desc = Los siguientes correos electr\u00f3nicos se encontraron al enumerar en serie el campo de Viewstate\:
pscanrules.viewstate.content.email.name = Se han encontrado correos electr\u00f3nicos en Viewstate
pscanrules.viewstate.content.email.pattern.source = Patr\u00f3n para Email - https\://www.regular-expressions.info/email.html
pscanrules.viewstate.content.ip.desc = Las siguientes posibles direcciones IP se encontraron al enumerar por serie el campo Viewstate\:
pscanrules.viewstate.content.ip.name = Direcciones IP posibles encontradas en Viewstate
pscanrules.viewstate.content.ip.pattern.source = Patrones IP - https\://www.regular-expressions.info/ip.html
pscanrules.viewstate.name = Viewstate
pscanrules.viewstate.nomac.sure.desc = Este sitio web usa ASP.NET Viewstate pero sin ninguna MAC.\n\n
pscanrules.viewstate.nomac.sure.name = Viewstate sin firma de MAC (Seguro)
pscanrules.viewstate.nomac.sure.refs = https\://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff649308(v\=pandp.10)
pscanrules.viewstate.nomac.sure.soln = Aseg\u00farese que el MAC est\u00e1 establecido para todas las p\u00e1ginas en este sitio web.
pscanrules.viewstate.nomac.unsure.desc = Este sitio web usa ASP.NET Viewstate, pero puede que sin ninguna MAC.\n
pscanrules.viewstate.nomac.unsure.name = Viewstate sin Firma de MAC (Inseguro)
pscanrules.viewstate.nomac.unsure.refs = https\://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff649308(v\=pandp.10)
pscanrules.viewstate.nomac.unsure.soln = Aseg\u00farese que el MAC est\u00e1 establecido para todas las p\u00e1ginas en este sitio web.
pscanrules.viewstate.oldver.desc = Este sitio web usa ASP.NET version 1.0 o 1.1.\n
pscanrules.viewstate.oldver.name = Versi\u00f3n obsoleta de Asp.Net en uso
pscanrules.viewstate.oldver.soln = Revisa que el framework comprometido siga teniendo soporte de Microsoft.
pscanrules.viewstate.soln = Verificar que la informaci\u00f3n mostrada no es confidencial.
pscanrules.viewstate.split.desc = Este sitio web utiliza ViewState de ASP.NET y su valor est\u00e1 dividido en varios fragmentos.
pscanrules.viewstate.split.name = Separar Viewstate en Uso
pscanrules.viewstate.split.soln = Ninguna. Es posible que los responsables del servidor hayan modificado la configuraci\u00f3n, ya que no es la predeterminada.

pscanrules.xaspnetversion.desc = El servidor revela informaci\u00f3n mediante campo(s) de encabezado de respuesta HTTP "X-AspNet-Version"/"X-AspNetMvc-Version".
pscanrules.xaspnetversion.extrainfo = Un atacante puede utilizar esta informaci\u00f3n para explotar vulnerabilidades conocidas.
pscanrules.xaspnetversion.name = Encabezado de respuesta X-AspNet-Version
pscanrules.xaspnetversion.refs = https\://www.troyhunt.com/shhh-dont-let-your-response-headers/\nhttps\://blogs.msdn.microsoft.com/varunm/2013/04/23/remove-unwanted-http-response-headers/
pscanrules.xaspnetversion.soln = Configure el servidor para que no devuelva esas cabeceras.

pscanrules.xbackendserver.desc = El servidor est\u00e1 filtrando informaci\u00f3n relativa a sistemas backend (como nombres de host o direcciones IP). Armado con esta informaci\u00f3n un atacante puede ser capaz de atacar otros sistemas o atacar m\u00e1s directamente/eficientemente esos sistemas.
pscanrules.xbackendserver.name = Fuga de informaci\u00f3n del encabezado X-Backend-Server
pscanrules.xbackendserver.soln = Aseg\u00farese de que su servidor web, servidor de aplicaciones, balanceador de carga, etc. est\u00e1 configurado para suprimir las cabeceras X-Backend-Server.

pscanrules.xchromeloggerdata.desc = El servidor est\u00e1 filtrando informaci\u00f3n a trav\u00e9s de la cabecera de respuesta X-ChromeLogger-Data (o X-ChromePhp-Data). El contenido de estas cabeceras puede ser personalizado por el desarrollador, sin embargo no es raro encontrar\: ubicaciones del sistema de archivos del servidor, declaraciones de vhost, etc.
pscanrules.xchromeloggerdata.name = Fuga de informaci\u00f3n del encabezado X-ChromeLogger-Data (XCOLD)
pscanrules.xchromeloggerdata.otherinfo.error = El valor de la cabecera no pudo ser decodificado en base64\:
pscanrules.xchromeloggerdata.otherinfo.msg = Lo siguiente representa un intento de decodificaci\u00f3n base64 del valor\:
pscanrules.xchromeloggerdata.refs = https\://craig.is/writing/chrome-logger
pscanrules.xchromeloggerdata.soln = Deshabilite esta funcionalidad en Producci\u00f3n cuando pueda mostrar informaci\u00f3n que pueda ser aprovechada por un atacante. Alternativamente, aseg\u00farese de que el uso de la funcionalidad est\u00e1 vinculada a una fuerte verificaci\u00f3n de autorizaci\u00f3n y solo est\u00e1 disponible para los administradores o personal t\u00e9cnico para la soluci\u00f3n de problemas, no los usuarios en general.

pscanrules.xcontenttypeoptions.desc = La cabecera Anti-MIME-Sniffing X-Content-Type-Options no se ha establecido en 'nosniff'. Esto permite que las versiones anteriores de Internet Explorer y Chrome realicen MIME-sniffing en el cuerpo de la respuesta, lo que puede provocar que el cuerpo d\u00e9 la respuesta se interprete y se muestre como un tipo de contenido distinto del tipo de contenido declarado. Las versiones actuales (principios de 2014) y heredadas de Firefox utilizar\u00e1n el tipo de contenido declarado (si se establece uno), en lugar de realizar MIME-sniffing.
pscanrules.xcontenttypeoptions.name = Falta encabezado X-Content-Type-Options
pscanrules.xcontenttypeoptions.otherinfo = Este problema a\u00fan se aplica a las p\u00e1ginas de tipo error (401, 403, 500, etc.), ya que esas p\u00e1ginas a menudo se ven afectadas por problemas de inyecci\u00f3n, en cuyo caso a\u00fan existe la preocupaci\u00f3n de que los navegadores husmeen las p\u00e1ginas lejos de su tipo de contenido real.\nEn el umbral \u00abAlto\u00bb esta regla de an\u00e1lisis no alertar\u00e1 sobre respuestas de error del cliente o servidor.
pscanrules.xcontenttypeoptions.refs = https\://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v\=vs.85)\nhttps\://owasp.org/www-community/Security_Headers
pscanrules.xcontenttypeoptions.soln = Aseg\u00farese de que la aplicaci\u00f3n/servidor web establece el encabezado Content-Type adecuadamente, y que establece el encabezado X-Content-Type-Options a 'nosniff' para todas las p\u00e1ginas web.\nSi es posible, aseg\u00farese de que el usuario final utiliza un navegador web moderno y compatible con los est\u00e1ndares que no realiza MIME-sniffing en absoluto, o que puede ser dirigido por la aplicaci\u00f3n web/servidor web para que no realice MIME-sniffing.

pscanrules.xdebugtoken.desc = La respuesta contiene un encabezado X-Debug-Token o X-Debug-Token-Link. Esto indica que Symfony's Profiler puede estar en uso y exponiendo datos sensibles.
pscanrules.xdebugtoken.name = Fuga de informaci\u00f3n X-Debug-Token
pscanrules.xdebugtoken.otherinfo = Al acceder a una URL de la forma https\://target_host/_profiler/token_value (es decir, https\://example.com/_profiler_/123ab4), puede obtener acceso al perfilador y a m\u00e1s informaci\u00f3n filtrada.
pscanrules.xdebugtoken.refs = https\://Symfony.com/doc/Current/Cookbook/Profiler/profiling_data.html \nhttps\://symfony.com/blog/new-in-symfony-2-4-quicker-access-to-the-profiler-when-working-on-an-api
pscanrules.xdebugtoken.soln = Limitar el acceso al Profiler de Symfony, ya sea mediante autenticaci\u00f3n/autorizaci\u00f3n o limitando la inclusi\u00f3n de la cabecera a clientes espec\u00edficos (por IP, etc.).

pscanrules.xpoweredbyheaderinfoleak.desc = El servidor de la web/aplicaci\u00f3n est\u00e1 divulgando informaci\u00f3n mediante uno o m\u00e1s encabezados de respuesta HTTP ''''X-Powered-By''''. El acceso a tal informaci\u00f3n podr\u00eda facilitarle a los atacantes la identificaci\u00f3n de otros marcos/componentes de los que su aplicaci\u00f3n web depende y las vulnerabilidades a las que pueden estar sujetos tales componentes.
pscanrules.xpoweredbyheaderinfoleak.name = El servidor divulga informaci\u00f3n mediante un campo(s) de encabezado de respuesta HTTP ''''X-Powered-By''''
pscanrules.xpoweredbyheaderinfoleak.otherinfo.msg = Los siguientes encabezados X-Powered-By tambi\u00e9n han sido encontrados\:
pscanrules.xpoweredbyheaderinfoleak.refs = https\://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/08-Fingerprint_Web_Application_Framework\nhttps\://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html
pscanrules.xpoweredbyheaderinfoleak.soln = Aseg\u00farese de que su servidor web, servidor de aplicaciones, balanceador de carga, etc. est\u00e1 configurado para suprimir las cabeceras "X-Powered-By".

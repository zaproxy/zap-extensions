pscanrules.desc = Regras de Varredura Passiva

pscanrules.payloader.desc=Provides support for custom payloads in scan rules.
pscanrules.payloader.name=Passive Scan Rules Release Custom Payloads

pscanrules.authenticationcredentialscaptured.name=Credenciais de Autentica\u00e7\u00e3o Capturadas
pscanrules.authenticationcredentialscaptured.desc=An insecure authentication mechanism is in use. This allows an attacker on the network access to the userid and password of the authenticated user. For Basic Authentication, the attacker must merely monitor the network traffic until a Basic Authentication request is received, and then base64 decode the username and password.  For Digest Authentication, the attacker has access to the username, and possibly also the password, if the hash (including a nonce) can be successfully cracked, or if a Man-In-The-Middle attack is mounted.\nThe attacker eavesdrops on the network until an authentication has completed.
pscanrules.authenticationcredentialscaptured.soln=Use HTTPS e um mecanismo seguro que n\u00e3o transmita o identificador de usu\u00e1rio e a senha sem criptografia. Em particular, evite o uso de autentica\u00e7\u00e3o b\u00e1sica, visto que \u00e9 uma ofusca\u00e7\u00e3o trivial e facilmente quebr\u00e1vel.
pscanrules.authenticationcredentialscaptured.refs=https\://owasp.org/www-community/attacks/Brute_force_attack\nhttp\://en.wikipedia.org/wiki/Digest_access_authentication
pscanrules.authenticationcredentialscaptured.alert.basicauth.extrainfo=[{0}] [{1}] uso de mecanismo inseguro de autentica\u00e7\u00e3o [{2}], revelando o nome de usu\u00e1rio [{3}] e a senha [{4}].
pscanrules.authenticationcredentialscaptured.alert.digestauth.extrainfo=[{0}] [{1}] uso de mecanismo inseguro de autentica\u00e7\u00e3o [{2}], revelando o nome de usu\u00e1rio [{3}] e a informa\u00e7\u00f5es adicionais [{4}].

pscanrules.charsetmismatch.variant.no_mismatch_metacontenttype_missing=(Meta Content-Type Charset Ausente)
pscanrules.charsetmismatch.name=M\u00e1 Combina\u00e7\u00e3o de Charset
pscanrules.charsetmismatch.variant.header_metacontentype_mismatch=(Cabe\u00e7alho versus Meta Content-Type Charset)
pscanrules.charsetmismatch.variant.header_metacharset_mismatch=(Cabe\u00e7alho Versus Meta Charset)
pscanrules.charsetmismatch.variant.metacontenttype_metacharset_mismatch=(Meta Charset Versus Meta Content-Type Charset)
pscanrules.charsetmismatch.desc=This check identifies responses where the HTTP Content-Type header declares a charset different from the charset defined by the body of the HTML or XML. When there's a charset mismatch between the HTTP header and content body Web browsers can be forced into an undesirable content-sniffing mode to determine the content's correct character set.\n\nAn attacker could manipulate content on the page to be interpreted in an encoding of their choice. For example, if an attacker can control content at the beginning of the page, they could inject script using UTF-7 encoded text and manipulate some browsers into interpreting that text.
pscanrules.charsetmismatch.soln=For\u00e7ar UTF-8 para todo o conte\u00fado de texto tanto no cabe\u00e7alho HTTP quanto nas marcas meta em HTML ou nas declara\u00e7\u00f5es de codifica\u00e7\u00e3o em XML.
pscanrules.charsetmismatch.refs=http\://code.google.com/p/browsersec/wiki/Part2\#Character_set_handling_and_detection
pscanrules.charsetmismatch.extrainfo.html.no_mismatch_metacontenttype_missing=O conjunto de caracteres \u00e9 definido apenas pelo conjunto de caracteres META, os clientes mais antigos que esperam que o conjunto de caracteres seja definido pelo tipo de conte\u00fado META podem n\u00e3o exibir corretamente esse conte\u00fado.
pscanrules.charsetmismatch.extrainfo.html.header_metacontentype_mismatch=Houve uma incompatibilidade de conjunto de caracteres entre o cabe\u00e7alho HTTP e as declara\u00e7\u00f5es de codifica\u00e7\u00e3o do tipo de conte\u00fado META\: [{0}] e [{1}] n\u00e3o correspondem.
pscanrules.charsetmismatch.extrainfo.html.header_metacharset_mismatch=Houve uma incompatibilidade de conjunto de caracteres entre o cabe\u00e7alho HTTP e a declara\u00e7\u00e3o de codifica\u00e7\u00e3o de conjunto de caracteres META\: [{0}] e [{1}] n\u00e3o correspondem.
pscanrules.charsetmismatch.extrainfo.html.metacontenttype_metacharset_mismatch=Houve uma incompatibilidade de conjunto de caracteres entre o conjunto de caracteres META e a declara\u00e7\u00e3o de codifica\u00e7\u00e3o do tipo de conte\u00fado META\: [{0}] e [{1}] n\u00e3o correspondem.
pscanrules.charsetmismatch.extrainfo.xml=Houve uma incompatibilidade de conjunto de caracteres entre o cabe\u00e7alho HTTP e a declara\u00e7\u00e3o de codifica\u00e7\u00e3o XML\: [{0}] e [{1}] n\u00e3o correspondem.

pscanrules.cookiesamesite.name = Cookie without SameSite Attribute
pscanrules.cookiesamesite.none.name = Cookie with SameSite Attribute None
pscanrules.cookiesamesite.desc=Um cookie foi definido sem o atributo SameSite, o que significa que o cookie pode ser enviado como resultado de uma solicita\u00e7\u00e3o 'cross-site'. O atributo SameSite \u00e9 uma medida eficaz de contra-ataque para falsifica\u00e7\u00e3o de solicita\u00e7\u00e3o entre sites, inclus\u00e3o de scripts entre sites e ataques de temporiza\u00e7\u00e3o.
pscanrules.cookiesamesite.none.desc=A cookie has been set with its SameSite attribute set to "none", which means that the cookie can be sent as a result of a 'cross-site' request. \nThe SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.
pscanrules.cookiesamesite.badval.name = Cookie with Invalid SameSite Attribute
pscanrules.cookiesamesite.badval.desc=Um cookie foi definido com um valor de atributo SameSite inv\u00e1lido, o que significa que o cookie pode ser enviado como resultado de uma solicita\u00e7\u00e3o 'cross-site'. O atributo SameSite \u00e9 uma medida eficaz de contra-ataque para falsifica\u00e7\u00e3o de solicita\u00e7\u00e3o entre sites, inclus\u00e3o de scripts entre sites e ataques de temporiza\u00e7\u00e3o.
pscanrules.cookiesamesite.soln=Certifique-se de que o atributo SameSite esteja definido como 'lax' ou, de prefer\u00eancia, 'strict' para todos os cookies.
pscanrules.cookiesamesite.refs=https\://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site

pscanrules.crossdomain.name=Configura\u00e7\u00e3o Incorreta Entre Dom\u00ednios
pscanrules.crossdomain.desc=O carregamento de dados do navegador da web pode ser poss\u00edvel, devido a uma configura\u00e7\u00e3o incorreta do Cross Origin Resource Sharing (CORS) no servidor web
pscanrules.crossdomain.soln=Certifique-se de que dados confidenciais n\u00e3o estejam dispon\u00edveis de maneira n\u00e3o autenticada (usando uma lista branca/de permiss\u00f5es de endere\u00e7os IP, por exemplo). Configure o cabe\u00e7alho HTTP "Access-Control-Allow-Origin" para um conjunto mais restritivo de dom\u00ednios ou remova todos os cabe\u00e7alhos CORS inteiramente, para permitir que o navegador web aplique a Same Origin Policy (SOP) de uma maneira mais restritiva.
pscanrules.crossdomain.refs=http\://www.hpenterprisesecurity.com/vulncat/en/vulncat/vb/html5_overly_permissive_cors_policy.html
pscanrules.crossdomain.extrainfo=A configura\u00e7\u00e3o incorreta do CORS no servidor da web permite solicita\u00e7\u00f5es de leitura entre dom\u00ednios de dom\u00ednios arbitr\u00e1rios de terceiros, usando APIs n\u00e3o autenticadas neste dom\u00ednio. No entanto, as implementa\u00e7\u00f5es do navegador da Web n\u00e3o permitem que terceiros arbitr\u00e1rios leiam a resposta de APIs autenticadas. Isso reduz o risco um pouco. Essa configura\u00e7\u00e3o incorreta pode ser usada por um invasor para acessar dados que est\u00e3o dispon\u00edveis de maneira n\u00e3o autenticada, mas que usam alguma outra forma de seguran\u00e7a, como lista de permiss\u00f5es de endere\u00e7os IP.

pscanrules.cookielooselyscoped.name=Cookie com Escopo Fraco
pscanrules.cookielooselyscoped.desc=Os cookies podem ser atribu\u00eddos por dom\u00ednio ou caminho. Essa verifica\u00e7\u00e3o se refere apenas ao escopo do dom\u00ednio. O escopo do dom\u00ednio aplicado a um cookie determina quais dom\u00ednios podem acess\u00e1-lo. Por exemplo, um cookie pode ter seu escopo definido estritamente para um subdom\u00ednio, por exemplo, www.naoconfiavel.com.br, ou vagamente para um dom\u00ednio pai, por exemplo, naoconfiavel.com.br. No \u00faltimo caso, qualquer subdom\u00ednio de naoconfiavel.com.br pode acessar o cookie. Cookies de escopo mais fraco s\u00e3o comuns em megaaplicativos como google.com e live.com. Os cookies definidos a partir de um subdom\u00ednio como app.foo.bar s\u00e3o transmitidos apenas para esse dom\u00ednio pelo navegador. No entanto, os cookies com escopo para um dom\u00ednio de n\u00edvel pai podem ser transmitidos ao pai ou a qualquer subdom\u00ednio do pai.
pscanrules.cookielooselyscoped.soln=Sempre defina o escopo dos cookies para FQDN (Fully Qualified Domain Name).
pscanrules.cookielooselyscoped.refs=https\://tools.ietf.org/html/rfc6265\#section-4.1\nhttps\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html\nhttp\://code.google.com/p/browsersec/wiki/Part2\#Same-origin_policy_for_cookies
pscanrules.cookielooselyscoped.extrainfo=O dom\u00ednio de origem usado para compara\u00e7\u00e3o foi\: {0} {1}
pscanrules.cookielooselyscoped.extrainfo.cookie={0}\n

pscanrules.informationdisclosuredebugerrors.name=Divulga\u00e7\u00e3o de informa\u00e7\u00f5es - Mensagens de Erro de Depura\u00e7\u00e3o
pscanrules.informationdisclosuredebugerrors.desc=A resposta parecia conter mensagens de erro comuns retornadas por plataformas como ASP.NET e servidores da Web como IIS e Apache. Voc\u00ea pode configurar a lista de mensagens de depura\u00e7\u00e3o comuns.
pscanrules.informationdisclosuredebugerrors.soln=Desative as mensagens de depura\u00e7\u00e3o antes de enviar para a produ\u00e7\u00e3o.

pscanrules.informationdisclosureinurl.name=Information Disclosure - Sensitive Information in URL
pscanrules.informationdisclosureinurl.desc=A solicita\u00e7\u00e3o parecia conter informa\u00e7\u00f5es confidenciais vazadas no URL. Isso pode violar a PCI e a maioria das pol\u00edticas de conformidade organizacional. Voc\u00ea pode configurar a lista de strings para esta verifica\u00e7\u00e3o para adicionar ou remover valores espec\u00edficos para seu ambiente.
pscanrules.informationdisclosureinurl.otherinfo.sensitiveinfo=The URL contains potentially sensitive information. The following string was found via the pattern\: {0}\n{1}
pscanrules.informationdisclosureinurl.otherinfo.cc=A URL parece conter informa\u00e7\u00f5es de cart\u00e3o de cr\u00e9dito.
pscanrules.informationdisclosureinurl.otherinfo.email=A URL cont\u00e9m endere\u00e7os de e-mail.
pscanrules.informationdisclosureinurl.otherinfo.ssn=A URL parece conter o(s) n\u00famero(s) de Seguro Social dos EUA
pscanrules.informationdisclosureinurl.soln=N\u00e3o passe informa\u00e7\u00f5es confidenciais em URIs.

pscanrules.informationdisclosurereferrer.name=Divulga\u00e7\u00e3o de Informa\u00e7\u00f5es - Informa\u00e7\u00f5es Confidenciais no Cabe\u00e7alho de Refer\u00eancia HTTP
pscanrules.informationdisclosurereferrer.desc=O cabe\u00e7alho HTTP pode ter vazado um par\u00e2metro potencialmente sens\u00edvel para outro dom\u00ednio. Isso pode violar a PCI e a maioria das pol\u00edticas de conformidade organizacional. Voc\u00ea pode configurar a lista de strings para esta verifica\u00e7\u00e3o para adicionar ou remover valores espec\u00edficos para seu ambiente.
pscanrules.informationdisclosurereferrer.otherinfo.sensitiveinfo=A URL no campo de cabe\u00e7alho do referenciador HTTP parece conter informa\u00e7\u00f5es confidenciais.
pscanrules.informationdisclosurereferrer.otherinfo.cc=A URL no campo HTTP referrer header parece conter informa\u00e7\u00f5es de cart\u00e3o de cr\u00e9dito.
pscanrules.informationdisclosurereferrer.otherinfo.email=A URL no campo de cabe\u00e7alho do referenciador HTTP cont\u00e9m endere\u00e7os de e-mail.
pscanrules.informationdisclosurereferrer.otherinfo.ssn=A URL no campo HTTP referrer header parece conter o(s) n\u00famero(s) de Seguro Social dos EUA.
pscanrules.informationdisclosurereferrer.soln=N\u00e3o passe informa\u00e7\u00f5es confidenciais em URIs.
pscanrules.informationdisclosurereferrer.bin.field=Bank Identification Number\:
pscanrules.informationdisclosurereferrer.brand.field=Brand\:
pscanrules.informationdisclosurereferrer.category.field=Category\:
pscanrules.informationdisclosurereferrer.issuer.field=Emitente\:

pscanrules.informationdisclosuresuspiciouscomments.name=Divulga\u00e7\u00e3o de Informa\u00e7\u00f5es - Coment\u00e1rios Suspeitos
pscanrules.informationdisclosuresuspiciouscomments.desc=The response appears to contain suspicious comments which may help an attacker. Note\: Matches made within script blocks or files are against the entire content not only comments.
pscanrules.informationdisclosuresuspiciouscomments.otherinfo=The following pattern was used\: {0} and was detected in the element starting with\: "{1}", see evidence field for the suspicious comment/snippet.
pscanrules.informationdisclosuresuspiciouscomments.otherinfo2=The following pattern was used\: {0} and was detected {2} times, the first in the element starting with\: "{1}", see evidence field for the suspicious comment/snippet.
pscanrules.informationdisclosuresuspiciouscomments.soln=Remova todos os coment\u00e1rios que retornam informa\u00e7\u00f5es que podem ajudar um invasor e corrigir quaisquer problemas subjacentes aos quais eles se referem.

pscanrules.insecureauthentication.name=M\u00e9todo Fraco de Autentica\u00e7\u00e3o
pscanrules.insecureauthentication.desc=O m\u00e9todo b\u00e1sico de autentica\u00e7\u00e3o ou digest tem sido utilizado em uma conex\u00e3o insegura. As credenciais podem ser lidas e reutilizadas por algu\u00e9m com acesso a rede.
pscanrules.insecureauthentication.soln=Proteja a conex\u00e3o utilizando HTTPS ou um m\u00e9todo forte de autentica\u00e7\u00e3o
pscanrules.insecureauthentication.refs=https\://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html

pscanrules.insecurejsfviewstate.name=Viewstate JSF Inseguro
pscanrules.insecurejsfviewstate.desc=A resposta \u00e0 seguinte URL cont\u00e9m um valor de Viewstate que n\u00e3o tem prote\u00e7\u00e3o criptogr\u00e1fica.
pscanrules.insecurejsfviewstate.soln=Torne o VIEWSTATE seguro com um MAC espec\u00edfico em seu ambiente
pscanrules.insecurejsfviewstate.refs=https\://www.trustwave.com/spiderlabs/advisories/TWSL2010-001.txt
pscanrules.insecurejsfviewstate.extrainfo=JSF ViewState [{0}] \u00e9 Inseguro

pscanrules.noanticsrftokens.name=Aus\u00eancia de tokens Anti-CSRF
pscanrules.noanticsrftokens.desc=N\u00e3o foram localizados tokens Anti-CSRF no formul\u00e1rio de submiss\u00e3o HTML.
pscanrules.noanticsrftokens.alert.extrainfo=Nenhum token Anti-CSRF conhecido {0} foi encontrado nos seguintes formul\u00e1rios HTML\: {1}.  
pscanrules.noanticsrftokens.extrainfo.annotation=Este \u00e9 um alerta informativo, pois o formul\u00e1rio possui uma anota\u00e7\u00e3o de seguran\u00e7a indicando que n\u00e3o \u00e9 necess\u00e1rio um token anti-CSRF. Isso deve ser testado manualmente para garantir que a anota\u00e7\u00e3o est\u00e1 correta.

pscanrules.timestampdisclosure.name=Divulga\u00e7\u00e3o de Data e Hora
pscanrules.timestampdisclosure.desc=Um carimbo de data/hora foi divulgado pela aplica\u00e7\u00e3o/servidor web
pscanrules.timestampdisclosure.soln=Confirme manualmente se os dados do carimbo de data/hora n\u00e3o s\u00e3o confidenciais e se os dados n\u00e3o podem ser agregados para divulgar padr\u00f5es explor\u00e1veis.
pscanrules.timestampdisclosure.refs=http\://projects.webappsec.org/w/page/13246936/Information%20Leakage
pscanrules.timestampdisclosure.extrainfo={0}, que avalia\: {1}

pscanrules.usernameidor.name = Hash de Nome de Usu\u00e1rio Encontrado
pscanrules.usernameidor.desc = Um hash de um nome de usu\u00e1rio ({0}) foi encontrado na resposta. Isso pode indicar que a aplica\u00e7\u00e3o est\u00e1 sujeita a uma vulnerabilidade Insecure Direct Object Reference (IDOR). O teste manual ser\u00e1 necess\u00e1rio para ver se essa descoberta pode ser abusada.
pscanrules.usernameidor.otherinfo = O hash era um {0}, com valor\: {1}
pscanrules.usernameidor.soln = Use refer\u00eancias de objeto indireto por usu\u00e1rio ou sess\u00e3o (crie um mapeamento tempor\u00e1rio no momento do uso). Ou certifique-se de que cada uso de uma refer\u00eancia direta ao objeto esteja vinculado a uma verifica\u00e7\u00e3o de autoriza\u00e7\u00e3o para garantir que o usu\u00e1rio esteja autorizado para o objeto solicitado.
pscanrules.usernameidor.refs = https\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/05-Authorization_Testing/04-Testing_for_Insecure_Direct_Object_References.html

pscanrules.xaspnetversion.name = X-AspNet-Version Response Header
pscanrules.xaspnetversion.desc =  O servidor vaza informa\u00e7\u00f5es por meio dos campos de cabe\u00e7alho de resposta HTTP "X-AspNet-Version"/"X-AspNetMvc-Version".
pscanrules.xaspnetversion.soln = Configure o servidor para que ele n\u00e3o retorne esses cabe\u00e7alhos.
pscanrules.xaspnetversion.extrainfo = Um invasor pode usar essas informa\u00e7\u00f5es para explorar vulnerabilidades conhecidas.
pscanrules.xaspnetversion.refs = https\://www.troyhunt.com/shhh-dont-let-your-response-headers/\nhttps\://blogs.msdn.microsoft.com/varunm/2013/04/23/remove-unwanted-http-response-headers/

pscanrules.xdebugtoken.name=Vazamento de Informa\u00e7\u00f5es do X-Debug-Token
pscanrules.xdebugtoken.desc=A resposta continha um cabe\u00e7alho X-Debug-Token ou X-Debug-Token-Link. Isso indica que o Profiler do Symfony pode estar em uso e expondo dados confidenciais.
pscanrules.xdebugtoken.otherinfo=Acessando um URL no formato http\://host_destino/_profiler_/valor_de_token (ou seja\: http\://exemplo.com.br/_profiler_/123ab4), voc\u00ea pode obter acesso ao criador de perfil e outras informa\u00e7\u00f5es vazadas.
pscanrules.xdebugtoken.refs=https\://symfony.com/doc/current/cookbook/profiler/profiling_data.html\nhttps\://symfony.com/blog/new-in-symfony-2-4-quicker-access-to-the-profiler-when-working-on-an-api
pscanrules.xdebugtoken.soln=Limit access to Symfony's Profiler, either via authentication/authorization or limiting inclusion of the header to specific clients (by IP, etc.).

pscanrules.xpoweredbyheaderinfoleak.name=O servidor vaza informa\u00e7\u00f5es por meio dos campos de cabe\u00e7alho de resposta HTTP "X-Powered-By"
pscanrules.xpoweredbyheaderinfoleak.desc=O servidor da web/aplicativo est\u00e1 vazando informa\u00e7\u00f5es por meio de um ou mais cabe\u00e7alhos de resposta HTTP "X-Powered-By". O acesso a essas informa\u00e7\u00f5es pode facilitar que os invasores identifiquem outras estruturas/componentes dos quais seu aplicativo da web depende e as vulnerabilidades \u00e0s quais esses componentes podem estar sujeitos.
pscanrules.xpoweredbyheaderinfoleak.refs=http\://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp\://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html
pscanrules.xpoweredbyheaderinfoleak.soln=Certifique-se de que seu servidor web, servidor de aplicativos, balanceador de carga, etc. esteja configurado para suprimir cabe\u00e7alhos "X-Powered-By".
pscanrules.xpoweredbyheaderinfoleak.extrainfo=
pscanrules.xpoweredbyheaderinfoleak.otherinfo.msg=Os seguintes cabe\u00e7alhos X-Powered-By tamb\u00e9m foram encontrados\:

pscanrules.xframeoptions.name = X-Frame-Options Header
pscanrules.xframeoptions.incInCsp = The Content-Security-Policy does include a 'frame-ancestors' element which takes precedence over the X-Frame-Options header, which is why this has been raised with a LOW risk.  
pscanrules.xframeoptions.missing.name = X-Frame-Options Header Not Set
pscanrules.xframeoptions.missing.desc = X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.
pscanrules.xframeoptions.missing.refs = https\://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
pscanrules.xframeoptions.missing.soln = Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy's "frame-ancestors" directive. 
pscanrules.xframeoptions.multiple.header.name = Multiple X-Frame-Options Header Entries
pscanrules.xframeoptions.multiple.header.desc = X-Frame-Options (XFO) headers were found, a response with multiple XFO header entries may not be predictably treated by all user-agents.
pscanrules.xframeoptions.multiple.header.refs = https\://tools.ietf.org/html/rfc7034
pscanrules.xframeoptions.multiple.header.soln = Ensure only a single X-Frame-Options header is present in the response.
pscanrules.xframeoptions.compliance.meta.name = X-Frame-Options Defined via META (Non-compliant with Spec)
pscanrules.xframeoptions.compliance.meta.desc = An X-Frame-Options (XFO) META tag was found, defining XFO via a META tag is explicitly not supported by the spec (RFC 7034).
pscanrules.xframeoptions.compliance.meta.refs = https\://tools.ietf.org/html/rfc7034\#section-4
pscanrules.xframeoptions.compliance.meta.soln = Ensure X-Frame-Options is set via a response header field.  Alternatively consider implementing Content Security Policy's "frame-ancestors" directive.
pscanrules.xframeoptions.compliance.malformed.setting.name = X-Frame-Options Setting Malformed
pscanrules.xframeoptions.compliance.malformed.setting.desc = An X-Frame-Options header was present in the response but the value was not correctly set.
pscanrules.xframeoptions.compliance.malformed.setting.refs = https\://tools.ietf.org/html/rfc7034\#section-2.1
pscanrules.xframeoptions.compliance.malformed.setting.soln = Ensure a valid setting is used on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY.  Alternatively consider implementing Content Security Policy's "frame-ancestors" directive.

pscanrules.xcontenttypeoptions.name = X-Content-Type-Options Header Missing
pscanrules.xcontenttypeoptions.desc = The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.
pscanrules.xcontenttypeoptions.otherinfo = This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt "High" threshold this scan rule will not alert on client or server error responses.
pscanrules.xcontenttypeoptions.refs = http\://msdn.microsoft.com/en-us/library/ie/gg622941%28v\=vs.85%29.aspx\nhttps\://owasp.org/www-community/Security_Headers
pscanrules.xcontenttypeoptions.soln = Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.

pscanrules.applicationerrors.name = Application Error Disclosure
pscanrules.applicationerrors.desc = This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.
pscanrules.applicationerrors.soln = Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.

pscanrules.cachecontrol.name = Incomplete or No Cache-control Header Set
pscanrules.cachecontrol.desc = The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content.
pscanrules.cachecontrol.soln = Whenever possible ensure the cache-control HTTP header is set with no-cache, no-store, must-revalidate.
pscanrules.cachecontrol.refs = https\://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html\#web-content-caching\nhttps\://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control

pscanrules.contenttypemissing.name = Content-Type Header Missing
pscanrules.contenttypemissing.name.empty = Content-Type Header Empty
pscanrules.contenttypemissing.desc = The Content-Type header was either missing or empty.
pscanrules.contenttypemissing.soln=Ensure each page is setting the specific and appropriate content-type value for the content being delivered.
pscanrules.contenttypemissing.refs=http\://msdn.microsoft.com/en-us/library/ie/gg622941%28v\=vs.85%29.aspx

pscanrules.cookiehttponly.name = Cookie No HttpOnly Flag
pscanrules.cookiehttponly.desc=A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.
pscanrules.cookiehttponly.soln=Ensure that the HttpOnly flag is set for all cookies.
pscanrules.cookiehttponly.refs=https\://owasp.org/www-community/HttpOnly

pscanrules.cookiesecureflag.name = Cookie Without Secure Flag
pscanrules.cookiesecureflag.desc=A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.
pscanrules.cookiesecureflag.soln=Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.
pscanrules.cookiesecureflag.refs=https\://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html

pscanrules.crossdomainscriptinclusion.name = Cross-Domain JavaScript Source File Inclusion
pscanrules.crossdomainscriptinclusion.desc=The page includes one or more script files from a third-party domain.
pscanrules.crossdomainscriptinclusion.soln=Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.

pscanrules.csp.name=CSP
pscanrules.csp.desc=Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page \u2014 covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.
pscanrules.csp.desc.extended=\n\nThe directive(s)\: {0} are among the directives that do not fallback to default-src, missing/excluding them is the same as allowing anything.
pscanrules.csp.refs=http\://www.w3.org/TR/CSP2/\nhttp\://www.w3.org/TR/CSP/\nhttp\://caniuse.com/\#search\=content+security+policy\nhttp\://content-security-policy.com/\nhttps\://github.com/shapesecurity/salvation\nhttps\://developers.google.com/web/fundamentals/security/csp\#policy_applies_to_a_wide_variety_of_resources
pscanrules.csp.soln=Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.
pscanrules.csp.notices.name=Notices
pscanrules.csp.notices.errors=Erros\:
pscanrules.csp.notices.warnings=Warnings\:
pscanrules.csp.notices.infoitems=Info Items\:
pscanrules.csp.scriptsrc.unsafe.name=script-src unsafe-inline
pscanrules.csp.scriptsrc.unsafe.desc=script-src includes unsafe-inline.
pscanrules.csp.stylesrc.unsafe.name=style-src unsafe-inline
pscanrules.csp.stylesrc.unsafe.desc=style-src includes unsafe-inline.
pscanrules.csp.wildcard.name=Wildcard Directive
pscanrules.csp.wildcard.desc=The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined\: \n{0}
pscanrules.csp.xcsp.name=X-Content-Security-Policy
pscanrules.csp.xcsp.desc=The header X-Content-Security-Policy was found on this response. While it is a good sign that CSP is implemented to some degree the policy specified in this header has not been analyzed by ZAP. To ensure full support by modern browsers ensure that the Content-Security-Policy header is defined and attached to responses.
pscanrules.csp.xwkcsp.name=X-WebKit-CSP
pscanrules.csp.xwkcsp.desc=The header X-WebKit-CSP was found on this response. While it is a good sign that CSP is implemented to some degree the policy specified in this header has not been analyzed by ZAP. To ensure full support by modern browsers ensure that the Content-Security-Policy header is defined and attached to responses.

pscanrules.mixedcontent.name = Secure Pages Include Mixed Content
pscanrules.mixedcontent.name.inclscripts = Secure Pages Include Mixed Content (Including Scripts)
pscanrules.mixedcontent.desc=The page includes mixed content, that is content accessed via HTTP instead of HTTPS.
pscanrules.mixedcontent.soln=A page that is available over SSL/TLS must be comprised completely of content which is transmitted over SSL/TLS.\nThe page must not contain any content that is transmitted over unencrypted HTTP.\n This includes content from third party sites.
pscanrules.mixedcontent.refs=https\://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html

pscanrules.infoprivateaddressdisclosure.name = Private IP Disclosure
pscanrules.infoprivateaddressdisclosure.desc = A private IP (such as 10.x.x.x, 172.x.x.x, 192.168.x.x) or an Amazon EC2 private hostname (for example, ip-10-0-56-78) has been found in the HTTP response body. This information might be helpful for further attacks targeting internal systems.
pscanrules.infoprivateaddressdisclosure.soln = Remove the private IP address from the HTTP response body.  For comments, use JSP/ASP/PHP comment instead of HTML/JavaScript comment which can be seen by client browsers.
pscanrules.infoprivateaddressdisclosure.refs = https\://tools.ietf.org/html/rfc1918

pscanrules.infosessionidurl.name = Session ID in URL Rewrite
pscanrules.infosessionidurl.desc = URL rewrite is used to track user session ID. The session ID may be disclosed via cross-site referer header. In addition, the session ID might be stored in browser history or server logs.
pscanrules.infosessionidurl.soln = For secure content, put session ID in a cookie. To be even more secure consider using a combination of cookie and URL rewrite.
pscanrules.infosessionidurl.refs = http\://seclists.org/lists/webappsec/2002/Oct-Dec/0111.html
pscanrules.infosessionidurl.referrer.alert = Referer Exposes Session ID
pscanrules.infosessionidurl.referrer.desc = A hyperlink pointing to another host name was found. As session ID URL rewrite is used, it may be disclosed in referer header to external hosts.
pscanrules.infosessionidurl.referrer.soln = This is a risk if the session ID is sensitive and the hyperlink refers to an external or third party host. For secure content, put session ID in secured session cookie.

pscanrules.viewstate.name=Viewstate
pscanrules.viewstate.soln=Verifique se as informa\u00e7\u00f5es fornecidas n\u00e3o s\u00e3o confidenciais.
pscanrules.viewstate.oldver.name=Vers\u00e3o Antiga do Asp.Net Em Uso
pscanrules.viewstate.oldver.desc=*** EXPERIMENTAL *** Este site usa ASP.NET vers\u00e3o 1.0 ou 1.1.
pscanrules.viewstate.oldver.soln=Certifique-se de que a estrutura envolvida ainda seja compat\u00edvel com a Microsoft.
pscanrules.viewstate.nomac.unsure.name=Viewstate sem assinatura MAC (Incerto)
pscanrules.viewstate.nomac.unsure.desc=*** EXPERIMENTAL *** Este site usa Viewstate ASP.NET, mas talvez sem nenhum MAC.
pscanrules.viewstate.nomac.unsure.soln=Verifique se o MAC est\u00e1 configurado para todas as p\u00e1ginas deste site.
pscanrules.viewstate.nomac.unsure.refs=http\://msdn.microsoft.com/en-us/library/ff649308.aspx
pscanrules.viewstate.nomac.sure.name=Viewstate sem assinatura MAC (Certeza)
pscanrules.viewstate.nomac.sure.desc=*** EXPERIMENTAL ***\nEste site usa Viewstate ASP.NET, mas sem nenhum MAC.
pscanrules.viewstate.nomac.sure.soln=Verifique se o MAC est\u00e1 configurado para todas as p\u00e1ginas deste site.
pscanrules.viewstate.nomac.sure.refs=http\://msdn.microsoft.com/en-us/library/ff649308.aspx
pscanrules.viewstate.split.name=Dividir o Viewstate em Uso
pscanrules.viewstate.split.desc=*** EXPERIMENTAL *** Este site usa o Viewstate do ASP.NET e seu valor \u00e9 dividido em v\u00e1rios blocos.
pscanrules.viewstate.split.soln=Nenhum - o pessoal que executa o servidor pode ter ajustado a configura\u00e7\u00e3o, pois esta n\u00e3o \u00e9 a configura\u00e7\u00e3o padr\u00e3o.
pscanrules.viewstate.content.email.name=E-mails encontrados no Viewstate
pscanrules.viewstate.content.email.desc=Os seguintes e-mails foram encontrados em s\u00e9rie no campo viewstate\:
pscanrules.viewstate.content.email.pattern.source=Padr\u00e3o de e-mail - http\://www.regular-expressions.info/regexbuddy/email.html
pscanrules.viewstate.content.ip.name=Potenciais Endere\u00e7os IP Encontrados no Viewstate
pscanrules.viewstate.content.ip.desc=Os seguintes endere\u00e7os IP potenciais foram encontrados sendo serializados no campo viewstate\:
pscanrules.viewstate.content.ip.pattern.source=Padr\u00e3o de IP - http\://www.regular-expressions.info/examples.html

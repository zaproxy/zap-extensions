network.api.desc = Позволяет получить доступ и настроить основные сетевые возможности. 
network.api.action.addAlias = Добавляет псевдоним для локальных серверов/прокси.
network.api.action.addAlias.param.name = Имя псевдонима.
network.api.action.addAlias.param.enabled = Включенное состояние, истинное или ложное.
network.api.action.addLocalServer = Добавляет локальный сервер/прокси.
network.api.action.addLocalServer.param.address = Адрес локального сервера/прокси.
network.api.action.addLocalServer.param.api = Доступен ли ZAP API, true или false.
network.api.action.addLocalServer.param.behindNat = Если локальный сервер находится за NAT, true или false.
network.api.action.addLocalServer.param.decodeResponse = Если ответ должен быть декодирован, истина или ложь.
network.api.action.addLocalServer.param.port = Порт локального сервера/прокси.
network.api.action.addLocalServer.param.proxy = Если локальный сервер должен проксировать, true или false.
network.api.action.addLocalServer.param.removeAcceptEncoding = Если заголовок запроса Accept-Encoding должен быть удален, true или false.
network.api.action.addPassThrough = Добавляет полномочия для прохождения через локальные прокси.
network.api.action.addPassThrough.param.authority = Значение полномочий может быть регулярным выражением.
network.api.action.addPassThrough.param.enabled = Включенное состояние, истинное или ложное.
network.api.action.generateRootCaCert = Создает новый корневой сертификат CA  (Root CA), используемый для выдачи сертификатов сервера. 
network.api.action.importRootCaCert = Импортирует корневой сертификат CA (Root CA), который будет использоваться для выдачи сертификатов сервера. 
network.api.action.importRootCaCert.param.filePath = Путь в файловой системе к файлу PEM, содержащему сертификат и закрытый ключ. 
network.api.action.removeAlias = Удаляет псевдоним.
network.api.action.removeAlias.param.name = Имя псевдонима.
network.api.action.removeLocalServer = Удаляет локальный сервер/прокси.
network.api.action.removeLocalServer.param.address = Адрес локального сервера/прокси.
network.api.action.removeLocalServer.param.port = Порт локального сервера/прокси.
network.api.action.removePassThrough = Удаляет проход.
network.api.action.removePassThrough.param.authority = Значение власти.
network.api.action.setAliasEnabled = Устанавливает, включен ли псевдоним.
network.api.action.setAliasEnabled.param.name = Имя псевдонима.
network.api.action.setAliasEnabled.param.enabled = Включенное состояние, истинное или ложное.
network.api.action.setPassThroughEnabled = Устанавливает, включена ли сквозная передача.
network.api.action.setPassThroughEnabled.param.authority = Значение власти.
network.api.action.setPassThroughEnabled.param.enabled = Включенное состояние, истинное или ложное.
network.api.action.setRootCaCertValidity = Устанавливает срок действия сертификата корневого центра сертификации. Используется при создании нового сертификата Root CA. 
network.api.action.setRootCaCertValidity.param.validity = Количество дней, в течение которых созданный корневой сертификат CA будет действителен. 
network.api.action.setServerCertValidity = Устанавливает действительность сертификата сервера. Используется при создании сертификатов сервера. 
network.api.action.setServerCertValidity.param.validity = Количество дней, в течение которых сгенерированные сертификаты сервера будут действительны. 
network.api.other.rootCaCert = Получает корневой сертификат CA ( Root CA), используемый для выдачи сертификатов сервера. Подходит для импорта в клиентские приложения (например, браузеры). 
network.api.view.getAliases = Получает псевдонимы, используемые для идентификации локальных серверов/прокси.
network.api.view.getLocalServers = Получает локальные серверы/прокси.
network.api.view.getPassThroughs = Получает полномочия, которые будут проходить через локальные прокси.
network.api.view.getRootCaCertValidity = Получает срок действия сертификата корневого CA  (Root CA) в днях. Используется при создании нового сертификата Root CA. 
network.api.view.getServerCertValidity = Получает срок действия сертификата сервера в днях. Используется при создании сертификатов сервера. 

network.api.legacy.api.action.addAdditionalProxy = Добавляет новый прокси, используя предоставленные данные.
network.api.legacy.api.action.removeAdditionalProxy = Удаляет дополнительный прокси с указанным адресом и портом. 
network.api.legacy.api.view.additionalProxies = Получает все дополнительные настроенные прокси. 
network.api.legacy.deprecated.network = Вместо этого используйте конечные точки API в компоненте «сеть».

network.cmdline.certdump.done = Сертификат Root CA записан в {0} 
network.cmdline.certfulldump = Сбрасывает полный сертификат Root CA  (включая закрытый ключ) в указанное имя файла, это подходит для импорта в ZAP. 
network.cmdline.certload = Загружает сертификат Root CA из указанного имени файла. 
network.cmdline.certload.done = Сертификат Root CA загружен из {0} 
network.cmdline.certpubdump = Сбрасывает общедоступный сертификат Root CA сертификации в указанное имя файла, это подходит для импорта в браузеры. 
network.cmdline.error.noread = Не удается прочитать файл {0} 
network.cmdline.error.nowrite = Невозможно записать в файл {0} 
network.cmdline.error.write = Ошибка записи сертификата Root CA в {0} 
network.cmdline.proxy.error.generic = Причина\: {0}
network.cmdline.proxy.error.host.assign = Не удается прослушать по адресу\: {0}
network.cmdline.proxy.error.host.unknown = Неизвестный хост
network.cmdline.proxy.error.message = Произошла ошибка при запуске основного прокси.\n\
{0}
network.cmdline.proxy.error.port = Не удается прослушивать порт {0}\:{1} — попробуйте указать другой порт для использования ZAP.
network.cmdline.proxy.error.port.retry = Невозможно использовать порт {0}. Пытаться\:
network.cmdline.proxy.error.title = Ошибка при запуске основного прокси
network.cmdline.proxy.host = Переопределяет хост, используемый для проксирования, указанный в файле конфигурации.
network.cmdline.proxy.port = Переопределяет порт, используемый для проксирования, указанный в файле конфигурации.
network.cmdline.proxy.port.invalid.title = Неверный номер порта
network.cmdline.proxy.port.invalid.message = Не удалось запустить основной прокси, значение -port не является допустимым номером порта\:\n\
{0}

network.ext.name = Сетевое расширение 
network.ext.desc = Предоставляет основные сетевые возможности. 

network.importpem.failedreadfile = Не удалось прочитать выбранный файл .pem\:\n\
{0}
network.importpem.nocertsection = В файле .pem отсутствует раздел сертификата. Он должен содержать сертификат, заключенный в токены\:\n\
{0}\n\
и\n\
{1}
network.importpem.certnobase64 = Сертификат не соответствует кодировке base64.
network.importpem.noprivkeysection = Секция закрытого ключа не найдена в файле .pem. Он должен содержать закрытый ключ, окруженный токенами\:\n\
{0}\n\
и\n\
{1}
network.importpem.privkeynobase64 = Закрытый ключ не соответствует кодировке base64.
network.importpem.failedkeystore = Не удалось создать хранилище ключей из файла .pem\:\n\
{0}
network.importpem.failed.title = Ошибка импорта .pem файла сертификата корневого центра сертификации

network.httpsender.error.proxy=Ваши настройки «Параметры / Подключение / Использовать цепочку прокси» могут быть неправильными. 
network.httpsender.error.readtimeout = Не удалось прочитать {0} в течение {1} секунд, проверьте, доступен ли сайт, и, если да, подумайте о настройке тайм-аута чтения ZAP на панели параметров подключения. 
network.httpsender.ssl.error.connect = Исключение при попытке подключиться к\: 
network.httpsender.ssl.error.exception = Исключение составили\: 
network.httpsender.ssl.error.exception.rootcause = Первопричина\: 
network.httpsender.ssl.error.help = Следующий документ может помочь в устранении этой ошибки\:\n\
{0} 
network.httpsender.ssl.error.help.url = https\://www.zaproxy.org/faq/how-to-connect-to-an-https-site-that-reports-a-handshake-failure/

network.ui.footer.proxies.main = Основной прокси\: {0}
network.ui.footer.proxies.representation = {0}\:{1}
network.ui.footer.proxies.tooltip.main = Основной прокси\: {0}
network.ui.footer.proxies.tooltip.additional.enabled = Дополнительные прокси (включены)\:
network.ui.footer.proxies.tooltip.additional.disabled = Дополнительные прокси (отключено)\:

network.ui.options.name = Сеть 

network.ui.options.legacy.dynssl = Динамические SSL-сертификаты
network.ui.options.legacy.dynssl.moved = Эти параметры были перемещены в Сеть > Сертификаты сервера.
network.ui.options.legacy.opennew = Перейти к новому экрану
network.ui.options.legacy.proxies = Локальные прокси 
network.ui.options.legacy.proxies.moved = Эти параметры были перемещены в Сеть > Local Servers/Proxies.

network.ui.options.localservers.name = Локальные серверы/прокси

network.ui.options.localservers.desc = Установите настройки прокси-сервера браузера, используя один из следующих прокси-серверов.\n\
Порт HTTP и порт HTTPS должны быть одним и тем же портом.
network.ui.options.localservers.add.title = Добавить локальный сервер/прокси
network.ui.options.localservers.add.field.address = Адрес\:
network.ui.options.localservers.add.field.port = Порт\:
network.ui.options.localservers.add.button = Добавить
network.ui.options.localservers.mainproxy.title = Основной прокси\: {0}
network.ui.options.localservers.modify.title = Изменить локальный сервер/прокси
network.ui.options.localservers.modify.main.button = Свойства прокси...
network.ui.options.localservers.modify.main.title = Изменить основной прокси
network.ui.options.localservers.modify.button = Изменить
network.ui.options.localservers.table.header.enabled = Включено
network.ui.options.localservers.table.header.address = Адрес
network.ui.options.localservers.table.header.port = Порт
network.ui.options.localservers.field.mode = Режим
network.ui.options.localservers.field.mode.api = API
network.ui.options.localservers.field.mode.apiproxy = API и прокси
network.ui.options.localservers.field.mode.proxy = Прокси-сервер
network.ui.options.localservers.field.behindnat = За NAT 
network.ui.options.localservers.field.behindnat.tooltip = <html>Указывает, что ZAP находится за NAT.<br>Если выбрано, ZAP попытается определить общедоступный IP-адресса,<br>\\
to правильно обнаруживать и обрабатывать запросы с общедоступным IP-адресом.<br>Подробнее см. на странице справки.</html>
network.ui.options.localservers.field.decoderesponse = Декодировать ответ
network.ui.options.localservers.field.decoderesponse.tooltip = <html>Всегда автоматически декодировать (например, gzip, deflate) ответ.<br>Этот параметр необходим для приложений, которые игнорируют поле заголовка "Accept-Encoding"<br>Этот параметр должен быть включен всегда, если только декодирование не нарушает работу приложения. проверено.</html>
network.ui.options.localservers.field.removeacceptencoding = Удалить заголовок запроса Accept-Encoding
network.ui.options.localservers.field.removeacceptencoding.tooltip = Удалить заголовок запроса Accept-Encoding
network.ui.options.localservers.remove.title = Удалить локальный сервер/прокси
network.ui.options.localservers.remove.text = Вы уверены, что хотите удалить выбранный сервер?
network.ui.options.localservers.remove.button.cancel = Отмена
network.ui.options.localservers.remove.button.confirm = Удалить
network.ui.options.localservers.remove.checkbox.label = Больше не показывать это сообщение
network.ui.options.localservers.servers.title = Дополнительные серверы/прокси
network.ui.options.localservers.servers.duplicated = Локальный сервер/прокси с этим адресом и портом уже определен\:\n\
{0}
network.ui.options.localservers.servers.duplicated.title = Дублированный локальный сервер/прокси
network.ui.options.localservers.servers.binderror = Невозможно прослушивать этот адрес и порт\:\n\
{0}

network.ui.options.alias.tab = Псевдонимы
network.ui.options.alias.add.title = Добавить псевдоним
network.ui.options.alias.add.field.name = Имя\:
network.ui.options.alias.add.field.enabled = Подключена\:
network.ui.options.alias.add.button = Добавить
network.ui.options.alias.table.header.enabled = Включено
network.ui.options.alias.table.header.name = Название
network.ui.options.alias.modify.title = Изменить псевдоним
network.ui.options.alias.modify.button = Изменить
network.ui.options.alias.remove.title = Удалить псевдоним
network.ui.options.alias.remove.text = Вы уверены, что хотите удалить выбранный псевдоним?
network.ui.options.alias.remove.button.cancel = Отмена
network.ui.options.alias.remove.button.confirm = Удалить
network.ui.options.alias.remove.checkbox.label = Больше не показывать это сообщение

network.ui.options.passthrough.tab = Пройти через
network.ui.options.passthrough.add.title = Добавить условие прохождения
network.ui.options.passthrough.add.field.authority = Авторизованный
network.ui.options.passthrough.add.field.enabled = Подключена\:
network.ui.options.passthrough.add.button = Добавить
network.ui.options.passthrough.table.header.enabled = Включено
network.ui.options.passthrough.table.header.authority = Авторизованный
network.ui.options.passthrough.modify.title = Изменить условие прохождения
network.ui.options.passthrough.modify.button = Изменить
network.ui.options.passthrough.remove.title = Удалить сквозное условие
network.ui.options.passthrough.remove.text = Вы уверены, что хотите удалить выбранное условие сквозной передачи?
network.ui.options.passthrough.remove.button.cancel = Отмена
network.ui.options.passthrough.remove.button.confirm = Удалить
network.ui.options.passthrough.remove.checkbox.label = Больше не показывать это сообщение
network.ui.options.passthrough.warn.invalidregex.message = Предоставленное регулярное выражение недействительно\:\n\
{0} 
network.ui.options.passthrough.warn.invalidregex.title = Неверное регулярное выражение 

network.ui.options.securityprotocols.title = Протоколы безопасности 
network.ui.options.securityprotocols.ssl2hello.label = SSLv2Hello
network.ui.options.securityprotocols.ssl3.label = SSL 3
network.ui.options.securityprotocols.tlsv1.label = TLS 1
network.ui.options.securityprotocols.tlsv1.1.label = TLS 1.1
network.ui.options.securityprotocols.tlsv1.2.label = TLS 1.2
network.ui.options.securityprotocols.tlsv1.3.label = TLS 1.3
network.ui.options.securityprotocols.protocolnotsupportedtooltip = Протокол не включен или не поддерживается JRE.
network.ui.options.securityprotocols.error.noprotocolsselected = Вы должны выбрать хотя бы один протокол безопасности. 
network.ui.options.securityprotocols.error.justsslv2helloselected = SSLv2Hello необходимо выбирать вместе с другими протоколами безопасности. 
network.ui.options.securityprotocols.error.title = Неправильная конфигурация протокола безопасности

network.ui.options.servercertificates.name = Сертификаты сервера 
network.ui.options.servercertificates.button.generate = Сгенерировать
network.ui.options.servercertificates.button.import = Импортировать
network.ui.options.servercertificates.button.save = Сохранить
network.ui.options.servercertificates.button.view = Вид

network.ui.options.servercertificates.field.certvalidity = Срок действия в днях\: 
network.ui.options.servercertificates.field.pem = PEM\:

network.ui.options.servercertificates.overwrite.message = Сертификат корневого CA  (Root CA) уже существует.\n\
Создание нового сертификата заменит существующий.\n\
\n\
Вы хотите перезаписать текущий сертификат? 
network.ui.options.servercertificates.overwrite.title = Перезаписать существующий сертификат?

network.ui.options.servercertificates.import.config.nocert = Выбранный файл конфигурации не имеет сертификата. 
network.ui.options.servercertificates.import.config.nocert.title = Нет сертификата корневого CA
network.ui.options.servercertificates.import.config.error = Не удалось импортировать сертификат корневого центра сертификации из файла конфигурации.. \n\
Подробнее смотри в файле журнала.
network.ui.options.servercertificates.import.config.error.title = Ошибка импорта

network.ui.options.servercertificates.import.pem.failedreadfile = Не удалось прочитать выбранный файл .pem\:\n\
{0}
network.ui.options.servercertificates.import.pem.nocertsection = В файле .pem отсутствует раздел сертификата. Он должен содержать сертификат, заключенный в токены\:\n\
{0}\n\
и\n\
{1}
network.ui.options.servercertificates.import.pem.certnobase64 = Сертификат не соответствует кодировке base64.
network.ui.options.servercertificates.import.pem.noprivkeysection = Секция закрытого ключа не найдена в файле .pem. Он должен содержать закрытый ключ, окруженный токенами\:\n\
{0}\n\
и\n\
{1}
network.ui.options.servercertificates.import.pem.privkeynobase64 = Закрытый ключ не соответствует кодировке base64.
network.ui.options.servercertificates.import.pem.failedkeystore = Не удалось создать хранилище ключей из файла .pem\:\n\
{0}
network.ui.options.servercertificates.import.pem.failed.title = Ошибка импорта .pem файла сертификата корневого центра сертификации

network.ui.options.servercertificates.tab.rootcacert = Сертификат корневого CA (Root CA)
network.ui.options.servercertificates.tab.issuedcerts = Выданные сертификаты 

network.warn.cert.expired = Срок действия сертификата корневого CA  (Root CA certificate) ZAP истек {0} (сейчас\: {1}).\n\
Вы должны восстановить его и переустановить в своих браузерах.\n\
Восстановить сертификат и перейти к соответствующему экрану параметров сейчас? 
network.warn.cert.failed = Не удалось создать корневой сертификат CA (Root CA certificate).\n\
Подробнее см. в журнале.

network.api.action.addAlias = 为本地服务器/代理添加别名。
network.api.action.addAlias.param.enabled = 启用状态，true 或 false。
network.api.action.addAlias.param.name = 别名的名称。
network.api.action.addHttpProxyExclusion = 添加要从 HTTP 代理中排除的主机。
network.api.action.addHttpProxyExclusion.param.enabled = 启用状态，true 或 false。
network.api.action.addHttpProxyExclusion.param.host = 正则表达式表示的主机的值。
network.api.action.addLocalServer = 添加本地服务器/代理。
network.api.action.addLocalServer.param.address = 本地服务器/代理的地址。
network.api.action.addLocalServer.param.api = ZAP API 是否可用， true 或 false。
network.api.action.addLocalServer.param.behindNat = 本地服务器是否位于 NAT 之后， true 或 false。
network.api.action.addLocalServer.param.decodeResponse = 响应是否应该被解码，true 或 false。
network.api.action.addLocalServer.param.port = 本地服务器/代理的端口。
network.api.action.addLocalServer.param.proxy = 本地服务器是否应该代理，true 或 false。
network.api.action.addLocalServer.param.removeAcceptEncoding = 请求标头 Accept-Encoding 是否应该被移除，true 或 false。
network.api.action.addPassThrough = 添加可以透传直通本地代理的授权。
network.api.action.addPassThrough.param.authority = 授权的值，可以是正则表达式。
network.api.action.addPassThrough.param.enabled = 启用状态，true 或 false。
network.api.action.addPkcs12ClientCertificate = 添加包含在 PKCS\#12 文件中的客户端证书，该证书会自动设置为活动并使用。
network.api.action.addPkcs12ClientCertificate.param.filePath = 文件路径。
network.api.action.addPkcs12ClientCertificate.param.index = 证书在文件中的索引，默认为 0。
network.api.action.addPkcs12ClientCertificate.param.password = 文件的密码。
network.api.action.addRateLimitRule = 添加速率限制规则
network.api.action.addRateLimitRule.param.description = 允许您识别规则的描述。 每个规则必须有唯一的描述。
network.api.action.addRateLimitRule.param.enabled = 启用状态，true 或 false。
network.api.action.addRateLimitRule.param.groupBy = 应用速率限制时如何对主机进行分组：规则或主机
network.api.action.addRateLimitRule.param.matchRegex = 用于匹配主机的正则表达式。
network.api.action.addRateLimitRule.param.matchString = 纯字符串匹配是根据 DNS 约定进行处理的。 如果字符串有一个或两个组成部分。
network.api.action.addRateLimitRule.param.requestsPerSecond = 每秒的最大请求数。
network.api.action.generateRootCaCert = 生成新的根 CA 证书，用于颁发服务器证书。
network.api.action.importRootCaCert = 导入要用于颁发服务器证书的根 CA 证书。
network.api.action.importRootCaCert.param.filePath = PEM 文件的文件系统路径，包含证书和私钥。
network.api.action.removeAlias = 移除一个别名
network.api.action.removeAlias.param.name = 别名的名称。
network.api.action.removeHttpProxyExclusion = 移除一个 HTTP 代理排除项
network.api.action.removeHttpProxyExclusion.param.host = 主机的值。
network.api.action.removeLocalServer = 移除一个本地服务器/代理。
network.api.action.removeLocalServer.param.address = 本地服务器/代理的地址。
network.api.action.removeLocalServer.param.port = 本地服务器/代理的端口。
network.api.action.removePassThrough = 移除一个直通项
network.api.action.removePassThrough.param.authority = 授权的值。
network.api.action.removeRateLimitRule = 移除速率限制规则
network.api.action.removeRateLimitRule.param.description = 要移除的规则的描述。
network.api.action.setAliasEnabled = 设置是否启用一个别名。
network.api.action.setAliasEnabled.param.enabled = 启用状态，true 或 false。
network.api.action.setAliasEnabled.param.name = 别名的名称。
network.api.action.setConnectionTimeout = 设置读取和连接的超时值。
network.api.action.setConnectionTimeout.param.timeout = 超时时长，以秒为单位。
network.api.action.setDefaultUserAgent = 设置默认用户代理（ user-agent）。
network.api.action.setDefaultUserAgent.param.userAgent = 默认用户代理（ user-agent）。
network.api.action.setDnsTtlSuccessfulQueries = 设置成功 DNS 查询的 TTL。
network.api.action.setDnsTtlSuccessfulQueries.param.ttl = TTL，以秒为单位。 如果为负数则永远缓存。 如果为零则禁用缓存。 如果为正数则为成功的 DNS 查询将被缓存的秒数。
network.api.action.setHttpProxy = 设置 HTTP 代理配置。
network.api.action.setHttpProxy.param.host = 主机名或主机地址。
network.api.action.setHttpProxy.param.password = 密码。
network.api.action.setHttpProxy.param.port = 端口。
network.api.action.setHttpProxy.param.realm = 认证域。
network.api.action.setHttpProxy.param.username = 用户名。
network.api.action.setHttpProxyAuthEnabled = 设置是否启用 HTTP 代理验证。
network.api.action.setHttpProxyAuthEnabled.param.enabled = 启用状态，true 或 false。
network.api.action.setHttpProxyEnabled = 设置是否启用 HTTP 代理。
network.api.action.setHttpProxyEnabled.param.enabled = 启用状态，true 或 false。
network.api.action.setHttpProxyExclusionEnabled = 设置是否启用 HTTP 代理排除。
network.api.action.setHttpProxyExclusionEnabled.param.enabled = 启用状态，true 或 false。
network.api.action.setHttpProxyExclusionEnabled.param.host = 主机的值。
network.api.action.setPassThroughEnabled = 设置是否启用直通。
network.api.action.setPassThroughEnabled.param.authority = 授权的值。
network.api.action.setPassThroughEnabled.param.enabled = 启用状态，true 或 false。
network.api.action.setRateLimitRuleEnabled = 设置速率限制规则的启用状态。
network.api.action.setRateLimitRuleEnabled.param.description = 要修改的规则的描述。
network.api.action.setRateLimitRuleEnabled.param.enabled = 启用状态，true 或 false。
network.api.action.setRootCaCertValidity = 设置根 CA 证书的有效性。 在生成新的根 CA 证书时使用。
network.api.action.setRootCaCertValidity.param.validity = 生成的根 CA 证书的有效天数。
network.api.action.setServerCertValidity = 设置服务器证书有效性。 生成服务器证书时使用。
network.api.action.setServerCertValidity.param.validity = 生成的服务器证书的有效天数。
network.api.action.setSocksProxy = 设置 SOCKS 代理配置。
network.api.action.setSocksProxy.param.host = 主机名或主机地址。
network.api.action.setSocksProxy.param.password = 密码。
network.api.action.setSocksProxy.param.port = 端口。
network.api.action.setSocksProxy.param.useDns = 域名是否应由 SOCKS 代理解析，true 或 fal
network.api.action.setSocksProxy.param.username = 用户名。
network.api.action.setSocksProxy.param.version = SOCKS 版本。
network.api.action.setSocksProxyEnabled = 设置是否启用 SOCKS 代理。
network.api.action.setSocksProxyEnabled.param.enabled = 启用状态，true 或 false。
network.api.action.setUseClientCertificate = 设置是否使用激活的客户端证书。
network.api.action.setUseClientCertificate.param.use = 使用状态，true 或 false。
network.api.action.setUseGlobalHttpState = 设置是否使用全局 HTTP 状态。
network.api.action.setUseGlobalHttpState.param.use = 使用状态，true 或 false。
network.api.desc = 允许访问和配置核心网络能力。

network.api.legacy.api.action.addAdditionalProxy = 使用提供的详细信息添加新代理。
network.api.legacy.api.action.removeAdditionalProxy = 删除具有指定地址和端口的附加代理。
network.api.legacy.api.view.additionalProxies = 获取所有已配置的附加代理。
network.api.legacy.deprecated.network = 请改用“网络”组件中的 API 端点。

network.api.other.proxy.pac = 提供一个 PAC 文件，通过主代理进行代理。
network.api.other.rootCaCert = 获取用于颁发服务器证书的根 CA 证书。 用于导入到客户端应用程序（例如浏览器）。
network.api.other.setProxy = 设置 HTTP 代理配置。
network.api.other.setProxy.param.proxy = 包含 HTTP 代理配置的 JSON 对象。
network.api.view.getAliases = 获取用于识别 本地服务器/代理 的别名。
network.api.view.getConnectionTimeout = 获取连接超时（以秒为单位）。
network.api.view.getDefaultUserAgent = 获取默认用户代理（ user-agent）。
network.api.view.getDnsTtlSuccessfulQueries = 获取成功 DNS 查询的 TTL（以秒为单位）。
network.api.view.getHttpProxy = 获取 HTTP 代理
network.api.view.getHttpProxyExclusions = 获取 HTTP 代理排除项
network.api.view.getLocalServers = 获取本地服务器/代理。
network.api.view.getPassThroughs = 获取可透传直通本地代理的授权。
network.api.view.getRateLimitRules = 速率限制规则列表。
network.api.view.getRootCaCertValidity = 获取根 CA 证书的有效性天数。 在生成新的根 CA 证书时使用。
network.api.view.getServerCertValidity = 获取服务器证书有效期天数。 生成服务器证书时使用。
network.api.view.getSocksProxy = 获取 SOCKS 代理。
network.api.view.isHttpProxyAuthEnabled = 告知是否启用 HTTP 代理身份验证。
network.api.view.isHttpProxyEnabled = 告知是否启用了 HTTP 代理。
network.api.view.isSocksProxyEnabled = 告知是否启用了 SOCKS 代理。
network.api.view.isUseGlobalHttpState = 告知是否使用了全局 HTTP 状态。

network.cmdline.certdump.done = 根 CA 证书写入到 {0} 
network.cmdline.certfulldump = 将 Root CA 完整证书（包括私钥）转储到指定的文件名中，这适用于导入到 ZAP
network.cmdline.certload = 从指定的文件名加载根 CA 证书
network.cmdline.certload.done = 从 {0}加载根 CA 证书 
network.cmdline.certpubdump = 将 Root CA 公共证书转储到指定的文件名中，这适合导入到浏览器中
network.cmdline.error.noread = 不能读取文件 {0}
network.cmdline.error.nowrite = 不能写入文件 {0}
network.cmdline.error.write = 将根 CA 证书写入 {0} 时出错
network.cmdline.proxy.error.generic = 原因： {0}
network.cmdline.proxy.error.host.assign = 无法监听地址：{0}
network.cmdline.proxy.error.host.unknown = 未知主机：{0}
network.cmdline.proxy.error.message = 启动主代理时出错。\n{0}
network.cmdline.proxy.error.port = 无法侦听端口 {0}\:{1} - 尝试指定一个不同的端口供 ZAP 使用。
network.cmdline.proxy.error.port.retry = 无法使用端口 {0}。 尝试：
network.cmdline.proxy.error.title = 启动主代理错误
network.cmdline.proxy.host = 覆盖配置文件中指定的主代理的主机
network.cmdline.proxy.port = 覆盖配置文件中指定的主代理端口
network.cmdline.proxy.port.invalid.message = 无法启动主代理，--端口值不是有效的端口号：\n{0}
network.cmdline.proxy.port.invalid.title = 非法的端口号

network.ext.desc = 提供核心网络能力。
network.ext.name = 网络扩展

network.httpsender.error.badhost.connect = 尝试连接时发生异常：
network.httpsender.error.badhost.exception = 异常为：
network.httpsender.error.badhost.help = 以下文档可能有助于解决此故障：\n{0}
network.httpsender.error.badhost.help.url = https\://www.zaproxy.org/faq/why-cant-zap-connect-to-my-website/

network.httpsender.error.proxy = 您的 “选项/网络/连接” 代理设置 可能不正确。
network.httpsender.error.readtimeout = 在 {1} 秒内未能读取 {0}，请检查站点是否可用，如果可用，请考虑在“连接”选项面板中调整 ZAP 的读取超时。
network.httpsender.ssl.error.connect = 尝试连接时发生异常：
network.httpsender.ssl.error.exception = 异常为：
network.httpsender.ssl.error.exception.rootcause = 根源：
network.httpsender.ssl.error.help = 以下文档可能有助于解决此故障：\n{0}
network.httpsender.ssl.error.help.url = https\://www.zaproxy.org/faq/how-to-connect-to-an-https-site-that-reports-a-handshake-failure/

network.importpem.certnobase64 = 证书未正确进行 base64 编码。
network.importpem.failed.title = 导入根 CA 证书 .pem 文件时出错
network.importpem.failedkeystore = 无法从 .pem 文件创建密钥库：\n{0}
network.importpem.failedreadfile = 读取所选的 .pem 文件失败：\n{0}
network.importpem.nocertsection = 在 .pem 文件中找不到证书节段。\n它应该包含被令牌包围的证书：\n{0}\n和：\n{1}
network.importpem.noprivkeysection = 在 .pem 文件中找不到私钥节段。\n它应该包含用令牌包围的私钥：\n{0}\n和：\n{1}
network.importpem.privkeynobase64 = 私钥未正确进行 base64 编码。

network.ui.footer.proxies.main = 主代理：{0}
network.ui.footer.proxies.representation = {0}\:{1}
network.ui.footer.proxies.tooltip.additional.disabled = 其他代理（已禁用）：
network.ui.footer.proxies.tooltip.additional.enabled = 其他代理（已启用）：
network.ui.footer.proxies.tooltip.main = 主代理：

network.ui.options.alias.add.button = 添加
network.ui.options.alias.add.field.enabled = 启用：
network.ui.options.alias.add.field.name = 名称\:
network.ui.options.alias.add.title = 增加别名
network.ui.options.alias.modify.button = 修改
network.ui.options.alias.modify.title = 修改别名
network.ui.options.alias.remove.button.cancel = 取消
network.ui.options.alias.remove.button.confirm = 删除
network.ui.options.alias.remove.checkbox.label = 不要再显示此消息
network.ui.options.alias.remove.text = 您确定要移除所选别名吗？
network.ui.options.alias.remove.title = 移除别名
network.ui.options.alias.tab = 别名
network.ui.options.alias.table.header.enabled = 启用
network.ui.options.alias.table.header.name = 名称

network.ui.options.alpn.enable.label = 启用 TLS ALPN 扩展
network.ui.options.alpn.protocols.error.noprotocolsselected = 您必须至少选择一种应用程序协议。
network.ui.options.alpn.protocols.error.title = 不正确的应用程序协议配置
network.ui.options.alpn.protocols.http1.1.label = HTTP/1.1
network.ui.options.alpn.protocols.http2.label = HTTP/2
network.ui.options.alpn.protocols.label = 协议：
network.ui.options.alpn.title = ALPN

network.ui.options.clientcertificates.addkeystore = 添加到密钥库
network.ui.options.clientcertificates.certificate.title = 证书
network.ui.options.clientcertificates.description = 添加您的密钥库并激活所需的证书。
network.ui.options.clientcertificates.error = 错误
network.ui.options.clientcertificates.error.accesskeystore = 访问密钥库时出错：
network.ui.options.clientcertificates.error.cert.title = 客户端证书
network.ui.options.clientcertificates.error.pkcs11.lib = 再次尝试指定 PKCS\#11 库...
network.ui.options.clientcertificates.error.pkcs11.notavailable = 所需的 Sun/IBM PKCS\#11 提供程序 不可用。\n有关更多信息，请访问以下页面：
network.ui.options.clientcertificates.error.pkcs11.notavailable.ibm.hyperlink = http\://pic.dhe.ibm.com/infocenter/java7sdk/v7r0/topic/com.ibm.java.security.component.71.doc/security-component/pkcs11implDocs/ibmpkcs11.html
network.ui.options.clientcertificates.error.pkcs11.notavailable.ibm.hyperlink.text = IBMPKCS11Impl 提供者
network.ui.options.clientcertificates.error.pkcs11.notavailable.sun.hyperlink = http\://docs.oracle.com/javase/7/docs/technotes/guides/security/p11guide.html\#Requirements
network.ui.options.clientcertificates.error.pkcs11.notavailable.sun.hyperlink.text = Sun PKCS\#11 提供者
network.ui.options.clientcertificates.error.pkcs11.pinempty = 未提供 PIN 码。
network.ui.options.clientcertificates.error.pkcs11.wrongdata = 也许您的 PIN 码或库有错误。
network.ui.options.clientcertificates.error.pkcs11.wrongpassword = PKCS\#11 PIN 码不正确。
network.ui.options.clientcertificates.error.pkcs11.wrongpasswordlast = （阻止智能卡之前的最后一次尝试）
network.ui.options.clientcertificates.error.pkcs12.wrongdata = 也许您的文件或密码有错误。
network.ui.options.clientcertificates.keystore.activate = 启用
network.ui.options.clientcertificates.keystore.activecertificate = 活动证书
network.ui.options.clientcertificates.keystore.certs.table.header = 证书
network.ui.options.clientcertificates.keystore.enterpassword = 输入密码
network.ui.options.clientcertificates.keystore.keystores.table.header = 密钥库
network.ui.options.clientcertificates.keystore.remove = 删除
network.ui.options.clientcertificates.keystore.tab = 密钥库
network.ui.options.clientcertificates.keystore.view = 查看
network.ui.options.clientcertificates.name = 客户端证书
network.ui.options.clientcertificates.pkcs11.driver = 驱动器
network.ui.options.clientcertificates.pkcs11.driver.manage = 管理...
network.ui.options.clientcertificates.pkcs11.pin = PIN\:
network.ui.options.clientcertificates.pkcs11.tab = PKCS\#11
network.ui.options.clientcertificates.pkcs11.usesli = 使用槽位列表索引
network.ui.options.clientcertificates.pkcs11drivers.title = PKCS\#11驱动器
network.ui.options.clientcertificates.pkcs12.file = 文件
network.ui.options.clientcertificates.pkcs12.file.select = 选择...
network.ui.options.clientcertificates.pkcs12.file.select.desc = 客户端证书 {0}
network.ui.options.clientcertificates.pkcs12.password = 密码：
network.ui.options.clientcertificates.pkcs12.store = 存储配置
network.ui.options.clientcertificates.pkcs12.tab = PKCS\#12
network.ui.options.clientcertificates.usecertificate = 使用证书

network.ui.options.connection.general.dns.title = DNS
network.ui.options.connection.general.dns.ttlsuccessful.label = TTL 成功查询（以秒为单位）：
network.ui.options.connection.general.dns.ttlsuccessful.toolTip = <html>定义成功的 DNS 查询应缓存多长时间：<ul><li>负数，永远缓存；</li><li>零，禁用缓存；</li><li>正数， 查询将被缓存的秒数。</li></ul><strong>注意：</strong>更改会在重启后应用。</html>
network.ui.options.connection.general.globalhttpstate = 使用全局 HTTP 状态
network.ui.options.connection.general.tab = 综合
network.ui.options.connection.general.timeout = 超时（单位为秒）：
network.ui.options.connection.general.unsaferenegotiation = 启用不安全的 SSL/TLS 再协商
network.ui.options.connection.general.unsaferenegotiation.tooltip = 要启用不安全的 SSL/TLS 再协商，您必须在建立任何 HTTPS 连接之前将其打开。\n如果它不工作，请重新启动 ZAP。
network.ui.options.connection.general.useragent = 默认用户代理（User Agent）：

network.ui.options.connection.httpproxy.auth.enabled = 身份验证：
network.ui.options.connection.httpproxy.auth.storepass = 存储密码
network.ui.options.connection.httpproxy.enabled = 启用：
network.ui.options.connection.httpproxy.exclusions = 排除：
network.ui.options.connection.httpproxy.exclusions.add.button = 添加
network.ui.options.connection.httpproxy.exclusions.add.field.enabled = 启用：
network.ui.options.connection.httpproxy.exclusions.add.field.host = 主机\:
network.ui.options.connection.httpproxy.exclusions.add.title = 添加 HTTP 代理排除项
network.ui.options.connection.httpproxy.exclusions.modify.button = 修改
network.ui.options.connection.httpproxy.exclusions.modify.title = 修改 HTTP 代理排除项
network.ui.options.connection.httpproxy.exclusions.remove.button.cancel = 取消
network.ui.options.connection.httpproxy.exclusions.remove.button.confirm = 删除
network.ui.options.connection.httpproxy.exclusions.remove.checkbox.label = 不要再显示此消息
network.ui.options.connection.httpproxy.exclusions.remove.text = 您确定要移除选定的排除项吗？
network.ui.options.connection.httpproxy.exclusions.remove.title = 移除 HTTP 代理排除项
network.ui.options.connection.httpproxy.exclusions.table.header.enabled = 启用
network.ui.options.connection.httpproxy.exclusions.table.header.host = 主机
network.ui.options.connection.httpproxy.exclusions.warn.invalidregex.message = 提供的正则表达式非法：\n{0}
network.ui.options.connection.httpproxy.exclusions.warn.invalidregex.title = 无效的正则表达式
network.ui.options.connection.httpproxy.host = 主机\:
network.ui.options.connection.httpproxy.host.empty = HTTP 代理主机为空。
network.ui.options.connection.httpproxy.password = 密码：
network.ui.options.connection.httpproxy.port = 端口：
network.ui.options.connection.httpproxy.realm = 域：
network.ui.options.connection.httpproxy.tab = HTTP 代理
network.ui.options.connection.httpproxy.username = 用户名：
network.ui.options.connection.httpproxy.username.empty = HTTP 代理用户名为空。
network.ui.options.connection.httpproxy.zapaddress = The HTTP Proxy is configured to one of the Local Servers/Proxies, which would lead to unintended request loops.

network.ui.options.connection.name = 连接

network.ui.options.connection.socksproxy.dns = 使用 SOCKS 提供的 DNS
network.ui.options.connection.socksproxy.dns.tooltip = 只支持版本 5。
network.ui.options.connection.socksproxy.enabled = 启用：
network.ui.options.connection.socksproxy.host = 主机\:
network.ui.options.connection.socksproxy.host.empty = SOCKS 主机为空。
network.ui.options.connection.socksproxy.password = 密码：
network.ui.options.connection.socksproxy.port = 端口：
network.ui.options.connection.socksproxy.tab = SOCKS 代理
network.ui.options.connection.socksproxy.username = 用户名：
network.ui.options.connection.socksproxy.version = 版本：
network.ui.options.connection.socksproxy.zapaddress = The SOCKS Proxy is configured to one of the Local Servers/Proxies, which would lead to unintended request loops.

network.ui.options.globalexclusions.add.button = 添加
network.ui.options.globalexclusions.add.title = 添加全局排除项
network.ui.options.globalexclusions.field.enabled = 启用：
network.ui.options.globalexclusions.field.name = 名称\:
network.ui.options.globalexclusions.field.value = 值：
network.ui.options.globalexclusions.modify.button = 修改
network.ui.options.globalexclusions.modify.title = 修改全局排除项
network.ui.options.globalexclusions.name = 全局排除项
network.ui.options.globalexclusions.remove.button.cancel = 取消
network.ui.options.globalexclusions.remove.button.confirm = 删除
network.ui.options.globalexclusions.remove.checkbox.label = 不要再显示此消息。
network.ui.options.globalexclusions.remove.text = 您确定要移除选定的全局排除项吗？
network.ui.options.globalexclusions.remove.title = 移除全局排除项
network.ui.options.globalexclusions.table.header.enabled = 启用
network.ui.options.globalexclusions.table.header.name = 名称
network.ui.options.globalexclusions.warn.invalidregex.message = 提供的正则表达式非法：\n{0}
network.ui.options.globalexclusions.warn.invalidregex.title = 无效的正则表达式

network.ui.options.legacy.globalexcludeurl = 全局排除的URL
network.ui.options.legacy.globalexcludeurl.moved = 这些选项已移至 网络 > 全局排除项。
network.ui.options.legacy.opennew = 去新屏幕
network.ui.options.legacy.ratelimit = 速率限制

network.ui.options.localservers.add.button = 添加
network.ui.options.localservers.add.field.address = 地址：
network.ui.options.localservers.add.field.port = 端口：
network.ui.options.localservers.add.title = 添加本地服务器/代理
network.ui.options.localservers.desc = 使用以下代理之一设置您的浏览器代理设置。\nHTTP 端口和HTTPS 端口必须是同一个端口。
network.ui.options.localservers.field.behindnat = 在NAT后
network.ui.options.localservers.field.behindnat.tooltip = <html>表示 ZAP 在 NAT 后。<br>当选择 ZAP 时，将尝试确定公共 IP 地址，<br>以正确检测和处理使用公共 IP 地址的请求。<br>请参阅 帮助页面了解更多详情。</html>
network.ui.options.localservers.field.decoderesponse = 响应解码
network.ui.options.localservers.field.decoderesponse.tooltip = <html>始终自动解码（即 gzip、deflate）响应。<br>忽略“Accept-Encoding”标头字段的应用程序需要此选项<br>除非解码中断了测试的应用程序，否则应始终启用此选项 测试。</html>
network.ui.options.localservers.field.mode = 模式：
network.ui.options.localservers.field.mode.api = API
network.ui.options.localservers.field.mode.apiproxy = API 和代理
network.ui.options.localservers.field.mode.proxy = 代理
network.ui.options.localservers.field.removeacceptencoding = 移除 Accept-Encoding  请求Header
network.ui.options.localservers.field.removeacceptencoding.tooltip = <html>删除“Accept-Encoding”请求Header字段，<br>因此不会对响应进行（不支持的）编码转换。<br>应始终启用此选项，除非在测试编码转换时。<br> 使用不受支持的编码编码的 HTTP 响应将无法被正确扫描（无论是被动扫描器还是主动扫描器）。</html>
network.ui.options.localservers.mainproxy.title = 主代理
network.ui.options.localservers.modify.button = 修改
network.ui.options.localservers.modify.main.button = 代理属性...
network.ui.options.localservers.modify.main.title = 修改主代理
network.ui.options.localservers.modify.title = 修改本地服务器/代理
network.ui.options.localservers.name = 本地服务器/代理
network.ui.options.localservers.remove.button.cancel = 取消
network.ui.options.localservers.remove.button.confirm = 删除
network.ui.options.localservers.remove.checkbox.label = 不要再显示此消息
network.ui.options.localservers.remove.text = 您确定要移除选定的服务器？
network.ui.options.localservers.remove.title = 移除本地服务器/代理
network.ui.options.localservers.servers.binderror = 无法侦听此地址和端口：\n{0}
network.ui.options.localservers.servers.duplicated = 已定义具有此地址和端口的代理：\n{0}
network.ui.options.localservers.servers.duplicated.title = 重复的本地服务器/代理
network.ui.options.localservers.servers.title = 其他的服务器/代理
network.ui.options.localservers.table.header.address = 地址
network.ui.options.localservers.table.header.enabled = 启用
network.ui.options.localservers.table.header.port = 端口

network.ui.options.name = 网络

network.ui.options.passthrough.add.button = 添加
network.ui.options.passthrough.add.field.authority = 授权：
network.ui.options.passthrough.add.field.enabled = 启用：
network.ui.options.passthrough.add.title = 添加直通条件
network.ui.options.passthrough.modify.button = 修改
network.ui.options.passthrough.modify.title = 修改直通条件
network.ui.options.passthrough.remove.button.cancel = 取消
network.ui.options.passthrough.remove.button.confirm = 删除
network.ui.options.passthrough.remove.checkbox.label = 不要再显示此消息
network.ui.options.passthrough.remove.text = 您确定要移除所选的直通条件项吗？
network.ui.options.passthrough.remove.title = 移除直通条件
network.ui.options.passthrough.tab = 直通
network.ui.options.passthrough.table.header.authority = 授权
network.ui.options.passthrough.table.header.enabled = 启用
network.ui.options.passthrough.warn.invalidregex.message = 提供的正则表达式非法：\n{0}
network.ui.options.passthrough.warn.invalidregex.title = 无效的正则表达式

network.ui.options.pkcs11driver.add.button = 添加
network.ui.options.pkcs11driver.add.field.library = 库：
network.ui.options.pkcs11driver.add.field.library.select = 选择...
network.ui.options.pkcs11driver.add.field.name = 名称\:
network.ui.options.pkcs11driver.add.field.slot = 槽位：
network.ui.options.pkcs11driver.add.field.slotlistindex = 槽位列表索引：
network.ui.options.pkcs11driver.add.title = 添加 PKCS\#11 驱动器
network.ui.options.pkcs11driver.modify.button = 修改
network.ui.options.pkcs11driver.modify.title = 修改 PKCS\#11
network.ui.options.pkcs11driver.remove.button.cancel = 取消
network.ui.options.pkcs11driver.remove.button.confirm = 删除
network.ui.options.pkcs11driver.remove.checkbox.label = 不要再显示此消息
network.ui.options.pkcs11driver.remove.text = 您确定要移除选定的驱动？
network.ui.options.pkcs11driver.remove.title = 移除 PKCS\#11
network.ui.options.pkcs11driver.table.header.name = 名称
network.ui.options.pkcs11driver.table.header.slot = 槽位
network.ui.options.pkcs11driver.table.header.slotlistindex = 槽位列表索引

network.ui.options.securityprotocols.error.justsslv2helloselected = SSLv2Hello 必须与其他安全协议一起选择。
network.ui.options.securityprotocols.error.noprotocolsselected = 必须至少选择一个安全协议
network.ui.options.securityprotocols.error.title = 不正确的安全协议配置
network.ui.options.securityprotocols.protocolnotsupportedtooltip = 协议未启用或JRE不支持此协议。
network.ui.options.securityprotocols.ssl2hello.label = SSLv2Hello
network.ui.options.securityprotocols.ssl3.label = SSL 3
network.ui.options.securityprotocols.title = 安全协议
network.ui.options.securityprotocols.tlsv1.1.label = TLS 1.1
network.ui.options.securityprotocols.tlsv1.2.label = TLS 1.2
network.ui.options.securityprotocols.tlsv1.3.label = TLS 1.3
network.ui.options.securityprotocols.tlsv1.label = TLS 1

network.ui.options.servercertificates.button.generate = 生成
network.ui.options.servercertificates.button.import = 导入
network.ui.options.servercertificates.button.save = 保存
network.ui.options.servercertificates.button.view = 查看
network.ui.options.servercertificates.field.certvalidity = 有效期天数：
network.ui.options.servercertificates.field.crldistpoint = CRL Dist. Point\:
network.ui.options.servercertificates.field.pem = PEM\:
network.ui.options.servercertificates.import.config.error = 无法从配置文件导入根 CA 证书。\n详细信息请参阅日志文件。
network.ui.options.servercertificates.import.config.error.title = 导入出错
network.ui.options.servercertificates.import.config.nocert = 所选配置文件没有证书。
network.ui.options.servercertificates.import.config.nocert.title = 没有根CA证书
network.ui.options.servercertificates.import.pem.certnobase64 = 证书未正确进行 base64 编码。
network.ui.options.servercertificates.import.pem.failed.title = 导入根 CA 证书 .pem 文件时出错
network.ui.options.servercertificates.import.pem.failedkeystore = 无法从 .pem 文件创建密钥库：\n{0}
network.ui.options.servercertificates.import.pem.failedreadfile = 读取所选的 .pem 文件失败：\n{0}
network.ui.options.servercertificates.import.pem.nocertsection = 在 .pem 文件中找不到证书节段。\n它应该包含被令牌包围的证书：\n{0}\n和：\n{1}
network.ui.options.servercertificates.import.pem.noprivkeysection = 在 .pem 文件中找不到私钥节段。\n它应该包含用令牌包围的私钥：\n{0}\n和：\n{1}
network.ui.options.servercertificates.import.pem.privkeynobase64 = 私钥未正确进行 base64 编码。
network.ui.options.servercertificates.name = 服务器证书：\n
network.ui.options.servercertificates.overwrite.message = 根 CA 证书已存在。\n创建新证书，将替换现有证书。\n\n是否要覆盖当前证书？
network.ui.options.servercertificates.overwrite.title = 覆盖现有证书？
network.ui.options.servercertificates.tab.issuedcerts = 已颁发的证书
network.ui.options.servercertificates.tab.rootcacert = 根CA证书

network.ui.prompt.httpproxy.password.button = 确定
network.ui.prompt.httpproxy.password.label = HTTP 代理密码：
network.ui.prompt.httpproxy.password.title = 需要提供 HTTP 代理密码

network.ui.ratelimit.add.title = 添加速率限制规则
network.ui.ratelimit.add.warning.badregex = 匹配字符串不是有效的正则表达式模式。
network.ui.ratelimit.add.warning.existdesc = 具有此说明的规则已存在。
network.ui.ratelimit.add.warning.nodesc = 您必须填写描述。
network.ui.ratelimit.add.warning.nomatch = 你必须提供一个匹配字符串。
network.ui.ratelimit.context.limitdomain.title = 域
network.ui.ratelimit.context.limithost.title = 主机
network.ui.ratelimit.context.title = 限制请求速率
network.ui.ratelimit.desc = 限制请求速率以防止过载或被阻止。
network.ui.ratelimit.groupby.host = 主机
network.ui.ratelimit.groupby.rule = 规则
network.ui.ratelimit.label.desc = 说明：
network.ui.ratelimit.label.enable = 启动：
network.ui.ratelimit.label.groupby = 分组：
network.ui.ratelimit.label.matchstr = 匹配字符串：
network.ui.ratelimit.label.regex = 匹配正则表达式：
network.ui.ratelimit.label.requestspersecond = 每秒请求数：
network.ui.ratelimit.modify.title = 修改速率限制规则
network.ui.ratelimit.name = 请求速率限制
network.ui.ratelimit.options.dialog.remove.button.cancel = 取消
network.ui.ratelimit.options.dialog.remove.button.confirm = 删除
network.ui.ratelimit.options.dialog.remove.checkbox.label = 不要再显示此消息。
network.ui.ratelimit.options.dialog.remove.text = 您确定要删除这个规则吗？
network.ui.ratelimit.options.dialog.remove.title = 移除速率限制规则
network.ui.ratelimit.options.label.rules = 规则：
network.ui.ratelimit.options.table.header.description = 说明
network.ui.ratelimit.options.table.header.enabled = 启用
network.ui.ratelimit.options.table.header.groupby = 分组
network.ui.ratelimit.options.table.header.match = 匹配字符串
network.ui.ratelimit.options.table.header.requestspersecond = Req/Sec
network.ui.ratelimit.options.title = 速率限制
network.ui.ratelimit.panel.title = 速率限制选项
network.ui.ratelimit.status.header.description = 规则
network.ui.ratelimit.status.header.effectiverate = Effective Rate
network.ui.ratelimit.status.header.group = 组
network.ui.ratelimit.status.header.lastrequest = 最后
network.ui.ratelimit.status.header.requestcount = 请求数
network.ui.ratelimit.status.title = 速率限制
network.ui.ratelimit.tab.rule = 规则

network.warn.cert.expired = ZAP 的根 CA 证书已于 {0}（现在：{1}）过期。\n您应该重新生成它并在您的浏览器中重新安装它。\n\n重新生成证书并立即转到相关选项屏幕？
network.warn.cert.failed = 无法创建根 CA 证书。\n有关详细信息，请参阅日志。

network.api.action.addAlias = Adds an alias for the local servers/proxies.
network.api.action.addAlias.param.enabled = The enabled state, true or false.
network.api.action.addAlias.param.name = The name of the alias.
network.api.action.addHttpProxyExclusion = Adds a host to be excluded from the HTTP proxy.
network.api.action.addHttpProxyExclusion.param.enabled = The enabled state, true or false.
network.api.action.addHttpProxyExclusion.param.host = The value of the host, a regular expression.
network.api.action.addLocalServer = Adds a local server/proxy.
network.api.action.addLocalServer.param.address = The address of the local server/proxy.
network.api.action.addLocalServer.param.api = If the ZAP API is available, true or false.
network.api.action.addLocalServer.param.behindNat = If the local server is behind NAT, true or false.
network.api.action.addLocalServer.param.decodeResponse = If the response should be decoded, true or false.
network.api.action.addLocalServer.param.port = The port of the local server/proxy.
network.api.action.addLocalServer.param.proxy = If the local server should proxy, true or false.
network.api.action.addLocalServer.param.removeAcceptEncoding = If the request header Accept-Encoding should be removed, true or false.
network.api.action.addPassThrough = Adds an authority to pass-through the local proxies.
network.api.action.addPassThrough.param.authority = The value of the authority, can be a regular expression.
network.api.action.addPassThrough.param.enabled = The enabled state, true or false.
network.api.action.addPkcs12ClientCertificate = Adds a client certificate contained in a PKCS\#12 file, the certificate is automatically set as active and used.
network.api.action.addPkcs12ClientCertificate.param.filePath = The file path.
network.api.action.addPkcs12ClientCertificate.param.index = The index of the certificate in the file, defaults to 0.
network.api.action.addPkcs12ClientCertificate.param.password = The password for the file.
network.api.action.generateRootCaCert = Generates a new Root CA certificate, used to issue server certificates.
network.api.action.importRootCaCert = Imports a Root CA certificate to be used to issue server certificates.
network.api.action.importRootCaCert.param.filePath = The file system path to the PEM file, containing the certificate and private key.
network.api.action.removeAlias = Removes an alias.
network.api.action.removeAlias.param.name = The name of the alias.
network.api.action.removeHttpProxyExclusion = Removes an HTTP proxy exclusion.
network.api.action.removeHttpProxyExclusion.param.host = The value of the host.
network.api.action.removeLocalServer = Removes a local server/proxy.
network.api.action.removeLocalServer.param.address = The address of the local server/proxy.
network.api.action.removeLocalServer.param.port = The port of the local server/proxy.
network.api.action.removePassThrough = Removes a pass-through.
network.api.action.removePassThrough.param.authority = The value of the authority.
network.api.action.setAliasEnabled = Sets whether or not an alias is enabled.
network.api.action.setAliasEnabled.param.enabled = The enabled state, true or false.
network.api.action.setAliasEnabled.param.name = The name of the alias.
network.api.action.setConnectionTimeout = Sets the timeout, for reads and connects.
network.api.action.setConnectionTimeout.param.timeout = The timeout, in seconds.
network.api.action.setDefaultUserAgent = Sets the default user-agent.
network.api.action.setDefaultUserAgent.param.userAgent = The default user-agent.
network.api.action.setDnsTtlSuccessfulQueries = Sets the TTL of successful DNS queries.
network.api.action.setDnsTtlSuccessfulQueries.param.ttl = The TTL, in seconds. Negative number, cache forever. Zero, disables caching. Positive number, the number of seconds the successful DNS queries will be cached.
network.api.action.setHttpProxy = Sets the HTTP proxy configuration.
network.api.action.setHttpProxy.param.host = The host, name or address.
network.api.action.setHttpProxy.param.password = The password.
network.api.action.setHttpProxy.param.port = The port.
network.api.action.setHttpProxy.param.realm = The authentication realm.
network.api.action.setHttpProxy.param.username = The user name.
network.api.action.setHttpProxyAuthEnabled = Sets whether or not the HTTP proxy authentication is enabled.
network.api.action.setHttpProxyAuthEnabled.param.enabled = The enabled state, true or false.
network.api.action.setHttpProxyEnabled = Sets whether or not the HTTP proxy is enabled.
network.api.action.setHttpProxyEnabled.param.enabled = The enabled state, true or false.
network.api.action.setHttpProxyExclusionEnabled = Sets whether or not an HTTP proxy exclusion is enabled.
network.api.action.setHttpProxyExclusionEnabled.param.enabled = The enabled state, true or false.
network.api.action.setHttpProxyExclusionEnabled.param.host = The value of the host.
network.api.action.setPassThroughEnabled = Sets whether or not a pass-through is enabled.
network.api.action.setPassThroughEnabled.param.authority = The value of the authority.
network.api.action.setPassThroughEnabled.param.enabled = The enabled state, true or false.
network.api.action.setRootCaCertValidity = Sets the Root CA certificate validity. Used when generating a new Root CA certificate.
network.api.action.setRootCaCertValidity.param.validity = The number of days that the generated Root CA certificate will be valid for.
network.api.action.setServerCertValidity = Sets the server certificate validity. Used when generating server certificates.
network.api.action.setServerCertValidity.param.validity = The number of days that the generated server certificates will be valid for.
network.api.action.setSocksProxy = Sets the SOCKS proxy configuration.
network.api.action.setSocksProxy.param.host = The host, name or address.
network.api.action.setSocksProxy.param.password = The password.
network.api.action.setSocksProxy.param.port = The port.
network.api.action.setSocksProxy.param.useDns = If the names should be resolved by the SOCKS proxy, true or false.
network.api.action.setSocksProxy.param.username = The user name.
network.api.action.setSocksProxy.param.version = The SOCKS version.
network.api.action.setSocksProxyEnabled = Sets whether or not the SOCKS proxy is enabled.
network.api.action.setSocksProxyEnabled.param.enabled = The enabled state, true or false.
network.api.action.setUseClientCertificate = Sets whether or not to use the active client certificate.
network.api.action.setUseClientCertificate.param.use = The use state, true or false.
network.api.action.setUseGlobalHttpState = Sets whether or not to use the global HTTP state.
network.api.action.setUseGlobalHttpState.param.use = The use state, true or false.
network.api.desc = Allows to access and configure core networking capabilities.

network.api.legacy.api.action.addAdditionalProxy = Adds a new proxy using the details supplied.
network.api.legacy.api.action.removeAdditionalProxy = 删除具有指定地址和端口的附加代理。
network.api.legacy.api.view.additionalProxies = 获取所有已配置的附加代理。
network.api.legacy.deprecated.network = Use the API endpoints in the 'network' component instead.

network.api.other.proxy.pac = Provides a PAC file, proxying through the main proxy.
network.api.other.rootCaCert = Gets the Root CA certificate used to issue server certificates. Suitable to import into client applications (e.g. browsers).
network.api.other.setProxy = Sets the HTTP proxy configuration.
network.api.other.setProxy.param.proxy = The JSON object containing the HTTP proxy configuration.
network.api.view.getAliases = Gets the aliases used to identify the local servers/proxies.
network.api.view.getConnectionTimeout = Gets the connection timeout, in seconds.
network.api.view.getDefaultUserAgent = Gets the default user-agent.
network.api.view.getDnsTtlSuccessfulQueries = 获取成功 DNS 查询的 TTL（以秒为单位）。
network.api.view.getHttpProxy = Gets the HTTP proxy.
network.api.view.getHttpProxyExclusions = Gets the HTTP proxy exclusions.
network.api.view.getLocalServers = Gets the local servers/proxies.
network.api.view.getPassThroughs = Gets the authorities that will pass-through the local proxies.
network.api.view.getRootCaCertValidity = Gets the Root CA certificate validity, in days. Used when generating a new Root CA certificate.
network.api.view.getServerCertValidity = Gets the server certificate validity, in days. Used when generating server certificates.
network.api.view.getSocksProxy = Gets the SOCKS proxy.
network.api.view.isHttpProxyAuthEnabled = Tells whether or not the HTTP proxy authentication is enabled.
network.api.view.isHttpProxyEnabled = Tells whether or not the HTTP proxy is enabled.
network.api.view.isSocksProxyEnabled = Tells whether or not the SOCKS proxy is enabled.
network.api.view.isUseGlobalHttpState = Tells whether or not to use global HTTP state.

network.cmdline.certdump.done = 根 CA 证书写入到 {0} 
network.cmdline.certfulldump = 将 Root CA 完整证书（包括私钥）转储到指定的文件名中，这适用于导入到 ZAP
network.cmdline.certload = 从指定的文件名加载根 CA 证书
network.cmdline.certload.done = 从 {0}加载根 CA 证书 
network.cmdline.certpubdump = 将 Root CA 公共证书转储到指定的文件名中，这适合导入到浏览器中
network.cmdline.error.noread = 不能读取文件 {0}
network.cmdline.error.nowrite = 不能写入文件 {0}
network.cmdline.error.write = 将根 CA 证书写入 {0} 时出错
network.cmdline.proxy.error.generic = Cause\: {0}
network.cmdline.proxy.error.host.assign = Cannot listen on address\: {0}
network.cmdline.proxy.error.host.unknown = Unknown host\: {0}
network.cmdline.proxy.error.message = An error occurred while starting the main proxy.\n{0}
network.cmdline.proxy.error.port = Cannot listen on port {0}\:{1} - try specifying a different port for ZAP to use.
network.cmdline.proxy.error.port.retry = Unable to use the port {0}. Try\:
network.cmdline.proxy.error.title = Error Starting Main Proxy
network.cmdline.proxy.host = Overrides the host of the main proxy, specified in the configuration file
network.cmdline.proxy.port = Overrides the port of the main proxy, specified in the configuration file
network.cmdline.proxy.port.invalid.message = Unable to start the main proxy, -port value is not a valid port number\:\n{0}
network.cmdline.proxy.port.invalid.title = Invalid Port Number

network.ext.desc = Provides core networking capabilities.
network.ext.name = Network Extension

network.httpsender.error.badhost.connect = 尝试连接时发生异常：
network.httpsender.error.badhost.exception = 异常为：
network.httpsender.error.badhost.help = 以下文档可能有助于解决此故障：\n{0}
network.httpsender.error.badhost.help.url = https\://www.zaproxy.org/faq/why-cant-zap-connect-to-my-website/

network.httpsender.error.proxy = \n\nYour "Options / Network / Connection" proxy settings might be incorrect.
network.httpsender.error.readtimeout = Failed to read {0} within {1} seconds, check to see if the site is available and if so consider adjusting ZAP''s read time out in the Connection options panel.
network.httpsender.ssl.error.connect = 尝试连接时发生异常：
network.httpsender.ssl.error.exception = 异常为：
network.httpsender.ssl.error.exception.rootcause = 根源：
network.httpsender.ssl.error.help = 以下文档可能有助于解决此故障：\n{0}
network.httpsender.ssl.error.help.url = https\://www.zaproxy.org/faq/how-to-connect-to-an-https-site-that-reports-a-handshake-failure/

network.importpem.certnobase64 = 证书未正确进行 base64 编码。
network.importpem.failed.title = 导入根 CA 证书 .pem 文件时出错
network.importpem.failedkeystore = 无法从 .pem 文件创建密钥库：\n{0}
network.importpem.failedreadfile = 读取所选的 .pem 文件失败：\n{0}
network.importpem.nocertsection = 在 .pem 文件中找不到证书节段。\n它应该包含被令牌包围的证书：\n{0}\n和：\n{1}
network.importpem.noprivkeysection = 在 .pem 文件中找不到私钥节段。\n它应该包含用令牌包围的私钥：\n{0}\n和：\n{1}
network.importpem.privkeynobase64 = 私钥未正确进行 base64 编码。

network.ui.footer.proxies.main = Main Proxy\: {0}
network.ui.footer.proxies.representation = {0}\:{1}
network.ui.footer.proxies.tooltip.additional.disabled = Additional Proxies (Disabled)\:
network.ui.footer.proxies.tooltip.additional.enabled = Additional Proxies (Enabled)\:
network.ui.footer.proxies.tooltip.main = Main Proxy\:

network.ui.options.alias.add.button = 添加
network.ui.options.alias.add.field.enabled = 启用：
network.ui.options.alias.add.field.name = 名称\:
network.ui.options.alias.add.title = Add Alias
network.ui.options.alias.modify.button = 修改
network.ui.options.alias.modify.title = Modify Alias
network.ui.options.alias.remove.button.cancel = 取消
network.ui.options.alias.remove.button.confirm = 删除
network.ui.options.alias.remove.checkbox.label = 不要再显示此消息
network.ui.options.alias.remove.text = Are you sure you want to remove the selected alias?
network.ui.options.alias.remove.title = Remove Alias
network.ui.options.alias.tab = Aliases
network.ui.options.alias.table.header.enabled = 启用
network.ui.options.alias.table.header.name = 名称

network.ui.options.alpn.enable.label = Enable TLS ALPN extension
network.ui.options.alpn.protocols.error.noprotocolsselected = You must select at least one application protocol.
network.ui.options.alpn.protocols.error.title = Incorrect Application Protocol Configuration
network.ui.options.alpn.protocols.http1.1.label = HTTP/1.1
network.ui.options.alpn.protocols.http2.label = HTTP/2
network.ui.options.alpn.protocols.label = Protocols\:
network.ui.options.alpn.title = ALPN

network.ui.options.clientcertificates.addkeystore = 添加到密钥库
network.ui.options.clientcertificates.certificate.title = 证书
network.ui.options.clientcertificates.description = Add your keystore and activate the desired certificate.
network.ui.options.clientcertificates.error = 错误
network.ui.options.clientcertificates.error.accesskeystore = Error accessing KeyStore\:
network.ui.options.clientcertificates.error.cert.title = 客户端证书
network.ui.options.clientcertificates.error.pkcs11.lib = Try to specify the PKCS\#11 library again...
network.ui.options.clientcertificates.error.pkcs11.notavailable = The required Sun/IBM PKCS\#11 provider is not available.\nFor more information visit the pages\:
network.ui.options.clientcertificates.error.pkcs11.notavailable.ibm.hyperlink = http\://pic.dhe.ibm.com/infocenter/java7sdk/v7r0/topic/com.ibm.java.security.component.71.doc/security-component/pkcs11implDocs/ibmpkcs11.html
network.ui.options.clientcertificates.error.pkcs11.notavailable.ibm.hyperlink.text = IBMPKCS11Impl 提供者
network.ui.options.clientcertificates.error.pkcs11.notavailable.sun.hyperlink = http\://docs.oracle.com/javase/7/docs/technotes/guides/security/p11guide.html\#Requirements
network.ui.options.clientcertificates.error.pkcs11.notavailable.sun.hyperlink.text = Sun PKCS\#11 提供者
network.ui.options.clientcertificates.error.pkcs11.pinempty = The PIN was not provided.
network.ui.options.clientcertificates.error.pkcs11.wrongdata = Maybe your PIN or library is wrong.
network.ui.options.clientcertificates.error.pkcs11.wrongpassword = Incorrect PKCS\#11 PIN.
network.ui.options.clientcertificates.error.pkcs11.wrongpasswordlast = （阻止智能卡之前的最后一次尝试）
network.ui.options.clientcertificates.error.pkcs12.wrongdata = Maybe your file or password is wrong.
network.ui.options.clientcertificates.keystore.activate = Activate
network.ui.options.clientcertificates.keystore.activecertificate = 活动证书
network.ui.options.clientcertificates.keystore.certs.table.header = 证书
network.ui.options.clientcertificates.keystore.enterpassword = 输入密码
network.ui.options.clientcertificates.keystore.keystores.table.header = 密钥库
network.ui.options.clientcertificates.keystore.remove = 删除
network.ui.options.clientcertificates.keystore.tab = 密钥库
network.ui.options.clientcertificates.keystore.view = 查看
network.ui.options.clientcertificates.name = Client Certificates
network.ui.options.clientcertificates.pkcs11.driver = Driver\:
network.ui.options.clientcertificates.pkcs11.driver.manage = Manage...
network.ui.options.clientcertificates.pkcs11.pin = PIN\:
network.ui.options.clientcertificates.pkcs11.tab = PKCS\#11
network.ui.options.clientcertificates.pkcs11.usesli = Use Slot List Index
network.ui.options.clientcertificates.pkcs11drivers.title = PKCS\#11驱动器
network.ui.options.clientcertificates.pkcs12.file = 文件
network.ui.options.clientcertificates.pkcs12.file.select = 选择...
network.ui.options.clientcertificates.pkcs12.file.select.desc = Client Certificate {0}
network.ui.options.clientcertificates.pkcs12.password = Password\:
network.ui.options.clientcertificates.pkcs12.store = Store Configuration
network.ui.options.clientcertificates.pkcs12.tab = PKCS\#12
network.ui.options.clientcertificates.usecertificate = Use Certificate

network.ui.options.connection.general.dns.title = DNS
network.ui.options.connection.general.dns.ttlsuccessful.label = TTL 成功查询（以秒为单位）：
network.ui.options.connection.general.dns.ttlsuccessful.toolTip = <html>Defines for how long the successful DNS queries should be cached\:<ul><li>Negative number, cache forever;</li><li>Zero, disables caching;</li><li>Positive number, the number of seconds the queries will be cached.</li></ul><strong>Note\:</strong> Changes are applied after a restart.</html>
network.ui.options.connection.general.globalhttpstate = Use Global HTTP State
network.ui.options.connection.general.tab = 综合
network.ui.options.connection.general.timeout = 超时（单位为秒）：
network.ui.options.connection.general.unsaferenegotiation = 启用不安全的 SSL/TLS 再协商
network.ui.options.connection.general.unsaferenegotiation.tooltip = To enable unsafe SSL/TLS renegotiation you must turn it on before establishing any HTTPS connection.\nIf it is not working, restart ZAP.
network.ui.options.connection.general.useragent = 默认用户代理（User Agent）：

network.ui.options.connection.httpproxy.auth.enabled = Authenticate\:
network.ui.options.connection.httpproxy.auth.storepass = Store Password
network.ui.options.connection.httpproxy.enabled = 启用：
network.ui.options.connection.httpproxy.exclusions = Exclusions\:
network.ui.options.connection.httpproxy.exclusions.add.button = 添加
network.ui.options.connection.httpproxy.exclusions.add.field.enabled = 启用：
network.ui.options.connection.httpproxy.exclusions.add.field.host = 主机\:
network.ui.options.connection.httpproxy.exclusions.add.title = Add HTTP Proxy Exclusion
network.ui.options.connection.httpproxy.exclusions.modify.button = 修改
network.ui.options.connection.httpproxy.exclusions.modify.title = Modify HTTP Proxy Exclusion
network.ui.options.connection.httpproxy.exclusions.remove.button.cancel = 取消
network.ui.options.connection.httpproxy.exclusions.remove.button.confirm = 删除
network.ui.options.connection.httpproxy.exclusions.remove.checkbox.label = 不要再显示此消息
network.ui.options.connection.httpproxy.exclusions.remove.text = Are you sure you want to remove the selected exclusion?
network.ui.options.connection.httpproxy.exclusions.remove.title = Remove HTTP Proxy Exclusion
network.ui.options.connection.httpproxy.exclusions.table.header.enabled = 启用
network.ui.options.connection.httpproxy.exclusions.table.header.host = Host
network.ui.options.connection.httpproxy.exclusions.warn.invalidregex.message = 提供的正则表达式非法：\n{0}
network.ui.options.connection.httpproxy.exclusions.warn.invalidregex.title = 无效的正则表达式
network.ui.options.connection.httpproxy.host = 主机\:
network.ui.options.connection.httpproxy.host.empty = The HTTP proxy host is empty.
network.ui.options.connection.httpproxy.password = Password\:
network.ui.options.connection.httpproxy.port = 端口：
network.ui.options.connection.httpproxy.realm = 域：
network.ui.options.connection.httpproxy.tab = HTTP Proxy
network.ui.options.connection.httpproxy.username = 用户名：
network.ui.options.connection.httpproxy.username.empty = The HTTP proxy user name is empty.

network.ui.options.connection.name = 连接

network.ui.options.connection.socksproxy.dns = 使用 SOCKS 提供的 DNS
network.ui.options.connection.socksproxy.dns.tooltip = 只支持版本 5。
network.ui.options.connection.socksproxy.enabled = 启用：
network.ui.options.connection.socksproxy.host = 主机\:
network.ui.options.connection.socksproxy.host.empty = SOCKS 主机为空。
network.ui.options.connection.socksproxy.password = Password\:
network.ui.options.connection.socksproxy.port = 端口：
network.ui.options.connection.socksproxy.tab = SOCKS 代理
network.ui.options.connection.socksproxy.username = 用户名：
network.ui.options.connection.socksproxy.version = 版本：

network.ui.options.legacy.clientcerts = 客户端证书
network.ui.options.legacy.clientcerts.moved = These options have been moved to Network > Client Certificates.
network.ui.options.legacy.connection = 连接
network.ui.options.legacy.connection.moved = These options have been moved to Network > Connection.
network.ui.options.legacy.dynssl = 动态SSL证书
network.ui.options.legacy.dynssl.moved = These options have been moved to Network > Server Certificates.
network.ui.options.legacy.opennew = Go to New Screen
network.ui.options.legacy.proxies = 本地代理
network.ui.options.legacy.proxies.moved = These options have been moved to Network > Local Servers/Proxies.

network.ui.options.localservers.add.button = 添加
network.ui.options.localservers.add.field.address = 地址：
network.ui.options.localservers.add.field.port = 端口：
network.ui.options.localservers.add.title = Add Local Server/Proxy
network.ui.options.localservers.desc = Set your browser proxy setting using one of the following proxies.\nThe HTTP port and HTTPS port must be the same port.
network.ui.options.localservers.field.behindnat = 在NAT后
network.ui.options.localservers.field.behindnat.tooltip = <html>Indicates that ZAP is behind NAT.<br>When selected ZAP will attempt to determine the public IP address,<br>to properly detect and handle requests with the public IP address.<br>Refer to the help page for more details.</html>
network.ui.options.localservers.field.decoderesponse = Decode Response
network.ui.options.localservers.field.decoderesponse.tooltip = <html>Always automatically decode (i.e. gzip, deflate) the response.<br>This option is needed for applications that ignore the "Accept-Encoding" header field<br>This option should be always enabled unless the decoding breaks the application being tested.</html>
network.ui.options.localservers.field.mode = Mode\:
network.ui.options.localservers.field.mode.api = API
network.ui.options.localservers.field.mode.apiproxy = API and Proxy
network.ui.options.localservers.field.mode.proxy = 代理
network.ui.options.localservers.field.removeacceptencoding = Remove Accept-Encoding Request Header
network.ui.options.localservers.field.removeacceptencoding.tooltip = <html>Removes the "Accept-Encoding" request header field, <br>so no (unsupported) encoding transformations are done to the response.<br>This option should be always enabled unless when testing the encoding transformations.<br>The HTTP responses encoded with unsupported encodings will not be correctly scanned (either by passive and active scanners).</html>
network.ui.options.localservers.mainproxy.title = Main Proxy
network.ui.options.localservers.modify.button = 修改
network.ui.options.localservers.modify.main.button = Proxy Properties...
network.ui.options.localservers.modify.main.title = Modify Main Proxy
network.ui.options.localservers.modify.title = Modify Local Server/Proxy
network.ui.options.localservers.name = Local Servers/Proxies
network.ui.options.localservers.remove.button.cancel = 取消
network.ui.options.localservers.remove.button.confirm = 删除
network.ui.options.localservers.remove.checkbox.label = 不要再显示此消息
network.ui.options.localservers.remove.text = Are you sure you want to remove the selected server?
network.ui.options.localservers.remove.title = Remove Local Server/Proxy
network.ui.options.localservers.servers.binderror = Unable to listen on this address and port\:\n{0}
network.ui.options.localservers.servers.duplicated = A local server/proxy with this address and port is already defined\:\n{0}
network.ui.options.localservers.servers.duplicated.title = Duplicated Local Server/Proxy
network.ui.options.localservers.servers.title = Additional Servers/Proxies
network.ui.options.localservers.table.header.address = 地址
network.ui.options.localservers.table.header.enabled = 启用
network.ui.options.localservers.table.header.port = 端口

network.ui.options.name = Network

network.ui.options.passthrough.add.button = 添加
network.ui.options.passthrough.add.field.authority = Authority\:
network.ui.options.passthrough.add.field.enabled = 启用：
network.ui.options.passthrough.add.title = Add Pass-through Condition
network.ui.options.passthrough.modify.button = 修改
network.ui.options.passthrough.modify.title = Modify Pass-through Condition
network.ui.options.passthrough.remove.button.cancel = 取消
network.ui.options.passthrough.remove.button.confirm = 删除
network.ui.options.passthrough.remove.checkbox.label = 不要再显示此消息
network.ui.options.passthrough.remove.text = Are you sure you want to remove the selected pass-through condition?
network.ui.options.passthrough.remove.title = Remove Pass-through Condition
network.ui.options.passthrough.tab = Pass-through
network.ui.options.passthrough.table.header.authority = Authority
network.ui.options.passthrough.table.header.enabled = 启用
network.ui.options.passthrough.warn.invalidregex.message = 提供的正则表达式非法：\n{0}
network.ui.options.passthrough.warn.invalidregex.title = 无效的正则表达式

network.ui.options.pkcs11driver.add.button = 添加
network.ui.options.pkcs11driver.add.field.library = Library\:
network.ui.options.pkcs11driver.add.field.library.select = 选择...
network.ui.options.pkcs11driver.add.field.name = 名称\:
network.ui.options.pkcs11driver.add.field.slot = Slot\:
network.ui.options.pkcs11driver.add.field.slotlistindex = Slot List Index\:
network.ui.options.pkcs11driver.add.title = Add PKCS\#11 Driver
network.ui.options.pkcs11driver.modify.button = 修改
network.ui.options.pkcs11driver.modify.title = Modify PKCS\#11
network.ui.options.pkcs11driver.remove.button.cancel = 取消
network.ui.options.pkcs11driver.remove.button.confirm = 删除
network.ui.options.pkcs11driver.remove.checkbox.label = 不要再显示此消息
network.ui.options.pkcs11driver.remove.text = Are you sure you want to remove the selected driver?
network.ui.options.pkcs11driver.remove.title = Remove PKCS\#11
network.ui.options.pkcs11driver.table.header.name = 名称
network.ui.options.pkcs11driver.table.header.slot = 槽位
network.ui.options.pkcs11driver.table.header.slotlistindex = Slot List Index

network.ui.options.securityprotocols.error.justsslv2helloselected = SSLv2Hello 必须与其他安全协议一起选择。
network.ui.options.securityprotocols.error.noprotocolsselected = 必须至少选择一个安全协议
network.ui.options.securityprotocols.error.title = Incorrect Security Protocol Configuration
network.ui.options.securityprotocols.protocolnotsupportedtooltip = Protocol not enabled or not supported by the JRE.
network.ui.options.securityprotocols.ssl2hello.label = SSLv2Hello
network.ui.options.securityprotocols.ssl3.label = SSL 3
network.ui.options.securityprotocols.title = 安全协议
network.ui.options.securityprotocols.tlsv1.1.label = TLS 1.1
network.ui.options.securityprotocols.tlsv1.2.label = TLS 1.2
network.ui.options.securityprotocols.tlsv1.3.label = TLS 1.3
network.ui.options.securityprotocols.tlsv1.label = TLS 1

network.ui.options.servercertificates.button.generate = 生成
network.ui.options.servercertificates.button.import = 导入
network.ui.options.servercertificates.button.save = 保存
network.ui.options.servercertificates.button.view = 查看
network.ui.options.servercertificates.field.certvalidity = Validity in Days\:
network.ui.options.servercertificates.field.pem = PEM\:
network.ui.options.servercertificates.import.config.error = 无法从配置文件导入根 CA 证书。\n详细信息请参阅日志文件。
network.ui.options.servercertificates.import.config.error.title = 导入出错
network.ui.options.servercertificates.import.config.nocert = 所选配置文件没有证书。
network.ui.options.servercertificates.import.config.nocert.title = 没有根CA证书
network.ui.options.servercertificates.import.pem.certnobase64 = 证书未正确进行 base64 编码。
network.ui.options.servercertificates.import.pem.failed.title = 导入根 CA 证书 .pem 文件时出错
network.ui.options.servercertificates.import.pem.failedkeystore = 无法从 .pem 文件创建密钥库：\n{0}
network.ui.options.servercertificates.import.pem.failedreadfile = 读取所选的 .pem 文件失败：\n{0}
network.ui.options.servercertificates.import.pem.nocertsection = 在 .pem 文件中找不到证书节段。\n它应该包含被令牌包围的证书：\n{0}\n和：\n{1}
network.ui.options.servercertificates.import.pem.noprivkeysection = 在 .pem 文件中找不到私钥节段。\n它应该包含用令牌包围的私钥：\n{0}\n和：\n{1}
network.ui.options.servercertificates.import.pem.privkeynobase64 = 私钥未正确进行 base64 编码。
network.ui.options.servercertificates.name = Server Certificates
network.ui.options.servercertificates.overwrite.message = A Root CA certificate already exists.\nCreating a new certificate, will replace the existing one.\n\nDo you want to overwrite the current certificate?
network.ui.options.servercertificates.overwrite.title = 覆盖现有证书？
network.ui.options.servercertificates.tab.issuedcerts = Issued Certificates
network.ui.options.servercertificates.tab.rootcacert = Root CA Certificate

network.ui.prompt.httpproxy.password.button = OK
network.ui.prompt.httpproxy.password.label = HTTP Proxy Password\:
network.ui.prompt.httpproxy.password.title = HTTP Proxy Password Required

network.warn.cert.expired = ZAP''s Root CA certificate has expired as of {0} (now\: {1}).\nYou should regenerate it and re-install it in your browsers.\nRegenerate the certificate and go to the relevant options screen now?
network.warn.cert.failed = Failed to create Root CA certificate.\nRefer to log for more details.

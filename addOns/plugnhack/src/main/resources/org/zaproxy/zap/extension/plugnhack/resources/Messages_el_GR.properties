plugnhack.activated		= ZAP support has been activated in your browser\:
plugnhack.brk.display	= Type\: {0} Client\: {1} Payload pattern\: {2}
plugnhack.brk.type.label	= Message Type\:
plugnhack.brk.types.all		= -- All Types --
plugnhack.brk.client.label	= Client Id\:
plugnhack.brk.clients.all	= -- All Clients --
plugnhack.brk.payload.label	= \u039c\u03bf\u03c4\u03af\u03b2\u03bf Payload\:
plugnhack.button		= Click to setup\!
plugnhack.clientconf.popup = Configure Client...
plugnhack.client.button.active.off = List active clients only
plugnhack.client.button.active.on = List active and inactive clients
plugnhack.client.button.custom.tooltip = \u03a0\u03c1\u03bf\u03c3\u03b8\u03ae\u03ba\u03b7 \u03c0\u03c1\u03bf\u03c3\u03b1\u03c1\u03bc\u03bf\u03c3\u03bc\u03ad\u03bd\u03bf\u03c5 \u03c3\u03b7\u03bc\u03b5\u03af\u03bf\u03c5 \u03b4\u03b9\u03b1\u03ba\u03bf\u03c0\u03ae\u03c2
plugnhack.client.panel.title		= Clients
plugnhack.client.panel.mnemonic = c
plugnhack.clientmsg		= Time\: {0} Client ID\: {1} Type\: {2}
plugnhack.desc          = Simple browser configuration
plugnhack.dialog.clientconf.heartbeat 	= Heartbeat interval\:
plugnhack.dialog.clientconf.interceptEvents			= Intercept Events\:
plugnhack.dialog.clientconf.interceptPostMessage 	= Intercept Post Messages\:
plugnhack.dialog.clientconf.monitorEvents 			= Monitor Events\:
plugnhack.dialog.clientconf.monitorPostMessage 		= Monitor Post Messages\:
plugnhack.dialog.clientconf.title		= Client Configuration
plugnhack.header		= Welcome to the OWASP Zed Attack Proxy (ZAP)
plugnhack.failure		= Configuration failed
plugnhack.firefox		= Add to Firefox
plugnhack.intro1		= ZAP is an easy to use integrated penetration testing tool for finding vulnerabilities in web applications.
plugnhack.intro2		= Please be aware that you should only attack applications that you have been specifically been given permission to test.
plugnhack.invalidpattern = Invalid regular expression.
plugnhack.label.initialMessage   = <html>To receive client events\:\n\n<ul>\n<li>Access the pages you want to monitor while proxying through ZAP</li>\n<li>Right click in the relevant node(s) in the Sites tree and select 'Monitor Clients -> Include Subtree'</li>\n<li>Force your browser to reload those pages</li>\n<li>Client events (such as postMessage, click, mouseover, etc.) will then be listed in this tab - select them to see the full details.</li></ul></html>
plugnhack.menu.monitor				= Monitor Clients
plugnhack.menu.monitor.exclude		= Exclude Subtree
plugnhack.menu.monitor.exscope		= Exclude All in Scope
plugnhack.menu.monitor.open			= Open as Monitored URL
plugnhack.menu.monitor.include		= Include Subtree
plugnhack.menu.monitor.inscope		= Include All in Scope
plugnhack.msg.table.header.date		= Received
plugnhack.msg.table.header.client	= Client 
plugnhack.msg.table.header.type		= Type 
plugnhack.msg.table.header.data		= Data
plugnhack.panel.component.all.tooltip	= Client Message
plugnhack.progress					= Configuring your browser to work with ZAP...
plugnhack.resend.popup				= \u0395\u03c0\u03b1\u03bd\u03b1\u03c0\u03bf\u03c3\u03c4\u03bf\u03bb\u03ae
plugnhack.resend.dialog.title		= Resend Client Message
plugnhack.session.label.exclude		= URLs that will not be monitored
plugnhack.session.label.include		= URLs that will be monitored (unless excluded)
plugnhack.session.label.inscope 	= All URLs in scope (unless excluded)
plugnhack.session.table.header.exclude = URL regexes
plugnhack.session.table.header.include = URL regexes
plugnhack.session.title	= Monitor Clients
plugnhack.setup1		= Your browser does not seem to support automatic man-in-the-middle configuration.
plugnhack.setup2		= If you are using a recent version of Firefox, you can get the add-on here\:
plugnhack.success		= Configuration succeeded, you are now proxying through ZAP\!<p>\nYou can control both Plug-n-Hack and ZAP via the Firefox Developer Toolbar (Shift+F2) - type 'help pnh' or 'help zap' to get started. 
plugnhack.title			= ZAP Simple Browser Configuration
plugnhack.view.pnhjson	= PnH JSON

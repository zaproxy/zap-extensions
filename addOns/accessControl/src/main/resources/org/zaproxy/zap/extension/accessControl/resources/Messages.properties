# This file defines the default (English) variants of all of the internationalised messages

accessControl.desc 								= Add-on that adds a set of tools for testing access control in web applications.
accessControl.activeActionPrefix = Access Control: {0}
accessControl.results.table.header.user 		= User
accessControl.results.table.header.authorized	= Authorized
accessControl.results.table.header.rule 		= Access Rule
accessControl.results.table.header.result 		= Result
accessControl.accessRule.allowed		 		= Allowed
accessControl.accessRule.denied 				= Denied
accessControl.accessRule.unknown	 			= Unknown
accessControl.accessRule.inherited	 			= Inherited
accessControl.scanResult.valid	 				= Valid
accessControl.scanResult.illegal 				= Invalid
accessControl.scanResult.unknown 				= Unknown
accessControl.panel.title						= Access Control
accessControl.toolbar.context.label				= Context:
accessControl.toolbar.button.start				= Start
accessControl.toolbar.button.stop				= Stop
accessControl.toolbar.button.pause				= Pause
accessControl.toolbar.button.unpause			= Unpause
accessControl.toolbar.button.options			= Options
accessControl.toolbar.button.report				= Generate report
accessControl.options.title						= Access Control Options
accessControl.scanOptions.title					= Access Control scan options 
accessControl.scanOptions.label.context			= Context to scan:
accessControl.scanOptions.label.users			= Users to scan as (at least 1):
accessControl.scanOptions.label.raiseAlerts		= Raise alerts for identified issues:
accessControl.scanOptions.label.alertsRisk		= Risk level for raised alerts:
accessControl.scanOptions.button.scan			= Start
accessControl.scanOptions.error.mode.safe = Access control testing is not allowed in 'Safe' mode.
accessControl.scanOptions.error.mode.protected = The following context is not allowed in 'Protected' mode:\n{0}
accessControl.scanOptions.error.noContext		= You must select a starting Context for the scan.
accessControl.scanOptions.error.noUsers			= You must select at least an User in order to start the scan.
accessControl.scanOptions.unauthenticatedUser 	= << Unauthenticated >>
accessControl.contextPanel.title				= Access Control
accessControl.contextPanel.label.description	= This is where you can control the access rules for the web application.
accessControl.contextPanel.label.user			= Access rules for User:
accessControl.contextPanel.label.warning		= <small>Warning: Changes to the Structural Parameters or Separators on the <i>Structure</i> panel will be visible after restarting this dialog and may cause the loss of some existing rules.</small>
accessControl.contextPanel.user.unauthenticated = <<Unauthenticated user>>
accessControl.report.title						= ZAP Access Control Report
accessControl.report.button.all					= Show All
accessControl.report.button.illegal				= Show Illegal
accessControl.report.button.valid				= Show Valid
accessControl.report.table.header.url			= URL
accessControl.report.table.header.method		= Method
accessControl.report.table.header.authorization	= Authorized?
accessControl.report.table.header.accessControl	= Access Control
accessControl.report.table.field.authorized		= Yes
accessControl.report.table.field.unauthorized	= No
accessControl.contextTree.root					= Context access rules
accessControl.contextTree.hanging				= Older rules

accessControl.alert.authorization.name = Access Control Issue - Improper Authorization
accessControl.alert.authorization.otherinfo = Accessed as user: {0}\n\nRequest detected as authorized: {1}. The defined access rule for resource is that access should be: {2}.
accessControl.alert.authentication.name = Access Control Issue - Improper Authentication
accessControl.alert.authentication.otherinfo = Accessed as an unauthenticated user.\n\nRequest detected as authorized: {0}. The defined access rule for resource is that access should be: {1}.

accessControl.api.action.scan = Starts an Access Control scan with the given \
context ID and user ID. (Optional parameters: user ID for Unauthenticated \
user, boolean identifying whether or not Alerts are raised, and the Risk level \
for the Alerts.) [This assumes the Access Control rules were previously established \
via ZAP gui and the necessary Context exported/imported.]
accessControl.api.action.writeHTMLreport = Generates an Access Control report for the given context ID and saves it based on the provided filename (path). 
accessControl.api.view.getScanProgress = Gets the Access Control scan progress (percentage integer) for the given context ID.
accessControl.api.view.getScanStatus = Gets the Access Control scan status (description string) for the given context ID.

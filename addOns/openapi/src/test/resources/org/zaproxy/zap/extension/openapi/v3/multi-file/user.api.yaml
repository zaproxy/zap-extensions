user:
  post:
    tags:
      - user
    summary: Create user
    description: This can only be done by the logged in user.
    operationId: createUser
    requestBody:
      description: Created user object
      content:
        '*/*':
          schema:
            $ref: 'user.model.yaml#/User'
      required: true
    responses:
      default:
        description: successful operation
        content: {}
    x-codegen-request-body-name: body

user-createWithArray:
  post:
    tags:
      - user
    summary: Creates list of users with given input array
    operationId: createUsersWithArrayInput
    requestBody:
      description: List of user object
      content:
        '*/*':
          schema:
            type: array
            items:
              $ref: 'user.model.yaml#/User'
      required: true
    responses:
      default:
        description: successful operation
        content: {}
    x-codegen-request-body-name: body

user-createWithList:
  post:
    tags:
      - user
    summary: Creates list of users with given input array
    operationId: createUsersWithListInput
    requestBody:
      description: List of user object
      content:
        '*/*':
          schema:
            type: array
            items:
              $ref: 'user.model.yaml#/User'
      required: true
    responses:
      default:
        description: successful operation
        content: {}
    x-codegen-request-body-name: body

user-login:
  get:
    tags:
      - user
    summary: Logs user into the system
    operationId: loginUser
    parameters:
      - name: username
        in: query
        description: The user name for login
        required: true
        schema:
          type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        schema:
          type: string
    responses:
      200:
        description: successful operation
        headers:
          X-Rate-Limit:
            description: calls per hour allowed by the user
            schema:
              type: integer
              format: int32
          X-Expires-After:
            description: date in UTC when token expires
            schema:
              type: string
              format: date-time
        content:
          application/xml:
            schema:
              type: string
          application/json:
            schema:
              type: string
      400:
        description: Invalid username/password supplied
        content: {}

user-logout:
  get:
    tags:
      - user
    summary: Logs out current logged in user session
    operationId: logoutUser
    responses:
      default:
        description: successful operation
        content: {}

user-username:
  get:
    tags:
      - user
    summary: Get user by user name
    operationId: getUserByName
    parameters:
      - name: username
        in: path
        description: 'The name that needs to be fetched. Use user1 for testing. '
        required: true
        schema:
          type: string
    responses:
      200:
        description: successful operation
        content:
          application/xml:
            schema:
              $ref: 'user.model.yaml#/User'
          application/json:
            schema:
              $ref: 'user.model.yaml#/User'
      400:
        description: Invalid username supplied
        content: {}
      404:
        description: User not found
        content: {}
  put:
    tags:
      - user
    summary: Updated user
    description: This can only be done by the logged in user.
    operationId: updateUser
    parameters:
      - name: username
        in: path
        description: name that need to be updated
        required: true
        schema:
          type: string
    requestBody:
      description: Updated user object
      content:
        '*/*':
          schema:
            $ref: 'user.model.yaml#/User'
      required: true
    responses:
      400:
        description: Invalid user supplied
        content: {}
      404:
        description: User not found
        content: {}
    x-codegen-request-body-name: body
  delete:
    tags:
      - user
    summary: Delete user
    description: This can only be done by the logged in user.
    operationId: deleteUser
    parameters:
      - name: username
        in: path
        description: The name that needs to be deleted
        required: true
        schema:
          type: string
    responses:
      400:
        description: Invalid username supplied
        content: {}
      404:
        description: User not found
        content: {}

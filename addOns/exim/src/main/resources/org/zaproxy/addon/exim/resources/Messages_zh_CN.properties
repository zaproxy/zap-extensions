exim.api.action.exportSitesTree = Exports the Sites Tree in the Sites Tree YAML format.
exim.api.action.importHar = Imports a HAR file.
exim.api.action.importModsec2Logs = Imports ModSecurity2 logs from the file with the given file system path.
exim.api.action.importUrls = Imports URLs (one per line) from the file with the given file system path.
exim.api.action.importZapLogs = Imports previously exported ZAP messages from the file with the given file system path.
exim.api.action.pruneSitesTree = Prunes the Sites Tree based on a file in the Sites Tree YAML format.
exim.api.desc = Export/Import functionality.
exim.api.other.exportHar = 获取通过/由 ZAP 以 HAR 格式发送的 HTTP 消息，可选择按 URL 过滤并使用消息的“开始”位置和“计数”进行分页
exim.api.other.exportHar.param.baseurl = The URL below which messages should be included.
exim.api.other.exportHar.param.count = 要返回的结果数。
exim.api.other.exportHar.param.start = 结果中用作返回信息的起始位置的位置（或偏移量）。
exim.api.other.exportHarById = 获取具有给定 ID 的 HAR 格式的 HTTP 消息。
exim.api.other.exportHarById.param.ids = The ID (number(s)) of the message(s) to be returned.
exim.api.other.sendHarRequest = 发送第一个 HAR 请求条目，可选地跟随重定向。 以 HAR 格式返回，可选遵循重定向方式。 返回发送的请求和收到的响应以及遵循的重定向（如果有）。 发送请求（和重定向后）时强制执行模式，如果超出范围，则不允许在“安全”模式或“保护”模式下自定义手动请求。
exim.api.other.sendHarRequest.param.followRedirects = True if redirects should be followed, false otherwise.
exim.api.other.sendHarRequest.param.request = The raw JSON of a HAR request.

exim.automation.desc = Import/Export Automation Framework Integration
exim.automation.dialog.filename = 文件
exim.automation.dialog.name = 作业名称：
exim.automation.dialog.type = 类型\:
exim.automation.error.noresourcefile = 不能访问文件： {0}
exim.automation.export.dialog.error.messages.type = Invalid Type for {0}, YAML is not supported
exim.automation.export.dialog.error.sitestree.type = Invalid Type for Sites Tree, only YAML is supported
exim.automation.export.dialog.source = 源
exim.automation.export.dialog.summary = Type\: {0}, Source\: {1}, File\: {2}
exim.automation.export.dialog.title = Export Job
exim.automation.export.error = Job {0} Error\: {1}
exim.automation.export.error.messages.type = Job {0} Invalid type for {1}, YAML is not supported
exim.automation.export.error.sitestree.type = Job {0} Invalid type for Sites Tree, only YAML is supported\: {1}
exim.automation.export.error.type = Job {0} Invalid type\: {1}
exim.automation.export.exportcount = Job {0}\: Exported {1} message(s) / node(s) to {2}.
exim.automation.export.nofile = Job {0}\: No file specified, the export will be skipped.
exim.automation.import.dialog.summary = Type\: {0}, File\: {1}
exim.automation.import.dialog.title = Import Job
exim.automation.import.error = Error importing the file {0} as {1}
exim.automation.import.error.file = 作业 {0} 无法读取文件：{1}
exim.automation.import.error.type = Job {0} Invalid type\: {1}
exim.automation.name = Import/Export Automation
exim.automation.prune.dialog.filename = 文件
exim.automation.prune.dialog.name = 作业名称：
exim.automation.prune.dialog.summary = File\: {0}
exim.automation.prune.dialog.title = Prune Job
exim.automation.prune.fail.result = Job {0} Read {1} node(s) from {2}, deleted {3} node(s), and failed with {4}
exim.automation.prune.ok.result = Job {0} Read {1} node(s) from {2} and deleted {3} node(s)

exim.description = Import and Export functionality supporting multiple formats.
exim.exporter.error.db = Failed to read from session\: {0}
exim.exporter.error.file.notfile = Cannot write to non-file\: {0}
exim.exporter.error.file.notwritable = 不能写入文件：{0}
exim.exporter.error.file.parent.notdir = Cannot write file to non-directory\: {0}
exim.exporter.error.file.parent.notexists = Cannot write file to nonexistent directory\: {0}
exim.exporter.error.file.parent.notwritable = Cannot write file to directory\: {0}
exim.exporter.error.io = Failed to write to file\: {0}
exim.exporter.error.type.messages = Invalid type for {0}, YAML is not supported
exim.exporter.error.type.sitestree = Invalid type for SitesTree, only YAML is supported\: {0}
exim.exporter.source.all = 所有
exim.exporter.source.history = 历史
exim.exporter.source.sitestree = Sites Tree
exim.exporter.type.har = HAR
exim.exporter.type.url = 网址
exim.exporter.type.yaml = YAML

exim.file.format.yaml = YAML File
exim.file.save.error = Error saving file to {0}.

exim.har.file.description = HTTP Archive File (*.har)
exim.har.file.import.error = Could not import the file {0}
exim.har.file.save.error = Error saving file to {0}.
exim.har.popup.option = Save as HAR...
exim.har.topmenu.import.importhar = Import HAR (HTTP Archive File)
exim.har.topmenu.import.importhar.tooltip = Import a HTTP Archive File and add the messages to the sites tree and history panel.
exim.import.pcap.choosefile.filter.pcap.description = PCAP file (*.pcap)
exim.import.pcap.choosefile.filter.pcapng.description = PCAPNG file (*.pcapng)

exim.import.pcap.topmenu.import = Import a PCAP or PCAPNG file
exim.import.pcap.topmenu.import.tooltip = Import a PCAP or PCAPNG file and add the HTTP(S) traffic inside to the sites tree and history panel.

exim.importLogFiles.choosefile.filter.log.description = Log File (*.log)
exim.importLogFiles.choosefile.filter.raw.description = Raw Binary (*.raw)
exim.importLogFiles.choosefile.filter.txt.description = Text File (*.txt)
exim.importLogFiles.choosefile.message = Input type\:
exim.importLogFiles.choosefile.title = Select Input Type
exim.importLogFiles.import.menu.label = Import URLs from Logs or raw Files...
exim.importLogFiles.log.type.modsec2 = ModSecurity2 Logs
exim.importLogFiles.log.type.zap = ZAP Messages

exim.importer.error.file.notexists = Cannot read from nonexistent file\: {0}
exim.importer.error.file.notfile = Cannot read from non-file\: {0}
exim.importer.error.file.notreadable = Cannot read from file\: {0}
exim.importer.error.handler = Failed while importing an HTTP message\: {0}
exim.importer.error.io = Failed to read from file\: {0}
exim.importer.type.har = HAR

exim.importurls.topmenu.import = Import a File Containing URLs
exim.importurls.topmenu.import.tooltip = The file must be plain text with one URL per line.\nBlank lines and lines starting with a \# are ignored.
exim.importurls.warn.scheme = "{0}" does not have a scheme.

exim.menu.copyurls.popup = Copy URLs
exim.menu.export = 导出
exim.menu.export.context.urls = Save Context URLs...
exim.menu.export.messages.popup = Save Messages...
exim.menu.export.messages.select.warning = 导出到文件之前在历史记录面板中选择HTTP。
exim.menu.export.mnemonic = E
exim.menu.export.popup = Save All URLs...
exim.menu.export.popup.context.error = 请选择一个上下文。
exim.menu.export.popup.selected = Save Selected URLs...
exim.menu.export.responses.popup = Save Response(s)...
exim.menu.export.savesite.popup = Save Sites Tree...
exim.menu.export.saveurls = Save URLs...
exim.menu.export.urls.save.error = Error saving file to {0}

exim.options.value.type.har = HAR (HTTP Archive File)
exim.options.value.type.modsec2 = ModSecurity2 Logs
exim.options.value.type.url = File Containing URLs
exim.options.value.type.zapmessages = ZAP Messages

exim.output.end = Done importing {0}
exim.output.error = Error importing HAR file.\n{0}
exim.output.start = Importing {0}

exim.popup.option.all = 所有
exim.popup.option.body = Body
exim.popup.option.header = Header
exim.popup.option.request = 请求
exim.popup.option.response = 响应

exim.progress.currentimport = 导入中：{0}
exim.progress.invalidmessage = Invalid message

exim.saveraw.file.description = Raw Binary (*.raw)
exim.saveraw.popup.option = Save as Raw

exim.savexml.file.description = XML with Base64 Encoded Components (*.xml)
exim.savexml.popup.option = Save as XML
exim.sites.error.badkey = Invalid key for node {0}\: {1}
exim.sites.error.badtype = Unexpected value type for key {0}\: {1}
exim.sites.error.prune.badformat = Unexpected file format - expected a YAML list
exim.sites.error.prune.exception = Exception loading file, for more details see the log file\: {0}
exim.sites.menu.prune = Prune Site Nodes...
exim.sites.menu.prune.tooltip = Prune nodes from the sites tree defined in a file in the ZAP Sites Tree format.
exim.sites.menu.save = Save Sites Tree...
exim.sites.menu.save.tooltip = Save all of the nodes in the sites tree in a file using the ZAP Sites Tree format.

exim.sites.prune.result = Prune Site Nodes Result\:\n  Nodes read\: {0}\n  Nodes deleted\: {1}

exim.ui.name = Import/Export

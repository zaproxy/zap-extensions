spiderajax.api.view.allowedResources = Gets the allowed resources. The allowed resources are always fetched even if out of scope, allowing to include necessary resources (e.g. scripts) from 3rd-parties.
spiderajax.api.view.fullResults = Gets the full crawled content detected by the AJAX Spider. Returns a set of values based on 'inScope' URLs, 'outOfScope' URLs, and 'errors' encountered during the last/current run of the AJAX Spider.
spiderajax.api.view.numberOfResults = Gets the number of resources found.
spiderajax.api.view.optionBrowserId = Gets the configured browser to use for crawling.
spiderajax.api.view.optionClickDefaultElems = Gets the configured value for 'Click Default Elements Only', HTML elements such as 'a', 'button', 'input', all associated with some action or links on the page.
spiderajax.api.view.optionClickElemsOnce = Gets the value configured for the AJAX Spider to know if it should click on the elements only once.
spiderajax.api.view.optionEventWait = Gets the time to wait after an event (in milliseconds). For example\: the wait delay after the cursor hovers over an element, in order for a menu to display, etc.
spiderajax.api.view.optionMaxCrawlDepth = Gets the configured value for the max crawl depth.
spiderajax.api.view.optionMaxCrawlStates = Gets the configured value for the maximum crawl states allowed.
spiderajax.api.view.optionMaxDuration = Gets the configured max duration of the crawl, the value is in minutes.
spiderajax.api.view.optionNumberOfBrowsers = Gets the configured number of browsers to be used.
spiderajax.api.view.optionRandomInputs = Gets if the AJAX Spider will use random values in form fields when crawling, if set to true.
spiderajax.api.view.optionReloadWait = Gets the configured time to wait after reloading the page, this value is in milliseconds.
spiderajax.api.view.results = Gets the current results of the crawler.
spiderajax.api.view.results.param.count = The number of results to return.
spiderajax.api.view.results.param.start = The position (or offset) within the results to use as a starting position for the information returned.
spiderajax.api.view.status = Gets the current status of the crawler. Actual values are Stopped and Running.
spiderajax.api.action.addAllowedResource = Adds an allowed resource.
spiderajax.api.action.addAllowedResource.param.regex = The regular expression of the allowed resource.
spiderajax.api.action.addAllowedResource.param.enabled = If the allowed resource should be enabled or not.
spiderajax.api.action.removeAllowedResource = Removes an allowed resource.
spiderajax.api.action.removeAllowedResource.param.regex = The regular expression of the allowed resource.
spiderajax.api.action.scan = Runs the AJAX Spider against a given target.
spiderajax.api.action.scan.param.url = The starting URL (needs to include the 'scheme').
spiderajax.api.action.scan.param.inScope = A boolean (true/false) indicating whether or not the scan should be restricted to 'inScope' only resources (default value is false).
spiderajax.api.action.scan.param.contextName = The name for any defined context. If the value does not match a defined context then an error will occur.
spiderajax.api.action.scan.param.subtreeOnly = A boolean (true/false) indicating whether or not the crawl should be constrained to a specific path (default value is false).
spiderajax.api.action.scanAsUser = Runs the AJAX Spider from the perspective of a User of the web application.
spiderajax.api.action.scanAsUser.param.contextName = The name for any defined context. If the value does not match a defined context then an error will occur.
spiderajax.api.action.scanAsUser.param.userName = The name of the user to be used when crawling. The "userName" should be previously defined on the context configuration.
spiderajax.api.action.scanAsUser.param.url = The starting URL (needs to include the 'scheme').
spiderajax.api.action.scanAsUser.param.subtreeOnly = A boolean (true/false) indicating whether or not the crawl should be constrained to a specific path (default value is false).
spiderajax.api.action.setEnabledAllowedResource = Sets whether or not an allowed resource is enabled.
spiderajax.api.action.setEnabledAllowedResource.param.regex = The regular expression of the allowed resource.
spiderajax.api.action.setEnabledAllowedResource.param.enabled = If the allowed resource should be enabled or not.
spiderajax.api.action.setOptionBrowserId = Sets the configuration of the AJAX Spider to use one of the supported browsers.
spiderajax.api.action.setOptionBrowserId.param.String = The name of the browser to be used by the AJAX Spider. (See the Selenium add-on help for a list of supported browsers.)
spiderajax.api.action.setOptionClickDefaultElems = Sets whether or not the the AJAX Spider will only click on the default HTML elements.
spiderajax.api.action.setOptionClickDefaultElems.param.Boolean = A boolean (true/false) indicating if only default elements such as 'a' 'button' 'input' should be clicked (default is true).
spiderajax.api.action.setOptionClickElemsOnce = When enabled, the crawler attempts to interact with each element (e.g., by clicking) only once.
spiderajax.api.action.setOptionClickElemsOnce.param.Boolean = A boolean (true/false) indicating whether or not the AJAX Spider should only click on elements once. If this is set to false, the crawler will attempt to click multiple times; which is more rigorous but may take considerably more time (default is true).
spiderajax.api.action.setOptionEventWait = Sets the time to wait after an event (in milliseconds). For example\: the wait delay after the cursor hovers over an element, in order for a menu to display, etc.
spiderajax.api.action.setOptionEventWait.param.Integer = The time that the AJAX Spider should wait for each event (default is 1000 milliseconds).
spiderajax.api.action.setOptionMaxCrawlDepth = Sets the maximum depth that the crawler can reach.
spiderajax.api.action.setOptionMaxCrawlDepth.param.Integer = The maximum depth that the crawler should explore (zero means unlimited depth, default is 10).
spiderajax.api.action.setOptionMaxCrawlStates = Sets the maximum number of states that the crawler should crawl.
spiderajax.api.action.setOptionMaxCrawlStates.param.Integer = The maximum number of states that the AJAX Spider should explore (zero means unlimited crawl states, default is 0)
spiderajax.api.action.setOptionMaxDuration = The maximum time that the crawler is allowed to run.
spiderajax.api.action.setOptionMaxDuration.param.Integer = The maximum amount of time that the AJAX Spider is allowed to run (zero means unlimited running time, default is 60 minutes).
spiderajax.api.action.setOptionNumberOfBrowsers = Sets the number of windows to be used by AJAX Spider.
spiderajax.api.action.setOptionNumberOfBrowsers.param.Integer = The number of windows that the AJAX Spider can use. The more windows, the faster the process will be. However, more windows also means greater resource usage (CPU, Memory, etc), and could lead to concurrency issues depending on the app being explored (default is 1).
spiderajax.api.action.setOptionRandomInputs = When enabled, inserts random values into form fields.
spiderajax.api.action.setOptionRandomInputs.param.Boolean = A boolean (true/false) indicating whether or not random values should be use in form fields. Otherwise, empty values are submitted (default is true).
spiderajax.api.action.setOptionReloadWait = Sets the time to wait after the page is loaded before interacting with it.
spiderajax.api.action.setOptionReloadWait.param.Integer = The number of milliseconds the AJAX Spider should wait after a page is loaded (default is 1000).
spiderajax.api.action.stop = Stops the AJAX Spider.

spiderajax.automation.default=\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e
spiderajax.automation.desc = Ajax Spider Automation Framework Integration
spiderajax.automation.name = Ajax Spider Automation
spiderajax.automation.error.nofile = Cannot access file\:  {0}
spiderajax.automation.tests.stats.defaultname = At least {0} URLs found

spiderajax.automation.dialog.summary = Context\: {0}, URL \: {1}
spiderajax.automation.dialog.tab.params = \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b
spiderajax.automation.dialog.ajaxspider.tab.adv = Advanced
spiderajax.automation.dialog.ajaxspider.title = Ajax Spider Job
spiderajax.automation.dialog.ajaxspider.context = \u041a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\:
spiderajax.automation.dialog.ajaxspider.url = URL-\u0430\u0434\u0440\u0435\u0441\:
spiderajax.automation.dialog.ajaxspider.maxduration = Max Duration (in mins)\:
spiderajax.automation.dialog.ajaxspider.maxcrawldepth = Max Crawl Depth\:
spiderajax.automation.dialog.ajaxspider.numbrowsers = Number Of Browsers\:
spiderajax.automation.dialog.ajaxspider.advanced = Show Advanced Options\:

spiderajax.automation.dialog.ajaxspider.browserid = Browser Id\:
spiderajax.automation.dialog.ajaxspider.maxcrawlstates = Max Crawl States\:
spiderajax.automation.dialog.ajaxspider.eventwait = Event Wait (in msec)\:
spiderajax.automation.dialog.ajaxspider.reloadwait = Reload Wait (in msec)\:
spiderajax.automation.dialog.ajaxspider.clickdefaultelems = Click Default Elements\:
spiderajax.automation.dialog.ajaxspider.clickelemsonce = Click Elements Once\:
spiderajax.automation.dialog.ajaxspider.randominputs = Use Random Inputs\:

spiderajax.active.action = AJAX Spider scan
spiderajax.desc                     = AJAX Spider, uses Crawljax
spiderajax.menu.tools.label = \u041e\u0431\u043e\u0439\u0442\u0438 \u0441\u0430\u0439\u0442 AJAX-\u043f\u0430\u0443\u043a\u043e\u043c
spiderajax.menu.tools.label.mnemonic = X
spiderajax.options.dialog.allowedResources.label = Allowed Resources\:
spiderajax.options.dialog.allowedResources.add.title = Add Allowed Resource
spiderajax.options.dialog.allowedResources.add.button.confirm = \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c
spiderajax.options.dialog.allowedResources.field.label.regex = \u0420\u0435\u0433. \u0432\u044b\u0440-\u0435
spiderajax.options.dialog.allowedResources.field.label.enabled = \u0412\u043a\u043b\u044e\u0447\u0435\u043d\u043e
spiderajax.options.dialog.allowedResources.warning.name.repeated.title = Duplicated Allowed Resource
spiderajax.options.dialog.allowedResources.warning.name.repeated.text = Allowed resource with provided regular expression already exists.
spiderajax.options.dialog.allowedResources.warning.invalid.regex.title = Invalid Regular Expression
spiderajax.options.dialog.allowedResources.warning.invalid.regex.text = The provided regular expression is not valid\:\n{0}
spiderajax.options.dialog.allowedResources.modify.title = Modify Allowed Resource
spiderajax.options.dialog.allowedResources.modify.button.confirm = \u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c
spiderajax.options.dialog.allowedResources.remove.title = Remove Allowed Resource
spiderajax.options.dialog.allowedResources.remove.text = Are you sure you want to remove the selected allowed resource?
spiderajax.options.dialog.allowedResources.remove.button.confirm = \u0423\u0434\u0430\u043b\u0438\u0442\u044c
spiderajax.options.dialog.allowedResources.remove.button.cancel = \u041e\u0442\u043c\u0435\u043d\u0430
spiderajax.options.dialog.allowedResources.remove.checkbox.label = \u0411\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u044d\u0442\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435
spiderajax.options.dialog.allowedResources.table.header.enabled = \u0412\u043a\u043b\u044e\u0447\u0435\u043d\u043e
spiderajax.options.dialog.allowedResources.table.header.regex = \u0420\u0435\u0433. \u0432\u044b\u0440-\u0435
spiderajax.options.dialog.elem.add.title = Add Element
spiderajax.options.dialog.elem.add.button.confirm = \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c
spiderajax.options.dialog.elem.field.label.name = Element
spiderajax.options.dialog.elem.field.label.enabled = \u0412\u043a\u043b\u044e\u0447\u0435\u043d\u043e
spiderajax.options.dialog.elem.warning.name.repeated.title = Duplicated Element
spiderajax.options.dialog.elem.warning.name.repeated.text = Element with provided name already exists
spiderajax.options.dialog.elem.modify.title = Modify Element
spiderajax.options.dialog.elem.modify.button.confirm = \u0418\u0437\u043c\u0435\u043d\u0438\u0442\u044c
spiderajax.options.dialog.elem.remove.title = Remove Element
spiderajax.options.dialog.elem.remove.text = Are you sure you want to remove the selected element?
spiderajax.options.dialog.elem.remove.button.confirm = \u0423\u0434\u0430\u043b\u0438\u0442\u044c
spiderajax.options.dialog.elem.remove.button.cancel = \u041e\u0442\u043c\u0435\u043d\u0430
spiderajax.options.dialog.elem.remove.checkbox.label = \u0411\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u044d\u0442\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435
spiderajax.options.label.browsers    = Number of Browser Windows to Open\:
spiderajax.options.label.depth 		 = Maximum Crawl Depth (0 is Unlimited)\:
spiderajax.options.label.crawlstates = Maximum Crawl States (0 is Unlimited)\:
spiderajax.options.label.maxduration = Maximum Duration (Min, 0 is Unlimited)\:
spiderajax.options.label.eventwait  = Event Wait time (ms)\:
spiderajax.options.label.reloadwait  = Reload Wait time (ms)\:
spiderajax.options.label.clickonce = Click Elements once
spiderajax.options.label.randominputs = Use Random Values in Form Fields
spiderajax.options.label.clickelems = Select elements to click during crawl (if not clicking on only default elements)\:
spiderajax.options.title            = AJAX-\u043f\u0430\u0443\u043a
spiderajax.options.table.header.enabled = \u0412\u043a\u043b\u044e\u0447\u0435\u043d\u043e
spiderajax.options.table.header.element = Element
spiderajax.panel.subtitle           = \u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0435 URL\:
spiderajax.panel.title              = AJAX-\u043f\u0430\u0443\u043a
spiderajax.panel.mnemonic			= j
spiderajax.panel.toolbar.currentscans.label = \u0422\u0435\u043a\u0443\u0449\u0438\u0435 \u0441\u043a\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\:
spiderajax.panel.table.cell.processed = \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043e
spiderajax.panel.table.cell.outofcontext = Out of Context
spiderajax.panel.table.cell.outofscope = Out of Scope
spiderajax.panel.table.cell.excluded = Excluded
spiderajax.panel.table.cell.ioerror = I/O Error
spiderajax.panel.table.header.processed = \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043e
spiderajax.proxy.local.label.defaultElems= Click Default Elements Only (a, button, input)
spiderajax.proxy.local.label.browsers= <html><body><br><p>\u0412\u044b\u0431\u0440\u0430\u0442\u044c \u0431\u0440\u0430\u0443\u0437\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u043f\u043b\u0430\u0433\u0438\u043d\u0430 AJAX-\u043f\u0430\u0443\u043a\:</p></body></html>
spiderajax.scandialog.title			= AJAX-\u043f\u0430\u0443\u043a
spiderajax.scandialog.tab.elements	= Elements
spiderajax.scandialog.tab.scope		= \u041e\u0431\u043b\u0430\u0441\u0442\u044c
spiderajax.scandialog.tab.options	= \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b
spiderajax.scandialog.label.browser	= \u0411\u0440\u0430\u0443\u0437\u0435\u0440\:
spiderajax.scandialog.label.context = \u041a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\:
spiderajax.scandialog.label.inscope	= \u0422\u043e\u043b\u044c\u043a\u043e \u0432 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u0445\:
spiderajax.scandialog.label.start	= Starting Point\:
spiderajax.scandialog.label.spiderSubtreeOnly = Spider Subtree Only
spiderajax.scandialog.label.adv		= Show Advanced Options
spiderajax.scandialog.label.user = \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\:
spiderajax.scandialog.button.scan	= \u041d\u0430\u0447\u0430\u0442\u044c \u0441\u043a\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435
spiderajax.scandialog.button.reset = \u0421\u0431\u0440\u043e\u0441\u0438\u0442\u044c
spiderajax.scandialog.alreadyrunning.error = A spider scan is already running.
spiderajax.scandialog.nobrowser.error = \u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0431\u0440\u0430\u0443\u0437\u0435\u0440.
spiderajax.scandialog.nostart.error = You must select a valid starting point\nincluding the protocol e.g. https\://www.example.com
spiderajax.scandialog.nostart.context.error = The selected context does not have a starting point.
spiderajax.scandialog.nostart.subtreeOnly.error = A site node must be selected or a URL manually introduced, to spider a site's subtree.
spiderajax.scandialog.notSafe.error = AJAX Spider scans are not allowed in 'Safe' mode.
spiderajax.scandialog.startNotInScope.error = The starting point is not in scope.
spiderajax.scandialog.startNotInContext.error = The starting point does not belong to selected context.
spiderajax.scandialog.startProtectedMode.error = The starting point is not allowed in 'Protected' mode.
spiderajax.site.popup               = \u041e\u0431\u043e\u0439\u0442\u0438 \u0441\u0430\u0439\u0442 AJAX-\u043f\u0430\u0443\u043a\u043e\u043c
spiderajax.toolbar.button.start     = \u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c AJAX-\u043f\u0430\u0443\u043a\u0430
spiderajax.toolbar.button.stop      = \u041e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c AJAX-\u043f\u0430\u0443\u043a\u0430
spiderajax.outofscope.response      = (403 Forbidden) Out of AJAX Spider scope
spiderajax.warn.message.phantomjs.bug.invalid.target = The spider will not run.\nA bug in PhantomJS prevents the requests to localhost,\n127.0.0.1 and \:\:1 from being proxied through ZAP.

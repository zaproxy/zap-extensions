# Automation Framework ZAP extension. 
#
# This file defines the default (English) variants of all of the internationalised messages

automation.desc = Automation Framework

automation.cmdline.autorun.help = Run the automation jobs specified in the file
automation.cmdline.autogenmin.help = Generate template automation file with the key parameters
automation.cmdline.autogenmax.help = Generate template automation file with all parameters
automation.cmdline.autogenconf.help = Generate template automation file using the current configuration
automation.cmdline.out.template = Writing template to {0}

automation.error.addons.update = Failed to update add-ons: {0}
automation.error.addons.addon.data = Unsupported add-on data format: {0}

automation.error.ascan.policy.name = Unrecognised active scan policy name for job {0} : {1}
automation.error.ascan.rule.unknown = Unrecognised active scan rule id for job {0} : {1}
automation.error.ascan.strength = Invalid strength for job {0} : {1}
automation.error.ascan.threshold = Invalid threshold for job {0} : {1}

automation.error.badurl = Invalid URL for job {0} : {1}

automation.error.context.badurl = Invalid URL: {0}
automation.error.context.badincludelist = Incude regexes should be a list: {0}
automation.error.context.badexcludelist = Exclude regexes should be a list: {0}
automation.error.context.badurlslist = Context URLs should be a list: {0}
automation.error.context.badregex = Invalid value for regex: {0} : {1}
automation.error.context.noname = Missing name for context: {0}
automation.error.context.nourl = Missing URLs for context: {0}
automation.error.context.unknown = Unrecognised context: {0}
automation.error.context.url.deprecated = The context 'url' field has been replaced with a 'urls' list field

automation.error.env.missing = Missing environment: {0}
automation.error.env.nocontexts = Missing contexts in environment: {0}
automation.error.env.badcontext = Invalid context in environment: {0}
automation.error.env.badcontexts = Invalid contexts in environment: {0}
automation.error.env.novar = Variable {0} used but not specified

automation.error.nofile = Cannot access file: {0}
automation.error.read = Cannot read file: {0}
automation.error.write = Cannot write to file: {0}
automation.error.job.data = Unsupported job data format: {0}
automation.error.job.name = Unsupported job name format: {0}
automation.error.job.unknown = Unrecognised job type: {0}
automation.error.job.notype = Missing job type: {0}
automation.error.job.template = Failed to get template for job type: {0}
automation.error.options.methods = Failed to access {0} methods for {1} : {2}
automation.error.options.badcall = Failed to invoke {0}.{1} : {2}
automation.error.options.badbool = Invalid value for job {0} parameter {1} - {2} should be a boolean
automation.error.options.badenum = Invalid value for job {0} parameter {1}: Enum value must be one of {2}
automation.error.options.badint = Invalid value for job {0} parameter {1} - {2} should be an integer
automation.error.options.badlist = Invalid value for job {0} parameter {1} - {2} should be a list
automation.error.options.badtype = Failed to set {0}.{1} due to unsupported type: {2}
automation.error.options.unknown = Unrecognised parameter for job {0} : {1}
automation.error.urlsfound = Job {0} only found {1} URLs, expected at least {2}
automation.error.unexpected = Unexpected error accessing file {0} : {1} - see log for details

automation.error.requestor.norequests = Missing any requests for job {0}
automation.error.requestor.badlist = Requests should be a list: {0}
automation.error.requestor.badurl = Job {0} has invalid URL {1} for request : {2}
automation.error.requestor.invalidmethod = Job {0} has invalid method {1} for request : {2}
automation.error.requestor.badcode = Job {0} has invalid response code {1} for request: {2}
automation.error.requestor.badnetwork = Error sending message {1} in job {0} : {2}
automation.error.requestor.codemismatch = Difference in response code values for message {0} Expected : {1} Received : {2}

automation.error.pscan.rule.unknown = Unrecognised passive scan rule id for job {0} : {1}
automation.error.pscan.nooptions = Failed to access passive scan options for job {0}

automation.error.spider.url.notok = Job {0} failed to access URL {1} status code returned : {2} expected 200
automation.error.spider.url.badhost.proxychain = Job {0} failed to access URL {1} your proxy chain may be wrong : {2}
automation.error.spider.url.badhost = Job {0} failed to access URL {1} check that it is valid : {2}
automation.error.spider.url.failed = Job {0} failed to access URL {1} : {2}
automation.error.spider.failIfUrlsLessThan.deprecated = Job {0} the fields 'failIfFoundUrlsLessThan' and 'warnIfFoundUrlsLessThan' have been replaced with the {1} stats test.

automation.info.ascan.rule.setstrength = Job {0} set rule {1} strength to {2}
automation.info.ascan.rule.setthreshold = Job {0} set rule {1} threshold to {2}
automation.info.ascan.setdefstrength = Job {0} set default strength to {1}
automation.info.ascan.setdefthreshold = Job {0} set default threshold to {1}
automation.info.pscan.rule.noid = Job {0} ignoring rule with no id 
automation.info.pscan.rule.setthreshold = Job {0} set rule {1} threshold to {2}
automation.info.setparam = Job {0} set {1} = {2}
automation.info.jobstart = Job {0} started
automation.info.jobend = Job {0} finished
automation.info.urlsfound = Job {0} found {1} URLs

automation.out.title.good = Automation plan succeeded!
automation.out.title.fail = Automation plan failures:
automation.out.title.warn = Automation plan warnings:
automation.out.info = \t{0}

automation.panel.load.warning = YAML file loaded with warnings: {0}
automation.panel.load.error = YAML file loaded with errors: {0}
automation.panel.load.failed = YAML file failed to load: {0}
automation.panel.load.yaml = YAML Configuration Files
automation.panel.table.env.name = Environment
automation.panel.table.header.status = Status
automation.panel.table.header.name = Name
automation.panel.table.header.type = Type
automation.panel.table.header.info = Info
automation.panel.table.info.config = Config: {0}
automation.panel.table.info.error = ERROR: {0}
automation.panel.table.info.ok = OK: {0}
automation.panel.table.info.warning = WARNING: {0}
automation.panel.table.status.error = ERROR
automation.panel.table.status.failed = FAILED
automation.panel.table.status.ok = OK
automation.panel.table.status.notcreated = Not created
automation.panel.table.status.notstarted = Not started
automation.panel.table.status.passed = Passed
automation.panel.table.status.running = Running
automation.panel.table.status.warning = WARNING
automation.panel.table.type.test = test: {0}
automation.panel.title = Automation

automation.params.type.cookie = Cookie
automation.params.type.form = Form
automation.params.type.url = URL
automation.params.type.header = Header
automation.params.type.multipart = Multipart
automation.params.type.unknown = Unknown

automation.tests.invalidType = Unknown test type {0}
automation.tests.invalidOnFail = Cannot create test {0}: Invalid onFail value {1}
automation.tests.missingOrInvalidProperties = Job {0} skipped a test of type '{1}' with missing or invalid properties
automation.tests.add = Job {0} adding test of type {1} : {2}
automation.tests.pass = Job {0} test of type {1} passed: {2} [{3}]
automation.tests.fail = Job {0} test of type {1} failed: {2} [{3}]

automation.tests.stats.invalidOperator = Job {0} cannot create statistic test {1}: invalid operator {2}
automation.tests.stats.nullInMemoryStats = Job {0} in memory stats haven't been initialised, stats tests may give unexpected results

automation.tests.alert.invalidJobType = Job {0} does not support test of type alert
automation.tests.alert.nullExtension = Job {0} can not check for generated alerts as the Alert Extension is disabled
automation.tests.alert.invalidConfidence = Job {0} cannot create alert test {1}: invalid confidence {2}
automation.tests.alert.invalidRisk = Job {0} cannot create alert test {1}: invalid risk {2}
automation.tests.alert.badregex = Job {0} has an invalid regex {1} in alert test {2} : {3}
automation.tests.alert.reason = Alert with scanRuleId {0} was {1}

automation.topmenu.tools.genconffile = Generate automation file from configs ...


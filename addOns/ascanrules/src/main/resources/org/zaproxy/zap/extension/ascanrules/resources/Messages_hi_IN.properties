ascanrules.desc = Release status active scan rules
ascanrules.name = Active Scan Rules

ascanrules.bufferoverflow.name = \u092c\u092b\u093c\u0930 \u0913\u0935\u0930\u092b\u093c\u094d\u0932\u094b
ascanrules.bufferoverflow.desc = \u092c\u092b\u093c\u0930 \u0913\u0935\u0930\u092b\u093c\u094d\u0932\u094b \u0924\u094d\u0930\u0941\u091f\u093f\u092f\u094b\u0902 \u092a\u0943\u0937\u094d\u0920\u092d\u0942\u092e\u093f \u0935\u0947\u092c \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u0939\u0948, \u091c\u094b \u0915\u092d\u0940 \u091c\u093e\u0928\u092c\u0942\u091d\u0915\u0930 \u092f\u093e \u0905\u0928\u091c\u093e\u0928\u0947 \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948 \u091a\u093e\u0939\u093f\u090f \u0915\u0947 \u0938\u094d\u092e\u0943\u0924\u093f \u0930\u093f\u0915\u094d\u0924 \u0938\u094d\u0925\u093e\u0928 \u0915\u0947 overwriting \u0915\u0947 \u0926\u094d\u0935\u093e\u0930\u093e \u0935\u093f\u0936\u0947\u0937\u0924\u093e \u0939\u0948\u0902\u0964 \u0906\u0908\u092a\u0940 (\u0905\u0928\u0941\u0926\u0947\u0936 \u0938\u0942\u091a\u0915), \u092c\u0940. \u092a\u0940. (\u092c\u0947\u0938 \u0938\u0942\u091a\u0915) \u0914\u0930 \u0926\u0942\u0938\u0930\u0947 \u0915\u0947 \u092e\u093e\u0928 \u0915\u094b \u0905\u0927\u093f\u0932\u0947\u0916\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u093e\u0930\u0923\u094b\u0902 \u0905\u092a\u0935\u093e\u0926, \u0935\u093f\u092d\u093e\u091c\u0928 \u0926\u094b\u0937, \u0914\u0930 \u0905\u0928\u094d\u092f \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u0924\u094d\u0930\u0941\u091f\u093f\u092f\u094b\u0902 \u0915\u0947 \u0918\u091f\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092a\u0902\u091c\u0940\u0915\u0943\u0924 \u0915\u0930\u0924\u093e \u0939\u0948\u0964 \u0906\u092e\u0924\u094c\u0930 \u092a\u0930 \u0907\u0928 \u0924\u094d\u0930\u0941\u091f\u093f\u092f\u093e\u0901 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0915\u0947 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 \u092e\u0947\u0902 \u0905\u092a\u094d\u0930\u0924\u094d\u092f\u093e\u0936\u093f\u0924 \u0924\u0930\u0940\u0915\u0947 \u0905\u0902\u0924\u0964 
ascanrules.bufferoverflow.soln = \u0909\u091a\u093f\u0924 \u0935\u093e\u092a\u0938\u0940 \u0932\u092e\u094d\u092c\u093e\u0908 \u0915\u0940 \u091c\u093e\u0901\u091a \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u092a\u0943\u0937\u094d\u0920\u092d\u0942\u092e\u093f \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u094b \u092b\u093f\u0930 \u0938\u0947 \u0932\u093f\u0916\u0928\u093e\u0964  \u092f\u0939 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 \u092f\u094b\u0917\u094d\u092f \u092a\u0943\u0937\u094d\u0920\u092d\u0942\u092e\u093f \u0915\u093e \u090f\u0915 recompile \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0939\u094b\u0917\u0940\u0964
ascanrules.bufferoverflow.refs = https\://owasp.org/www-community/attacks/Buffer_overflow_attack
ascanrules.bufferoverflow.other = \u0938\u0902\u092d\u093e\u0935\u093f\u0924 \u092c\u092b\u0930 \u0905\u0924\u093f\u092a\u094d\u0930\u0935\u093e\u0939\u0964  \u0938\u094d\u0915\u094d\u0930\u093f\u092a\u094d\u091f \u0915\u0928\u0947\u0915\u094d\u0936\u0928 \u092c\u0902\u0926 \u0915\u0930 \u0926\u093f\u092f\u093e \u0914\u0930 \u090f\u0915 500 \u0906\u0902\u0924\u0930\u093f\u0915 \u0938\u0930\u094d\u0935\u0930 \u0924\u094d\u0930\u0941\u091f\u093f \u092b\u0947\u0902\u0915 \u0926\u093f\u092f\u093e

ascanrules.cloudmetadata.name = Cloud Metadata Potentially Exposed
ascanrules.cloudmetadata.desc = The Cloud Metadata Attack attempts to abuse a misconfigured NGINX server in order to access the instance metadata maintained by cloud service providers such as AWS, GCP and Azure.\n\
\n\
All of these providers provide metadata via an internal unroutable IP address '169.254.169.254' - this can be exposed by incorrectly configured NGINX servers and accessed by using this IP address in the Host header field.
ascanrules.cloudmetadata.otherinfo = Based on the successful response status code cloud metadata may have been returned in the response. Check the response data to see if any cloud metadata has been returned.\n\
\n\
The meta data returned can include information that would allow an attacker to completely compromise the system.
ascanrules.cloudmetadata.refs = https\://www.nginx.com/blog/trust-no-one-perils-of-trusting-user-input/
ascanrules.cloudmetadata.soln = Do not trust any user data in NGINX configs. In this case it is probably the use of the $host variable which is set from the 'Host' header and can be controlled by an attacker.

ascanrules.commandinjection.name=Remote OS Command Injection
ascanrules.commandinjection.desc=Attack technique used for unauthorized execution of operating system commands. This attack is possible when an application accepts untrusted input to build operating system commands in an insecure manner involving improper data sanitization, and/or improper calling of external programs.
ascanrules.commandinjection.refs=http\://cwe.mitre.org/data/definitions/78.html\n\
https\://owasp.org/www-community/attacks/Command_Injection
ascanrules.commandinjection.otherinfo.feedback-based=The scan rule was able to retrieve the content of a file or command by sending [{0}] to the operating system running this application
ascanrules.commandinjection.otherinfo.time-based=The scan rule was able to control the timing of the application response by sending [{0}] to the operating system running this application

ascanrules.elmah.name = ELMAH Information Leak
ascanrules.elmah.desc = The Error Logging Modules and Handlers (ELMAH [elmah.axd]) HTTP Module was found to be available. This module can leak a significant amount of valuable information.
ascanrules.elmah.otherinfo = Based on response status code ELMAH may be protected by an authentication or authorization mechanism.  
ascanrules.elmah.refs = https\://www.troyhunt.com/aspnet-session-hijacking-with-google/\n\
https\://www.nuget.org/packages/elmah\n\
https\://elmah.github.io/
ascanrules.elmah.soln = Consider whether or not ELMAH is actually required in production, if it isn't then disable it. If it is then ensure access to it requires authentication and authorization. See also\: https\://elmah.github.io/a/securing-error-log-pages/

ascanrules.envfiles.name = .env Information Leak
ascanrules.envfiles.desc = One or more .env files seems to have been located on the server. These files often expose infrastructure or administrative account credentials, API or APP keys, or other sensitive configuration information. 
ascanrules.envfiles.otherinfo = Based on response status code the .env file may be protected by an authentication or authorization mechanism.
ascanrules.envfiles.refs = https\://www.google.com/search?q\=db_password+filetype%3Aenv\n\
https\://mobile.twitter.com/svblxyz/status/1045013939904532482
ascanrules.envfiles.soln = Ensure the .env file is not accessible.

ascanrules.formatstring.name=\u0938\u094d\u0935\u0930\u0942\u092a \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u0924\u094d\u0930\u0941\u091f\u093f
ascanrules.formatstring.desc=\u090f\u0915 \u092a\u094d\u0930\u093e\u0930\u0942\u092a \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u0924\u094d\u0930\u0941\u091f\u093f \u0924\u092c \u0939\u094b\u0924\u0940 \u0939\u0948 \u091c\u092c \u090f\u0915 \u0907\u0928\u092a\u0941\u091f \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u0915\u0947 \u0938\u092c\u092e\u093f\u091f \u0915\u093f\u090f \u0917\u090f \u0921\u0947\u091f\u093e \u0935\u093e\u0932\u0947 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0926\u094d\u0935\u093e\u0930\u093e \u090f\u0915 \u0915\u092e\u093e\u0902\u0921 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u092e\u0942\u0932\u094d\u092f\u093e\u0902\u0915\u0928 \u0915\u093f\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948\u0964 
ascanrules.formatstring.soln= \u092c\u0941\u0930\u0947 \u091a\u0930\u093f\u0924\u094d\u0930 \u0924\u093e\u0930 \u0915\u0940 \u0909\u091a\u093f\u0924 \u0935\u093f\u0932\u094b\u092a\u0928 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u092a\u0943\u0937\u094d\u0920\u092d\u0942\u092e\u093f \u092a\u094d\u0930\u094b\u0917\u094d\u0930\u093e\u092e \u0915\u094b \u092b\u093f\u0930 \u0938\u0947 \u0932\u093f\u0916\u0928\u093e\u0964  \u092f\u0939 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 \u092f\u094b\u0917\u094d\u092f \u092a\u0943\u0937\u094d\u0920\u092d\u0942\u092e\u093f \u0915\u093e \u090f\u0915 recompile \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0939\u094b\u0917\u0940\u0964
ascanrules.formatstring.refs=https\://owasp.org/www-community/attacks/Format_string_attack
ascanrules.formatstring.error1 = \u0938\u0902\u092d\u093e\u0935\u093f\u0924 \u0938\u094d\u0935\u0930\u0942\u092a \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u0924\u094d\u0930\u0941\u091f\u093f\u0964  \u0938\u094d\u0915\u094d\u0930\u093f\u092a\u094d\u091f \u090f\u0915 /%s \u092a\u0930 \u0915\u0928\u0947\u0915\u094d\u0936\u0928 \u092c\u0902\u0926 \u0915\u0930 \u0926\u093f\u092f\u093e
ascanrules.formatstring.error2 = \u0938\u0902\u092d\u093e\u0935\u093f\u0924 \u0938\u094d\u0935\u0930\u0942\u092a \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u0924\u094d\u0930\u0941\u091f\u093f\u0964  \u0938\u094d\u0915\u094d\u0930\u093f\u092a\u094d\u091f \u090f\u0915 /%s \u092a\u0930 \u0915\u0928\u0947\u0915\u094d\u0936\u0928 \u092c\u0902\u0926 \u0915\u0930 \u0926\u093f\u092f\u093e
ascanrules.formatstring.error3 = \u0938\u0902\u092d\u093e\u0935\u093f\u0924 \u0938\u094d\u0935\u0930\u0942\u092a \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u0924\u094d\u0930\u0941\u091f\u093f\u0964  \u0938\u094d\u0915\u094d\u0930\u093f\u092a\u094d\u091f \u0915\u093f\u0938\u0940 microsoft \u0938\u094d\u0935\u0930\u0942\u092a \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917 \u0924\u094d\u0930\u0941\u091f\u093f \u092a\u0930 \u0915\u0928\u0947\u0915\u094d\u0936\u0928 \u092c\u0902\u0926 \u0915\u0930 \u0926\u093f\u092f\u093e

ascanrules.getforpost.name=GET for POST
ascanrules.getforpost.desc=A request that was originally observed as a POST was also accepted as a GET. This issue does not represent a security weakness unto itself, however, it may facilitate simplification of other attacks. For example if the original POST is subject to Cross-Site Scripting (XSS), then this finding may indicate that a simplified (GET based) XSS may also be possible.
ascanrules.getforpost.soln=Ensure that only POST is accepted where POST is expected.

ascanrules.heartbleed.name=Heartbleed \u0913\u092a\u0928\u090f\u0938\u090f\u0938\u090f\u0932 \u092d\u0947\u0926\u094d\u092f\u0924\u093e
ascanrules.heartbleed.desc=TLS \u0915\u093e\u0930\u094d\u092f\u093e\u0928\u094d\u0935\u092f\u0928 \u092e\u0947\u0902 \u0938\u0902\u092d\u093e\u0935\u093f\u0924 \u0938\u0902\u0935\u0947\u0926\u0928\u0936\u0940\u0932 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u092c\u0924\u093e\u0928\u0947 \u091c\u094b \u0926\u0942\u0930\u0938\u094d\u0925 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u0938\u094d\u092e\u0943\u0924\u093f \u0917\u0922\u093c\u0940 \u0917\u0908 \u092a\u0948\u0915\u0947\u091f \u090f\u0915 \u092c\u092b\u0930 \u0905\u0924\u093f \u092a\u0922\u093c\u0928\u0947 \u0915\u094b \u091f\u094d\u0930\u093f\u0917\u0930 \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0938\u0902\u0935\u0947\u0926\u0928\u0936\u0940\u0932 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0915\u094b \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0939\u092e\u0932\u093e\u0935\u0930\u094b\u0902 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0926\u0947\u0924\u093e \u0939\u0948, \u0913\u092a\u0928\u090f\u0938\u090f\u0938\u090f\u0932 1.0.1 \u0915\u0947 \u092a\u0939\u0932\u0947 1.0.1g \u0926\u093f\u0932 \u0915\u0940 \u0927\u0921\u093c\u0915\u0928 \u090f\u0915\u094d\u0938\u091f\u0947\u0902\u0936\u0928 \u0915\u0947 \u092a\u0948\u0915\u0947\u091f, \u0920\u0940\u0915 \u0924\u0930\u0939 \u0938\u0947 \u0939\u0948\u0902\u0921\u0932 \u0928\u0939\u0940\u0902\u0964
ascanrules.heartbleed.soln=\u0913\u092a\u0928\u090f\u0938\u090f\u0938\u090f\u0932 1.0.1g \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0926\u094d\u092f\u0924\u0928 \u092f\u093e \u092c\u093e\u0926 \u092e\u0947\u0902\u0964 HTTPS \u092a\u094d\u0930\u092e\u093e\u0923\u092a\u0924\u094d\u0930 \u092a\u0941\u0928\u0903 \u091c\u093e\u0930\u0940\u0964 \u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928 \u0905\u0938\u092e\u092e\u093f\u0924 \u0928\u093f\u091c\u0940 \u0915\u0941\u0902\u091c\u093f\u092f\u094b\u0902 \u0914\u0930 \u0938\u093e\u091d\u093e \u0917\u0941\u092a\u094d\u0924 \u0915\u0941\u0902\u091c\u0940, \u0915\u0947 \u092c\u093e\u0926 \u0938\u0947 \u092f\u0947, \u0938\u0930\u094d\u0935\u0930 \u0932\u0949\u0917 \u092b\u093e\u0907\u0932 \u092e\u0947\u0902 \u0938\u092e\u091d\u094c\u0924\u0947 \u0915\u0940 \u0915\u094b\u0908 \u0938\u092c\u0942\u0924 \u0915\u0947 \u0938\u093e\u0925 \u0938\u092e\u091d\u094c\u0924\u093e \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964
ascanrules.heartbleed.refs=http\://cvedetails.com/cve-details.php?t\=1&cve_id\=CVE-2014-0160
ascanrules.heartbleed.extrainfo=\u0907\u0938 \u092e\u0941\u0926\u094d\u0926\u0947 \u0915\u0947 {0} \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0938\u0930\u094d\u0935\u0930, \u0938\u0947 exfiltrating \u0921\u0947\u091f\u093e \u0926\u094d\u0935\u093e\u0930\u093e \u0915\u0940 \u092a\u0941\u0937\u094d\u091f\u093f \u0915\u0940 \u0925\u0940\u0964 \u092f\u0939 \u090f\u0915 \u091d\u0942\u0920\u0940 \u0938\u0915\u093e\u0930\u093e\u0924\u094d\u092e\u0915 \u0939\u094b\u0928\u0947 \u0915\u0940 \u0938\u0902\u092d\u093e\u0935\u0928\u093e \u0928\u0939\u0940\u0902 \u0939\u0948\u0964

ascanrules.hidden.files.name = Hidden File Finder
ascanrules.hidden.files.alert.name = Hidden File Found
ascanrules.hidden.files.desc = A sensitive file was identified as accessible or available. This may leak administrative, configuration, or credential information which can be leveraged by a malicious individual to further attack the system or conduct social engineering efforts.
ascanrules.hidden.files.otherinfo = {0}
ascanrules.hidden.files.refs = https\://blog.hboeck.de/archives/892-Introducing-Snallygaster-a-Tool-to-Scan-for-Secrets-on-Web-Servers.html
ascanrules.hidden.files.soln = Consider whether or not the component is actually required in production, if it isn't then disable it. If it is then ensure access to it requires appropriate authentication and authorization, or limit exposure to internal systems or specific source IPs, etc.

ascanrules.htaccess.name = .htaccess Information Leak
ascanrules.htaccess.desc = htaccess files can be used to alter the configuration of the Apache Web Server software to enable/disable additional functionality and features that the Apache Web Server software has to offer. 
ascanrules.htaccess.otherinfo = Based on response status code htaccess file may be protected by an authentication or authorization mechanism.
ascanrules.htaccess.refs = http\://www.htaccess-guide.com/
ascanrules.htaccess.soln = Ensure the .htaccess file is not accessible.

ascanrules.paddingoracle.name=Generic Padding Oracle
ascanrules.paddingoracle.desc=By manipulating the padding on an encrypted string, an attacker is able to generate an error message that indicates a likely 'padding oracle' vulnerability. Such a vulnerability can affect any application or framework that uses encryption improperly, such as some versions of ASP.net, Java Server Faces, and Mono. An attacker may exploit this issue to decrypt data and recover encryption keys, potentially viewing and modifying confidential data. This rule should detect the MS10-070 padding oracle vulnerability in ASP.net if CustomErrors are enabled for that.
ascanrules.paddingoracle.soln=Update the affected server software, or modify the scripts so that they properly validate encrypted data before attempting decryption.
ascanrules.paddingoracle.refs=http\://netifera.com/research/\n\
http\://www.microsoft.com/technet/security/bulletin/ms10-070.mspx\n\
http\://www.mono-project.com/Vulnerabilities\#ASP.NET_Padding_Oracle\n\
https\://bugzilla.redhat.com/show_bug.cgi?id\=623799

ascanrules.payloader.desc=Provides support for custom payloads in scan rules.
ascanrules.payloader.name=Active Scan Rules Custom Payloads

ascanrules.remotecodeexecution.cve-2012-1823.name = \u0930\u093f\u092e\u094b\u091f \u0915\u094b\u0921 \u0915\u093e \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 - CVE-2012-1823
ascanrules.remotecodeexecution.cve-2012-1823.desc = \u0915\u0941\u091b PHP \u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u0939\u0948, \u091c\u092c CGI, \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u091a\u0932\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0938\u0939\u0940 \u0922\u0902\u0917 \u0938\u0947 \u092e\u0928\u092e\u093e\u0928\u093e \u0915\u094b\u0921 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 \u0915\u094b \u0938\u0915\u094d\u0937\u092e \u0915\u0930\u0928\u0947 \u0915\u0947 \u090f\u0915 unescaped "\=" \u0935\u0930\u094d\u0923, \u0915\u092e\u0940 \u0915\u094d\u0935\u0947\u0930\u0940 \u0938\u094d\u091f\u094d\u0930\u093f\u0902\u0917\u094d\u0938 \u0939\u0948\u0902\u0921\u0932 \u0928\u0939\u0940\u0902\u0964 \u0907\u0938 \u092e\u093e\u092e\u0932\u0947 \u092e\u0947\u0902, \u090f\u0915 \u0911\u092a\u0930\u0947\u091f\u093f\u0902\u0917 \u0938\u093f\u0938\u094d\u091f\u092e \u0915\u092e\u093e\u0902\u0921 \u0915\u094b \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u092a\u0930 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u093f\u0924 \u0915\u093f\u092f\u093e \u091c\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093e\u0930\u0923 \u0925\u093e, \u0914\u0930 \u092a\u0930\u093f\u0923\u093e\u092e \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0915\u0947 \u0932\u093f\u090f \u0932\u094c\u091f \u0906\u090f \u0925\u0947\u0964 
ascanrules.remotecodeexecution.cve-2012-1823.soln = PHP \u0915\u093e \u0928\u0935\u0940\u0928\u0924\u092e \u0938\u094d\u0925\u093f\u0930 \u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u0915\u0947 \u0932\u093f\u090f \u0928\u0935\u0940\u0928\u0940\u0915\u0930\u0923, \u092f\u093e \u0926\u0941\u0930\u094d\u092d\u093e\u0935\u0928\u093e\u092a\u0942\u0930\u094d\u0923 \u0905\u0928\u0941\u0930\u094b\u0927\u094b\u0902 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u0947 "RewriteCond" \u0914\u0930 "RewriteRule" \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u092c\u093e\u0939\u0930 \u092b\u093c\u093f\u0932\u094d\u091f\u0930 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f Apache \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0914\u0930 mod_rewrite \u092e\u0949\u0921\u094d\u092f\u0942\u0932 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902\u0964

ascanrules.sourcecodedisclosurecve-2012-1823.name = \u0938\u094d\u0930\u094b\u0924 \u0915\u094b\u0921 \u092a\u094d\u0930\u0915\u091f\u0940\u0915\u0930\u0923 - CVE-2012-1823
ascanrules.sourcecodedisclosurecve-2012-1823.desc = \u0915\u094d\u0935\u0947\u0930\u0940 \u0924\u093e\u0930 \u0915\u093f PHP \u0938\u094d\u0930\u094b\u0924 \u0915\u094b\u0921 \u092a\u094d\u0930\u0915\u091f\u0940\u0915\u0930\u0923, \u0914\u0930 \u092e\u0928\u092e\u093e\u0928\u093e \u0915\u094b\u0921 \u0928\u093f\u0937\u094d\u092a\u093e\u0926\u0928 \u0915\u094b \u0938\u0915\u094d\u0937\u092e \u0915\u0930\u0928\u0947 \u0915\u0947 \u090f\u0915 unescaped "\=" \u0935\u0930\u094d\u0923, \u0915\u092e\u0940 \u0915\u0941\u091b PHP \u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u0939\u0948, \u091c\u092c CGI, \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0915\u0947 \u091a\u0932\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0938\u0939\u0940 \u0924\u0930\u0940\u0915\u0947 \u0938\u0947 \u0939\u0948\u0902\u0921\u0932 \u0928\u0939\u0940\u0902\u0964 \u0907\u0938 \u092e\u093e\u092e\u0932\u0947 \u092e\u0947\u0902, PHP \u092b\u093c\u093e\u0907\u0932 \u0915\u0940 \u0938\u093e\u092e\u0917\u094d\u0930\u0940 \u0938\u0940\u0927\u0947 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0915\u0947 \u0932\u093f\u090f \u0938\u0947\u0935\u093e \u0915\u0940 \u0925\u0947\u0964 \u0939\u093e\u0932\u093e\u0902\u0915\u093f \u092f\u0939 \u092d\u0940 \u0939\u094b \u0938\u0915\u0924\u0940 \u0939\u0948 \u0938\u0940\u0927\u0940 HTML \u0907\u0938 \u0906\u0909\u091f\u092a\u0941\u091f \u092e\u0947\u0902 \u0906\u092e\u0924\u094c\u0930 \u092a\u0930 PHP, \u0936\u093e\u092e\u093f\u0932 \u0939\u094b\u0902\u0917\u0947\u0964
ascanrules.sourcecodedisclosurecve-2012-1823.soln = PHP \u0915\u093e \u0928\u0935\u0940\u0928\u0924\u092e \u0938\u094d\u0925\u093f\u0930 \u0938\u0902\u0938\u094d\u0915\u0930\u0923 \u0915\u0947 \u0932\u093f\u090f \u0928\u0935\u0940\u0928\u0940\u0915\u0930\u0923, \u092f\u093e \u0926\u0941\u0930\u094d\u092d\u093e\u0935\u0928\u093e\u092a\u0942\u0930\u094d\u0923 \u0905\u0928\u0941\u0930\u094b\u0927\u094b\u0902 \u0928\u093f\u0930\u094d\u0926\u0947\u0936\u094b\u0902 \u0915\u0947 "RewriteCond" \u0914\u0930 "RewriteRule" \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u092c\u093e\u0939\u0930 \u092b\u093c\u093f\u0932\u094d\u091f\u0930 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f Apache \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0914\u0930 mod_rewrite \u092e\u0949\u0921\u094d\u092f\u0942\u0932 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902\u0964


ascanrules.sourcecodedisclosurewebinf.name = \u0938\u094d\u0930\u094b\u0924 \u0915\u094b\u0921 \u092a\u094d\u0930\u0915\u091f\u0940\u0915\u0930\u0923 - /WEB-INF \u092b\u093c\u094b\u0932\u094d\u0921\u0930
ascanrules.sourcecodedisclosurewebinf.desc = \u091c\u093e\u0935\u093e \u0938\u094d\u0930\u094b\u0924 \u0915\u094b\u0921 \u092e\u0947\u0902 \u091c\u093e\u0935\u093e \u0935\u0930\u094d\u0917 \u092b\u093c\u093e\u0907\u0932\u0947\u0902 \u0935\u0947\u092c-INF \u092b\u093c\u094b\u0932\u094d\u0921\u0930 \u092e\u0947\u0902 \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0926\u094d\u0935\u093e\u0930\u093e \u092c\u0924\u093e\u092f\u093e \u0917\u092f\u093e \u0925\u093e\u0964 \u0915\u094d\u0932\u093e\u0938 \u092b\u093e\u0907\u0932 \u091c\u093f\u0932\u0947 \u0909\u0924\u094d\u092a\u093e\u0926\u0928 \u0938\u094d\u0930\u094b\u0924 \u0915\u094b\u0921 \u0939\u0948 \u091c\u094b \u092c\u0939\u0941\u0924 \u0939\u0940 \u092c\u093e\u0930\u0940\u0915\u0940 \u0938\u0947 \u092e\u0942\u0932 \u0938\u094d\u0930\u094b\u0924 \u0915\u094b\u0921 \u0938\u0947 \u092e\u0947\u0932 \u0916\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0907\u0915\u091f\u094d\u0920\u0947 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964  
ascanrules.sourcecodedisclosurewebinf.soln = \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0915\u0947 /WEB-INF \u092b\u093c\u094b\u0932\u094d\u0921\u0930 \u0915\u0940 \u0938\u0947\u0935\u093e \u0928\u0939\u0940\u0902 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930 \u0915\u093f\u092f\u093e \u091c\u093e\u0928\u093e \u091a\u093e\u0939\u093f\u090f \u092f\u093e \u0907\u0938\u0915\u0940 \u0938\u093e\u092e\u0917\u094d\u0930\u0940 \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930\u094b\u0902, \u0915\u0947 \u092c\u093e\u0926 \u0938\u0947 \u092f\u0939 \u0907\u0938 \u0924\u0930\u0939 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0938\u0902\u0935\u0947\u0926\u0928\u0936\u0940\u0932 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0936\u093e\u092e\u093f\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094d\u0930\u0947\u0921\u0947\u0902\u0936\u093f\u092f\u0932 \u0936\u093e\u092e\u093f\u0932 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 \u091c\u093e\u0935\u093e \u0938\u094d\u0930\u094b\u0924 \u0915\u094b\u0921 \u0914\u0930 \u0917\u0941\u0923 \u092b\u093c\u093e\u0907\u0932\u0947\u0902 \u091c\u094b \u0938\u0902\u0915\u0932\u093f\u0924\u0964 \u0906\u0935\u0947\u0926\u0928 \u0915\u0947 \u0938\u093e\u0925 \u0924\u0948\u0928\u093e\u0924 \u091c\u093e\u0935\u093e \u0935\u0930\u094d\u0917\u094b\u0902, \u090f\u0915 "\u0930\u0915\u094d\u0937\u093e \u092e\u0947\u0902 \u0917\u0939\u0930\u093e\u0908" \u0926\u0943\u0937\u094d\u091f\u093f\u0915\u094b\u0923 \u092e\u0947\u0902 \u0930\u0915\u094d\u0937\u093e \u0915\u0940 \u090f\u0915 \u0905\u0924\u093f\u0930\u093f\u0915\u094d\u0924 \u092a\u0930\u0924 \u0915\u0947 \u0930\u0942\u092a \u092e\u0947\u0902 \u0938\u092e\u091d\u0928\u0947 \u092e\u0947\u0902 \u0915\u0920\u093f\u0928 \u0939\u094b\u0928\u093e \u091a\u093e\u0939\u093f\u090f\u0964
ascanrules.sourcecodedisclosurewebinf.propertiesfile.name = \u0917\u0941\u0923 \u092b\u093c\u093e\u0907\u0932 \u092a\u094d\u0930\u0915\u091f\u0940\u0915\u0930\u0923 - /WEB-INF \u092b\u093c\u094b\u0932\u094d\u0921\u0930
ascanrules.sourcecodedisclosurewebinf.propertiesfile.desc = \u090f\u0915 \u091c\u093e\u0935\u093e \u0935\u0930\u094d\u0917 \u0915\u094b /WEB-INF \u092b\u093c\u094b\u0932\u094d\u0921\u0930 \u092e\u0947\u0902 \u0917\u0941\u0923 \u092b\u093c\u093e\u0907\u0932 \u0915\u0940 \u0909\u092a\u0938\u094d\u0925\u093f\u0924\u093f \u0915\u093e \u0916\u0941\u0932\u093e\u0938\u093e \u0915\u093f\u092f\u093e\u0964 \u0917\u0941\u0923 \u092b\u093c\u093e\u0907\u0932 \u0928\u0939\u0940\u0902 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u093e\u0930\u094d\u0935\u091c\u0928\u093f\u0915 \u0930\u0942\u092a \u0938\u0947 \u0938\u0941\u0932\u092d \u0939\u094b, \u0914\u0930 \u0906\u092e\u0924\u094c\u0930 \u092a\u0930 \u0935\u093f\u0928\u094d\u092f\u093e\u0938 \u0938\u0942\u091a\u0928\u093e, \u0906\u0935\u0947\u0926\u0928 \u0915\u094d\u0930\u0947\u0921\u0947\u0902\u0936\u093f\u092f\u0932\u094d\u0938 \u092f\u093e \u0915\u094d\u0930\u093f\u092a\u094d\u091f\u094b\u0917\u094d\u0930\u093e\u092b\u093c\u093f\u0915 \u0915\u0941\u0902\u091c\u093f\u092f\u093e\u0901 \u0939\u094b\u0924\u0947 \u0939\u0948\u0902 \u0907\u0930\u093e\u0926\u093e \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902\u0964   
ascanrules.sourcecodedisclosurewebinf.propertiesfile.soln = /WEB-INF \u092b\u093c\u094b\u0932\u094d\u0921\u0930 \u092f\u093e \u0907\u0938\u0915\u0940 \u0938\u093e\u092e\u0917\u094d\u0930\u0940 \u0915\u0947 \u0932\u093f\u090f \u0935\u0947\u092c \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0915\u0940 \u0938\u0947\u0935\u093e \u0928\u0939\u0940\u0902 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u094b\u0928\u093e \u091a\u093e\u0939\u093f\u090f\u0964  \u092f\u0939 \u092d\u0940 /WEB-INF \u092b\u093c\u094b\u0932\u094d\u0921\u0930 \u0915\u094b \u0928\u093f\u0915\u093e\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u0902\u092d\u0935 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964  
ascanrules.sourcecodedisclosurewebinf.propertiesfile.extrainfo = \u0917\u0941\u0923 \u092b\u093c\u093e\u0907\u0932 \u0915\u0947 \u0932\u093f\u090f \u0938\u0902\u0926\u0930\u094d\u092d \u091c\u093f\u0932\u0947 \u0907\u0915\u091f\u094d\u0920\u0947 \u091c\u093e\u0935\u093e \u091c\u093e\u0935\u093e \u0935\u0930\u094d\u0917 [{0}] \u0915\u0947 \u0932\u093f\u090f \u0938\u094d\u0930\u094b\u0924 \u0915\u094b\u0921 \u092e\u0947\u0902 \u092a\u093e\u092f\u093e \u0917\u092f\u093e \u0925\u093e\u0964


ascanrules.crosssitescripting.name = Cross Site Scripting (Reflected)
ascanrules.crosssitescripting.json.name = Cross Site Scripting Weakness (Reflected in JSON Response)
ascanrules.crosssitescripting.json.desc = A XSS attack was reflected in a JSON response, this might leave content consumers vulnerable to attack if they don't appropriately handle the data (response).
ascanrules.crosssitescripting.otherinfo.nothtml = Raised with LOW confidence as the Content-Type is not HTML
ascanrules.crosssitescripting.otherinfo.accesskey = The accesskey attribute specifies a shortcut key to activate/focus an element. This attribute can trigger payloads for non-conventional or custom tags.

ascanrules.persistentxssattack.name=Cross Site Scripting (Persistent)
ascanrules.persistentxssattack.otherinfo=Source URL\: {0}
ascanrules.persistentxssattack.json.name = Cross Site Scripting Weakness (Persistent in JSON Response)
ascanrules.persistentxssattack.json.desc = A XSS attack was found in a JSON response, this might leave content consumers vulnerable to attack if they don't appropriately handle the data (response).
ascanrules.persistentxssattack.otherinfo.nothtml = Raised with LOW confidence as the Content-Type is not HTML 

ascanrules.persistentxssprime.name=Cross Site Scripting (Persistent) - Prime
ascanrules.persistentxssprime.misc=N/A

ascanrules.persistentxssspider.name=Cross Site Scripting (Persistent) - Spider
ascanrules.persistentxssspider.misc=N/A

ascanrules.sqlinjection.name=SQL Injection
ascanrules.sqlinjection.desc=SQL \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928 \u0938\u0902\u092d\u0935 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964
ascanrules.sqlinjection.soln=Do not trust client side input, even if there is client side validation in place. \n\
In general, type check all data on the server side.\n\
If the application uses JDBC, use PreparedStatement or CallableStatement, with parameters passed by '?'\n\
If the application uses ASP, use ADO Command Objects with strong type checking and parameterized queries.\n\
If database Stored Procedures can be used, use them.\n\
Do *not* concatenate strings into queries in the stored procedure, or use 'exec', 'exec immediate', or equivalent functionality\!\n\
Do not create dynamic SQL queries using simple string concatenation.\n\
Escape all data received from the client.\n\
Apply an 'allow list' of allowed characters, or a 'deny list' of disallowed characters in user input.\n\
Apply the privilege of least privilege by using the least privileged database user possible.\n\
In particular, avoid using the 'sa' or 'db-owner' database users. This does not eliminate SQL injection, but minimizes its impact.\n\
Grant the minimum database access that is necessary for the application.
ascanrules.sqlinjection.refs=https\://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html
ascanrules.sqlinjection.alert.errorbased.attack=[{0}] \u0915\u094d\u0937\u0947\u0924\u094d\u0930\: [{1}], \u092e\u0942\u0932\u094d\u092f [{2}]
ascanrules.sqlinjection.alert.errorbased.differentiation.attack=\u092e\u0942\u0932 \u092e\u0942\u0932\u094d\u092f\: [{0}]\u0964 \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u092e\u093e\u0928\: [{1}]\u0964 \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u0923 \u092e\u093e\u0928\: [{2}]
ascanrules.sqlinjection.alert.booleanbased.attack=\u0915\u094d\u0937\u0947\u0924\u094d\u0930\: [{0}], \u092e\u0942\u0932\u094d\u092f [{1}]
ascanrules.sqlinjection.alert.unionbased.attack=[{0}] \u0915\u094d\u0937\u0947\u0924\u094d\u0930\: [{1}], \u092e\u0942\u0932\u094d\u092f [{2}]
ascanrules.sqlinjection.alert.errorbased.extrainfo=RDBMS [{0}] \u0915\u0940 \u0938\u0902\u092d\u093e\u0935\u0928\u093e, \u0924\u094d\u0930\u0941\u091f\u093f \u0938\u0902\u0926\u0947\u0936 \u092e\u0947\u0902 HTML \u092a\u0930\u093f\u0923\u093e\u092e \u091f\u0941\u0915\u0921\u093c\u093e [{1}] \u0915\u094b \u0926\u0947\u0916\u0924\u0947 \u0939\u0941\u090f
ascanrules.sqlinjection.alert.unionbased.extrainfo=RDBMS [{0}] \u0915\u0940 \u0938\u0902\u092d\u093e\u0935\u0928\u093e, \u0938\u0902\u0918-\u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0938\u0902\u0926\u0947\u0936 HTML \u092a\u0930\u093f\u0923\u093e\u092e \u092e\u0947\u0902 \u091f\u0941\u0915\u0921\u093c\u093e [{1}] \u0915\u094b \u0926\u0947\u0916\u0924\u0947 \u0939\u0941\u090f
ascanrules.sqlinjection.alert.expressionbased.extrainfo=The original page results were successfully replicated using the expression [{0}] as the parameter value\n\
The parameter value being modified was {1}stripped from the HTML output for the purposes of the comparison
ascanrules.sqlinjection.alert.orderbybased.extrainfo=The original page results were successfully replicated using the "ORDER BY" expression [{0}] as the parameter value\n\
The parameter value being modified was {1}stripped from the HTML output for the purposes of the comparison
ascanrules.sqlinjection.alert.errorbased.httpstatuscode.extrainfo=HTTP \u0938\u094d\u0925\u093f\u0924\u093f [{0}] unmodified \u0938\u0902\u0926\u0947\u0936 \u0926\u093f\u092f\u093e \u0925\u093e, HTTP \u0938\u094d\u0925\u093f\u0924\u093f [{1}] \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0938\u0902\u0926\u0947\u0936 \u0926\u093f\u092f\u093e \u0925\u093e
ascanrules.sqlinjection.alert.errorbased.differentiation.extrainfo=HTTP \u0938\u094d\u0925\u093f\u0924\u093f [{0}] unmodified \u0938\u0902\u0926\u0947\u0936 \u0926\u093f\u092f\u093e \u0925\u093e, HTTP \u0938\u094d\u0925\u093f\u0924\u093f [{2}], \u0936\u0930\u0940\u0930 \u0915\u0940 \u0932\u0902\u092c\u093e\u0908 [{3}] \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0936\u0930\u0940\u0930 \u0932\u0902\u092c\u093e\u0908 [{1}], \u0915\u093e \u0938\u0902\u0926\u0947\u0936 \u0926\u093f\u092f\u093e \u0925\u093e\u0964 \u090f\u0915 \u0924\u093f\u0939\u093e\u0908 (\u0917\u0948\u0930-SQL \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928 \u092e\u093e\u0928 \u0909\u0924\u094d\u092a\u094d\u0930\u0947\u0930\u0923) HTTP \u0938\u094d\u0925\u093f\u0924\u093f [{4}], \u0936\u0930\u0940\u0930 \u0915\u0940 \u0932\u0902\u092c\u093e\u0908 [{5}] \u0926\u093f\u092f\u093e \u0925\u093e
ascanrules.sqlinjection.alert.booleanbased.extrainfo=\u092a\u0943\u0937\u094d\u0920 \u0915\u0947 \u092a\u0930\u093f\u0923\u093e\u092e \u092e\u0947\u0902 \u0938\u092b\u0932\u0924\u093e\u092a\u0942\u0930\u094d\u0935\u0915 \u092c\u0942\u0932\u093f\u092f\u0928 \u0936\u0930\u094d\u0924\u094b\u0902 [{0}] \u0914\u0930 [{1}] \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u0939\u0947\u0930\u092b\u0947\u0930 \u0915\u093f\u092f\u093e \u0917\u092f\u093e
ascanrules.sqlinjection.alert.booleanbased.extrainfo.dataexists=Data was returned for the original parameter.\n\
The vulnerability was detected by successfully restricting the data originally returned, by manipulating the parameter
ascanrules.sqlinjection.alert.booleanbased.extrainfo.datanotexists=Data was NOT returned for the original parameter.\n\
The vulnerability was detected by successfully retrieving more data than originally returned, by manipulating the parameter
ascanrules.sqlinjection.alert.timebased.extrainfo=\u0915\u094d\u0935\u0947\u0930\u0940 \u0938\u092e\u092f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u092e\u093e\u0928 [{0}], \u091c\u093f\u0938\u0915\u0947 \u0915\u093e\u0930\u0923 \u091c\u092c \u092e\u0942\u0932\u094d\u092f [{2}] \u0915\u0947 \u0938\u093e\u0925 \u092e\u0942\u0932 unmodified \u0915\u094d\u0935\u0947\u0930\u0940 [{3}] \u092e\u093f\u0932\u0940\u0938\u0947\u0915\u0902\u0921 \u0932\u093f\u092f\u093e [{1}] \u092e\u093f\u0938\u0947, \u0932\u0947 \u0932\u094b \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930 \u091a\u0932\u093e\u092f\u093e \u0939\u0941\u0906 \u0939\u0948 
ascanrules.sqlinjection.authbypass.name=SQL Injection - Authentication Bypass
ascanrules.sqlinjection.authbypass.desc=SQL injection may be possible on a login page, potentially allowing the application's authentication mechanism to be bypassed 

# TODO some duplicates

ascanrules.sqlinjection.mysql.name=SQL \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928 - MySQL
ascanrules.sqlinjection.hypersonic.name=SQL \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928 - \u0939\u093e\u0907\u092a\u0930\u0938\u0949\u0928\u093f\u0915 SQL
ascanrules.sqlinjection.oracle.name=SQL \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928 - Oracle
ascanrules.sqlinjection.postgres.name=SQL \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928 - PostgreSQL
#ascanrules.sqlinjection.alert.errorbased.attack={1}

ascanrules.sqlinjection.mssql.name=SQL Injection - MsSQL
ascanrules.sqlinjection.mssql.desc=SQL \u0907\u0902\u091c\u0947\u0915\u094d\u0936\u0928 \u0938\u0902\u092d\u0935 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948\u0964
ascanrules.sqlinjection.mssql.soln=Do not trust client side input, even if there is client side validation in place. \n\
In general, type check all data on the server side.\n\
If the application uses JDBC, use PreparedStatement or CallableStatement, with parameters passed by '?'\n\
If the application uses ASP, use ADO Command Objects with strong type checking and parameterized queries.\n\
If database Stored Procedures can be used, use them.\n\
Do *not* concatenate strings into queries in the stored procedure, or use 'exec', 'exec immediate', or equivalent functionality\!\n\
Do not create dynamic SQL queries using simple string concatenation.\n\
Escape all data received from the client.\n\
Apply an 'allow list' of allowed characters, or a 'deny list' of disallowed characters in user input.\n\
Apply the privilege of least privilege by using the least privileged database user possible.\n\
In particular, avoid using the 'sa' or 'db-owner' database users. This does not eliminate SQL injection, but minimizes its impact.\n\
Grant the minimum database access that is necessary for the application.
ascanrules.sqlinjection.mssql.refs=https\://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html
ascanrules.sqlinjection.mssql.alert.timebased.extrainfo=The query time is controllable using parameter value [{0}], which caused the request to take [{1}] milliseconds, when the original unmodified query with value [{2}] took [{3}] milliseconds.

ascanrules.sqlinjection.sqlite.name=SQL Injection - SQLite
ascanrules.sqlinjection.sqlite.alert.timebased.extrainfo=The query time is controllable using parameter value [{0}], which caused the request to take [{1}] milliseconds, parameter value [{2}], which caused the request to take [{3}] milliseconds, when the original unmodified query with value [{4}] took [{5}] milliseconds.
ascanrules.sqlinjection.sqlite.alert.errorbased.extrainfo=The following known SQLite error message was provoked\: [{0}].
ascanrules.sqlinjection.sqlite.alert.versionnumber.extrainfo=Using a UNION based SQL Injection attack, and by exploiting SQLite''s dynamic typing mechanism, the SQLite version was determined to be [{0}].\n\
With string-based injection points, full SQLite version information can be extracted, but with numeric injection points, only partial SQLite version information can be extracted.\n\
More information on SQLite version [{0}] is available at http\://www.sqlite.org/changes.html


ascanrules.externalredirect.name=External Redirect
ascanrules.externalredirect.reason.location.header=The response contains a redirect in its Location header which allows an external Url to be set.
ascanrules.externalredirect.reason.location.meta=The response contains a redirect in its meta http-equiv tag for 'Location' which allows an external Url to be set.
ascanrules.externalredirect.reason.refresh.header=The response contains a redirect in its Refresh header which allows an external Url to be set.
ascanrules.externalredirect.reason.refresh.meta=The response contains a redirect in its meta http-equiv tag for 'Refresh' which allows an external Url to be set.
ascanrules.externalredirect.reason.javascript=The response contains a redirect in its JavaScript code which allows an external Url to be set.
ascanrules.externalredirect.reason.notfound=No reason found for it...

ascanrules.codeinjection.name=Server Side Code Injection
ascanrules.codeinjection.name.asp=Server Side Code Injection - ASP Code Injection
ascanrules.codeinjection.name.php=Server Side Code Injection - PHP Code Injection
ascanrules.codeinjection.desc=A code injection may be possible including custom code that will be evaluated by the scripting engine
ascanrules.codeinjection.soln=Do not trust client side input, even if there is client side validation in place.\n\
In general, type check all data on the server side and escape all data received from the client.\n\
 Avoid the use of eval() functions combined with user input data.
ascanrules.codeinjection.refs=http\://cwe.mitre.org/data/definitions/94.html\n\
https\://owasp.org/www-community/attacks/Direct_Dynamic_Code_Evaluation_Eval%20Injection

ascanrules.directorybrowsing.name=Directory Browsing
ascanrules.directorybrowsing.desc=It is possible to view the directory listing.  Directory listing may reveal hidden scripts, include files, backup source files, etc. which can be accessed to read sensitive information.
ascanrules.directorybrowsing.soln=Disable directory browsing.  If this is required, make sure the listed files does not induce risks.
ascanrules.directorybrowsing.refs=http\://httpd.apache.org/docs/mod/core.html\#options\n\
http\://alamo.satlug.org/pipermail/satlug/2002-February/000053.html

ascanrules.crlfinjection.name=CRLF Injection
ascanrules.crlfinjection.desc=Cookie can be set via CRLF injection.  It may also be possible to set arbitrary HTTP response headers. In addition, by carefully crafting the injected response using cross-site script, cache poisoning vulnerability may also exist.
ascanrules.crlfinjection.soln=Type check the submitted parameter carefully.  Do not allow CRLF to be injected by filtering CRLF.
ascanrules.crlfinjection.refs=http\://www.watchfire.com/resources/HTTPResponseSplitting.pdf\n\
http\://webappfirewall.com/lib/crlf-injection.txtnull\n\
http\://www.securityfocus.com/bid/9804

ascanrules.parametertamper.name=Parameter Tampering
ascanrules.parametertamper.desc=Parameter manipulation caused an error page or Java stack trace to be displayed.  This indicated lack of exception handling and potential areas for further exploit.
ascanrules.parametertamper.soln=Identify the cause of the error and fix it.  Do not trust client side input and enforce a tight check in the server side.  Besides, catch the exception properly.  Use a generic 500 error page for internal server error.

ascanrules.pathtraversal.name=Path Traversal
ascanrules.pathtraversal.other=Check {0}

ascanrules.remotefileinclude.name=Remote File Inclusion

ascanrules.serversideinclude.name=Server Side Include
ascanrules.serversideinclude.desc=Certain parameters may cause Server Side Include commands to be executed.  This may allow database connection or arbitrary code to be executed.
ascanrules.serversideinclude.soln=Do not trust client side input and enforce a tight check in the server side.  Disable server side includes.\n\

Refer=\u0905\u0915\u094d\u0937\u092e \u0924\u094b\u0921\u093c \u0938\u093e\u0907\u0921 \u0936\u093e\u092e\u093f\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092e\u0948\u0928\u0941\u0905\u0932 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f\u0964 \u0906\u092a\u0915\u0947 \u0935\u0947\u092c \u0938\u0930\u094d\u0935\u0930 \u092f\u093e \u0938\u0930\u094d\u0935\u0930 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0915\u094b \u091a\u0932\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u092e \u0938\u0947 \u0915\u092e \u0935\u093f\u0936\u0947\u0937\u093e\u0927\u093f\u0915\u093e\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902\u0964 Apache \u0915\u0947 \u0932\u093f\u090f, \u0928\u093f\u092e\u094d\u0928\u0932\u093f\u0916\u093f\u0924 \u0915\u094b \u0905\u0915\u094d\u0937\u092e \u0915\u0930\u0947\u0902\: \u0935\u093f\u0915\u0932\u094d\u092a \u0905\u0928\u0941\u0915\u094d\u0930\u092e\u0923\u093f\u0915\u093e\u0913\u0902 FollowSymLinks AddType \u092d\u0940 \u0936\u093e\u092e\u093f\u0932 \u0939\u0948 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917/x-httpd-cgi .cgi AddType \u092a\u093e\u0920/\u090f\u0915\u094d\u0938-\u0938\u0930\u094d\u0935\u0930-\u092a\u093e\u0930\u094d\u0938-html. html
ascanrules.serversideinclude.refs=http\://www.carleton.ca/~dmcfet/html/ssi.html

ascanrules.traceaxd.name = Trace.axd Information Leak
ascanrules.traceaxd.desc = The ASP.NET Trace Viewer (trace.axd) was found to be available. This component can leak a significant amount of valuable information.
ascanrules.traceaxd.otherinfo = Based on response status code Trace Viewer may be protected by an authentication or authorization mechanism.  
ascanrules.traceaxd.refs = https\://msdn.microsoft.com/en-us/library/bb386420.aspx\n\
https\://msdn.microsoft.com/en-us/library/wwh16c6c.aspx\n\
https\://www.dotnetperls.com/trace
ascanrules.traceaxd.soln = Consider whether or not Trace Viewer is actually required in production, if it isn't then disable it. If it is then ensure access to it requires authentication and authorization.

ascanrules.useragent.name=User Agent Fuzzer
ascanrules.useragent.desc=Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.
ascanrules.useragent.refs=https\://owasp.org/wstg
ascanrules.useragent.useragentparmname=Header User-Agent

ascanrules.xsltinjection.name = XSLT Injection
ascanrules.xsltinjection.desc = Injection using XSL transformations may be possible, and may allow an attacker to read system information, read and write files, or execute arbitrary code.
ascanrules.xsltinjection.refs = https\://www.contextis.com/blog/xslt-server-side-injection-attacks
ascanrules.xsltinjection.soln = Sanitize and analyze every user input coming from any client-side.
ascanrules.xsltinjection.error.otherinfo = The response to sending an XSLT token included error messages that may indicate a vulnerability to XSLT injections.
ascanrules.xsltinjection.vendor.otherinfo = The XSLT processor vendor name "{0}" was returned after an injection request.
ascanrules.xsltinjection.portscan.otherinfo = Port scanning may be possible.
ascanrules.xsltinjection.command.otherinfo = Command execution may be possible.

ascanrules.xxe.name=XML External Entity Attack


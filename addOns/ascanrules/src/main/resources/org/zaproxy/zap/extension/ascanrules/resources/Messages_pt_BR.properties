
ascanrules.bufferoverflow.desc = Erros de estouro de Buffer s\u00e3o caracterizados pela sobrescri\u00e7\u00e3o de espa\u00e7os de mem\u00f3ria do processo web de segundo plano, o qual nunca deveria ser modificado com ou sem inten\u00e7\u00e3o. Sobrescrever valores do IP (Instruction Pointer), BP (Base Pointer) e outros registros causam exce\u00e7\u00f5es, falhas de segmenta\u00e7\u00e3o, e a ocorr\u00eancia de outros erros de processos. Normalmente esses erros finalizam a execu\u00e7\u00e3o do aplicativo de forma inesperada.
ascanrules.bufferoverflow.name = Estouro de Buffer
ascanrules.bufferoverflow.other = Potencial Estouro de Buffer. O script fechou a conex\u00e3o e lan\u00e7ou um Erro Interno de Servidor 500
ascanrules.bufferoverflow.refs = https\://owasp.org/www-community/attacks/Buffer_overflow_attack\n
ascanrules.bufferoverflow.soln = Reescreva o programa de plano de fundo utilizando o correto controle de retorno de comprimento. Isso ir\u00e1 requerer uma recompila\u00e7\u00e3o do execut\u00e1vel que roda em background.

ascanrules.cloudmetadata.desc = The Cloud Metadata Attack attempts to abuse a misconfigured NGINX server in order to access the instance metadata maintained by cloud service providers such as AWS, GCP and Azure.\nAll of these providers provide metadata via an internal unroutable IP address '169.254.169.254' - this can be exposed by incorrectly configured NGINX servers and accessed by using this IP address in the Host header field.
ascanrules.cloudmetadata.name = Metadados de nuvem potencialmente expostos
ascanrules.cloudmetadata.otherinfo = Based on the successful response status code cloud metadata may have been returned in the response. Check the response data to see if any cloud metadata has been returned.\nThe meta data returned can include information that would allow an attacker to completely compromise the system.
ascanrules.cloudmetadata.refs = https\://www.nginx.com/blog/trust-no-one-perils-of-trusting-user-input/
ascanrules.cloudmetadata.soln = N\u00e3o confie em nenhum dado do usu\u00e1rio nas configura\u00e7\u00f5es NGINX. Neste caso, \u00e9 provavelmente o uso da vari\u00e1vel $ host, que \u00e9 definida no cabe\u00e7alho 'Host' e pode ser controlada por um invasor.

ascanrules.codeinjection.desc = Uma inje\u00e7\u00e3o de c\u00f3digo pode ser poss\u00edvel incluindo um c\u00f3digo personalizado que ser\u00e1 avaliado pelo mecanismo de script
ascanrules.codeinjection.name = Inje\u00e7\u00e3o de C\u00f3digo no Lado do Servidor
ascanrules.codeinjection.name.asp = Inje\u00e7\u00e3o de C\u00f3digo no Lado do Servidor - Inje\u00e7\u00e3o de C\u00f3digo ASP
ascanrules.codeinjection.name.php = Inje\u00e7\u00e3o de C\u00f3digo no Lado do Servidor - Inje\u00e7\u00e3o de C\u00f3digo PHP
ascanrules.codeinjection.refs = https\://cwe.mitre.org/data/definitions/94.html\nhttps\://owasp.org/www-community/attacks/Direct_Dynamic_Code_Evaluation_Eval%20Injection
ascanrules.codeinjection.soln = N\u00e3o confie na entrada do lado do cliente, mesmo se existir uma valida\u00e7\u00e3o no lado cliente.\nEm geral, verifique o tipo de dados no lado do servidor e evite todos os dados recebidos do cliente.\n Evite o uso de fun\u00e7\u00f5es eval() combinadas com dados de entrada de usu\u00e1rios.

ascanrules.commandinjection.desc = T\u00e9cnica de ataque usada para execu\u00e7\u00e3o n\u00e3o autorizada de comandos do sistema operacional. Esse ataque \u00e9 poss\u00edvel quando um aplicativo aceita entrada n\u00e3o confi\u00e1vel para criar comandos do sistema operacional de maneira insegura, envolvendo sanitiza\u00e7\u00e3o inadequada de dados e chamada inadequada de programas externos.
ascanrules.commandinjection.name = Inje\u00e7\u00e3o Remota de Comandos de SO
ascanrules.commandinjection.otherinfo.feedback-based = The scan rule was able to retrieve the content of a file or command by sending [{0}] to the operating system running this application
ascanrules.commandinjection.otherinfo.time-based = The scan rule was able to control the timing of the application response by sending [{0}] to the operating system running this application
ascanrules.commandinjection.refs = https\://cwe.mitre.org/data/definitions/78.html\nhttps\://owasp.org/www-community/attacks/Command_Injection

ascanrules.crlfinjection.desc = O cookie pode ser definido por meio de inje\u00e7\u00e3o CRLF. Tamb\u00e9m pode ser poss\u00edvel definir cabe\u00e7alhos de resposta HTTP arbitr\u00e1rios. Al\u00e9m disso, ao criar cuidadosamente a resposta injetada usando script de site cruzado, tamb\u00e9m pode existir vulnerabilidade de envenenamento de cache.
ascanrules.crlfinjection.name = Inje\u00e7\u00e3o CRLF
ascanrules.crlfinjection.refs = https\://owasp.org/www-community/vulnerabilities/CRLF_Injection\nhttps\://cwe.mitre.org/data/definitions/113.html
ascanrules.crlfinjection.soln = Type check the submitted parameter carefully. Do not allow CRLF to be injected by filtering CRLF.

ascanrules.crosssitescripting.json.desc = Um ataque XSS foi refletido em uma resposta JSON, isso pode deixar os consumidores de conte\u00fado vulner\u00e1veis a ataques se eles n\u00e3o manipularem os dados (resposta) de forma adequada.
ascanrules.crosssitescripting.json.name = Fraqueza de script entre sites (refletida na resposta JSON)
ascanrules.crosssitescripting.name = Cross Site Scripting (Refletido)
ascanrules.crosssitescripting.otherinfo.accesskey = The accesskey attribute specifies a shortcut key to activate/focus an element. This attribute can trigger payloads for non-conventional or custom tags.
ascanrules.crosssitescripting.otherinfo.nothtml = Gerado com BAIXA confian\u00e7a, pois o Tipo de conte\u00fado n\u00e3o \u00e9 HTML

ascanrules.desc = Release status active scan rules

ascanrules.directorybrowsing.desc = \u00c9 poss\u00edvel visualizar a lista de diret\u00f3rios. A listagem de diret\u00f3rios pode revelar scripts ocultos, incluir arquivos, arquivos de origem de backup, etc., que podem ser acessados para ler informa\u00e7\u00f5es confidenciais.
ascanrules.directorybrowsing.name = Navega\u00e7\u00e3o no Diret\u00f3rio
ascanrules.directorybrowsing.refs = https\://httpd.apache.org/docs/mod/core.html\#options
ascanrules.directorybrowsing.soln = Desative a navega\u00e7\u00e3o no diret\u00f3rio. Se isso for necess\u00e1rio, certifique-se de que os arquivos listados n\u00e3o causem riscos.

ascanrules.elmah.desc = O m\u00f3dulo HTTP Error Logging Modules and Handlers (ELMAH [elmah.axd]) foi encontrado como dispon\u00edvel. Esse m\u00f3dulo pode vazar uma quantidade significativa de informa\u00e7\u00f5es valiosas.
ascanrules.elmah.name = Vazamento de Informa\u00e7\u00e3o ELMAH
ascanrules.elmah.otherinfo = Baseado na resposta o c\u00f3digo de status ELMAH pode ser protegido por um mecanismo de autentica\u00e7\u00e3o ou autoriza\u00e7\u00e3o.  
ascanrules.elmah.refs = https\://www.troyhunt.com/aspnet-session-hijacking-with-google/ \nhttps\://www.nuget.org/packages/elmah \nhttps\://elmah.github.io/
ascanrules.elmah.soln = Considere se o ELMAH \u00e9 necess\u00e1rio ou n\u00e3o na produ\u00e7\u00e3o, se n\u00e3o for ent\u00e3o desative-o. Se for, ent\u00e3o garanta que o acesso a ele necessite de autentica\u00e7\u00e3o e autoriza\u00e7\u00e3o. Veja tamb\u00e9m\: https\://elmah.github.io/a/securing-error-log-pages/

ascanrules.envfiles.desc = One or more .env files seems to have been located on the server. These files often expose infrastructure or administrative account credentials, API or APP keys, or other sensitive configuration information. 
ascanrules.envfiles.name = .env Information Leak
ascanrules.envfiles.otherinfo = Based on response status code the .env file may be protected by an authentication or authorization mechanism.
ascanrules.envfiles.refs = https\://www.google.com/search?q\=db_password+filetype%3Aenv\nhttps\://mobile.twitter.com/svblxyz/status/1045013939904532482
ascanrules.envfiles.soln = Ensure the .env file is not accessible.

ascanrules.externalredirect.name = Redirecionamento Externo
ascanrules.externalredirect.reason.javascript = A resposta cont\u00e9m um redirecionamento em seu c\u00f3digo JavaScript que permite que um URL externo seja definido.
ascanrules.externalredirect.reason.location.header = A resposta cont\u00e9m um redirecionamento em seu cabe\u00e7alho Localiza\u00e7\u00e3o que permite que um URL externo seja definido.
ascanrules.externalredirect.reason.location.meta = A resposta cont\u00e9m um redirecionamento em sua meta tag http-equiv para 'Local', que permite que um URL externo seja definido.
ascanrules.externalredirect.reason.notfound = Nenhum motivo encontrado para isso...
ascanrules.externalredirect.reason.refresh.header = A resposta cont\u00e9m um redirecionamento em seu cabe\u00e7alho Atualizar que permite que um URL externo seja definido.
ascanrules.externalredirect.reason.refresh.meta = A resposta cont\u00e9m um redirecionamento em sua meta tag http-equiv para 'Atualizar', que permite que um URL externo seja definido.

ascanrules.formatstring.desc = Um erro de Formato de String ocorre quando o dado enviado de uma string de entrada \u00e9 avaliado como um comando pelo aplicativo. 
ascanrules.formatstring.error1 = Poss\u00edvel Erro de Formato de String. O script fechou a conex\u00e3o em /%s
ascanrules.formatstring.error2 = Poss\u00edvel Erro de Formato de String. O script fechou a conex\u00e3o entre /%s e /%x
ascanrules.formatstring.error3 = Poss\u00edvel Erro de Formato de String. O script fechou a conex\u00e3o devido a um erro de formato de string da Microsoft
ascanrules.formatstring.name = Erro de Formato de String
ascanrules.formatstring.refs = https\://owasp.org/www-community/attacks/Format_string_attack\n
ascanrules.formatstring.soln = Reescreva o programa de plano de fundo utilizando o apagamento apropriado das bad character strings. Isso ir\u00e1 requerer uma recompila\u00e7\u00e3o do execut\u00e1vel do plano de fundo.

ascanrules.getforpost.desc = A request that was originally observed as a POST was also accepted as a GET. This issue does not represent a security weakness unto itself, however, it may facilitate simplification of other attacks. For example if the original POST is subject to Cross-Site Scripting (XSS), then this finding may indicate that a simplified (GET based) XSS may also be possible.
ascanrules.getforpost.name = GET for POST
ascanrules.getforpost.soln = Ensure that only POST is accepted where POST is expected.

ascanrules.heartbleed.desc = A implementa\u00e7\u00e3o de TLS no OpenSSL 1.0.1 antes do 1.0.1g n\u00e3o lida adequadamente com pacotes Heartbeat Extension, o que permite que invasores remotos obtenham informa\u00e7\u00f5es confidenciais da mem\u00f3ria do processo por meio de pacotes criados que acionam uma sobre-leitura de buffer, potencialmente revelando informa\u00e7\u00f5es confidenciais.
ascanrules.heartbleed.extrainfo = Esse problema foi confirmado exfiltrando dados do servidor, usando {0}. \u00c9 improv\u00e1vel que seja um falso positivo.
ascanrules.heartbleed.name = Vulnerabilidade OpenSSL Heartbleed
ascanrules.heartbleed.refs = https\://nvd.nist.gov/vuln/detail/CVE-2014-0160
ascanrules.heartbleed.soln = Atualize para OpenSSL 1.0.1g ou posterior. Emita novamente os certificados HTTPS. Altere as chaves privadas assim\u00e9tricas e as chaves secretas compartilhadas, uma vez que podem ter sido comprometidas, sem evid\u00eancias de comprometimento nos arquivos de log do servidor.

ascanrules.hidden.files.alert.name = Hidden File Found
ascanrules.hidden.files.desc = A sensitive file was identified as accessible or available. This may leak administrative, configuration, or credential information which can be leveraged by a malicious individual to further attack the system or conduct social engineering efforts.
ascanrules.hidden.files.name = Hidden File Finder
ascanrules.hidden.files.refs = https\://blog.hboeck.de/archives/892-Introducing-Snallygaster-a-Tool-to-Scan-for-Secrets-on-Web-Servers.html
ascanrules.hidden.files.soln = Consider whether or not the component is actually required in production, if it isn't then disable it. If it is then ensure access to it requires appropriate authentication and authorization, or limit exposure to internal systems or specific source IPs, etc.

ascanrules.htaccess.desc = Os arquivos htaccess podem ser usados para alterar a configura\u00e7\u00e3o do software Apache Web Servidor para habilitar/desabilitar funcionalidades e recursos adicionais que o software Apache Web Servidor tem a oferecer.
ascanrules.htaccess.name = Vazamento de informa\u00e7\u00f5es .htaccess
ascanrules.htaccess.otherinfo = Com base no c\u00f3digo de status de resposta, o arquivo htaccess pode ser protegido por um mecanismo de autentica\u00e7\u00e3o ou autoriza\u00e7\u00e3o.
ascanrules.htaccess.refs = https\://developer.mozilla.org/en-US/docs/Learn/Server-side/Apache_Configuration_htaccess\nhttps\://httpd.apache.org/docs/2.4/howto/htaccess.html
ascanrules.htaccess.soln = Certifique-se de que o arquivo .htaccess n\u00e3o esteja acess\u00edvel.

ascanrules.log4shell.cve44228.desc = Apache Log4j2 <\=2.14.1 JNDI features used in configuration, log messages, and parameters do not protect against attacker controlled LDAP and other JNDI related endpoints. An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled. From log4j 2.15.0, this behavior has been disabled by default.
ascanrules.log4shell.cve44228.name = Log4Shell (CVE-2021-44228)
ascanrules.log4shell.cve44228.refs = https\://www.lunasec.io/docs/blog/log4j-zero-day/\nhttps\://nvd.nist.gov/vuln/detail/CVE-2021-44228
ascanrules.log4shell.cve44228.soln = Upgrade Log4j2 to version 2.17.1 or newer. In previous releases (>2.10) this behavior can be mitigated by setting system property "log4j2.formatMsgNoLookups" to "true" or by removing the JndiLookup class from the classpath (example\: zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class). Java 8u121 (see https\://www.oracle.com/java/technologies/javase/8u121-relnotes.html) protects against remote code execution by defaulting "com.sun.jndi.rmi.object.trustURLCodebase" and "com.sun.jndi.cosnaming.object.trustURLCodebase" to "false".
ascanrules.log4shell.cve45046.desc = It was found that the fix to address CVE-2021-44228 in Apache Log4j 2.15.0 was incomplete in certain non-default configurations. This could allow attackers to craft malicious input data using a JNDI Lookup pattern resulting in an information leak and remote code execution in some environments.
ascanrules.log4shell.cve45046.name = Log4Shell (CVE-2021-45046)
ascanrules.log4shell.cve45046.refs = https\://www.lunasec.io/docs/blog/log4j-zero-day/\nhttps\://nvd.nist.gov/vuln/detail/CVE-2021-45046
ascanrules.log4shell.cve45046.soln = Upgrade Log4j2 to version 2.17.1 or newer.
ascanrules.log4shell.name = Log4Shell
ascanrules.log4shell.skipped = no Active Scan OAST service is selected.

ascanrules.name = Active Scan Rules

ascanrules.paddingoracle.desc = By manipulating the padding on an encrypted string, an attacker is able to generate an error message that indicates a likely 'padding oracle' vulnerability. Such a vulnerability can affect any application or framework that uses encryption improperly, such as some versions of ASP.net, Java Server Faces, and Mono. An attacker may exploit this issue to decrypt data and recover encryption keys, potentially viewing and modifying confidential data. This rule should detect the MS10-070 padding oracle vulnerability in ASP.net if CustomErrors are enabled for that.
ascanrules.paddingoracle.name = Oracle Padding Gen\u00e9rico
ascanrules.paddingoracle.refs = https\://learn.microsoft.com/en-us/security-updates/securitybulletins/2010/ms10-070\nhttps\://www.mono-project.com/docs/about-mono/vulnerabilities/\nhttps\://bugzilla.redhat.com/show_bug.cgi?id\=623799
ascanrules.paddingoracle.soln = Atualize o software do servidor afetado ou modifique os scripts para que validem corretamente os dados criptografados antes de tentar a descriptografia.

ascanrules.parametertamper.desc = A manipula\u00e7\u00e3o de par\u00e2metros causou a exibi\u00e7\u00e3o de uma p\u00e1gina de erro ou rastreamento de pilha Java. Isso indicou a falta de tratamento de exce\u00e7\u00f5es e \u00e1reas potenciais para explora\u00e7\u00e3o posterior.
ascanrules.parametertamper.name = Adultera\u00e7\u00e3o de par\u00e2metros
ascanrules.parametertamper.soln = Identifique a causa do erro e corrija. N\u00e3o confie na entrada do lado do cliente e aplique uma verifica\u00e7\u00e3o rigorosa no lado do servidor. Al\u00e9m disso, capture a exce\u00e7\u00e3o corretamente. Use uma p\u00e1gina de erro 500 gen\u00e9rica para erro interno do servidor.

ascanrules.pathtraversal.name = Travessia/Passagem de Caminho

ascanrules.payloader.desc = Provides support for custom payloads in scan rules.
ascanrules.payloader.name = Active Scan Rules Custom Payloads

ascanrules.persistentxssattack.json.desc = Um ataque XSS foi encontrado em uma resposta JSON, isso pode deixar os consumidores de conte\u00fado vulner\u00e1veis a ataques se eles n\u00e3o manipularem os dados (resposta) de forma adequada.
ascanrules.persistentxssattack.json.name = Fraqueza de script entre sites (persistente na resposta JSON)
ascanrules.persistentxssattack.name = Cross Site Scripting (Persistente)
ascanrules.persistentxssattack.otherinfo = URL de Origem\: {0}
ascanrules.persistentxssattack.otherinfo.nothtml = Gerado com BAIXA confian\u00e7a, pois o Tipo de conte\u00fado n\u00e3o \u00e9 HTML

ascanrules.persistentxssprime.name = Cross Site Scripting (Persistente) - Prim\u00e1rio

ascanrules.persistentxssspider.name = Cross Site Scripting (Persistente) - Spider

ascanrules.remotecodeexecution.cve-2012-1823.desc = Algumas vers\u00f5es do PHP, quando configuradas para serem executadas usando CGI, n\u00e3o lidam corretamente com strings de consulta que n\u00e3o possuem um caractere "\=" sem escape, permitindo a execu\u00e7\u00e3o arbitr\u00e1ria de c\u00f3digo. Nesse caso, um comando do sistema operacional foi executado no servidor web e os resultados foram retornados ao navegador da web. 
ascanrules.remotecodeexecution.cve-2012-1823.name = Execu\u00e7\u00e3o Remota de C\u00f3digo - CVE-2012-1823
ascanrules.remotecodeexecution.cve-2012-1823.soln = Atualize para a \u00faltima vers\u00e3o est\u00e1vel do PHP ou use o servidor web Apache e o m\u00f3dulo mod_rewrite para filtrar solicita\u00e7\u00f5es maliciosas usando as diretivas "RewriteCond" e "RewriteRule".

ascanrules.remotefileinclude.name = Inclus\u00e3o de Arquivo Remoto

ascanrules.serversideinclude.desc = Certos par\u00e2metros podem fazer com que os comandos de inclus\u00e3o do lado do servidor sejam executados. Isso pode permitir a execu\u00e7\u00e3o de uma conex\u00e3o de banco de dados ou de um c\u00f3digo arbitr\u00e1rio.
ascanrules.serversideinclude.name = Incluir Lado do Servidor
ascanrules.serversideinclude.refs = https\://httpd.apache.org/docs/current/howto/ssi.html
ascanrules.serversideinclude.soln = Do not trust client side input and enforce a tight check in the server side. Disable server side includes.\nRefer to manual to disable Sever Side Include.\nUse least privilege to run your web server or application server.\nFor Apache, disable the following\:\nOptions Indexes FollowSymLinks Includes\nAddType application/x-httpd-cgi .cgi\nAddType text/x-server-parsed-html .html

ascanrules.sourcecodedisclosurecve-2012-1823.desc = Algumas vers\u00f5es do PHP, quando configuradas para serem executadas usando CGI, n\u00e3o manipulam corretamente as strings de consulta que n\u00e3o possuem um caractere "\=" sem escape, permitindo a divulga\u00e7\u00e3o do c\u00f3digo-fonte PHP e a execu\u00e7\u00e3o arbitr\u00e1ria do c\u00f3digo. Neste caso, o conte\u00fado do arquivo PHP foi servido diretamente para o navegador da web. Essa sa\u00edda normalmente conter\u00e1 PHP, embora tamb\u00e9m possa conter HTML direto.
ascanrules.sourcecodedisclosurecve-2012-1823.name = Divulga\u00e7\u00e3o de C\u00f3digo-Fonte - CVE-2012-1823
ascanrules.sourcecodedisclosurecve-2012-1823.soln = Atualize para a \u00faltima vers\u00e3o est\u00e1vel do PHP ou use o servidor web Apache e o m\u00f3dulo mod_rewrite para filtrar solicita\u00e7\u00f5es maliciosas usando as diretivas "RewriteCond" e "RewriteRule".

ascanrules.sourcecodedisclosurewebinf.desc = O c\u00f3digo-fonte Java foi divulgado pelo servidor web em arquivos de classe Java na pasta WEB-INF. Os arquivos de classe podem ser desmontados para produzir c\u00f3digo-fonte que corresponda muito de perto ao c\u00f3digo-fonte original.  
ascanrules.sourcecodedisclosurewebinf.name = Source Code Disclosure - /WEB-INF Folder
ascanrules.sourcecodedisclosurewebinf.propertiesfile.desc = Uma classe Java na pasta /WEB-INF revelou a presen\u00e7a de um arquivo de propriedades. O arquivo de propriedades n\u00e3o se destina a ser acessado publicamente e geralmente cont\u00e9m informa\u00e7\u00f5es de configura\u00e7\u00e3o, credenciais de aplicativo ou chaves criptogr\u00e1ficas.   
ascanrules.sourcecodedisclosurewebinf.propertiesfile.extrainfo = A refer\u00eancia ao arquivo de propriedades foi encontrada no c\u00f3digo-fonte Java disassemblado para a classe Java [{0}].
ascanrules.sourcecodedisclosurewebinf.propertiesfile.name = Divulga\u00e7\u00e3o de Arquivo de Propriedades - Pasta /WEB-INF
ascanrules.sourcecodedisclosurewebinf.propertiesfile.soln = O servidor web deve ser configurado para n\u00e3o servir a pasta /WEB-INF ou seu conte\u00fado para navegadores web. Tamb\u00e9m pode ser poss\u00edvel remover a pasta /WEB-INF.  
ascanrules.sourcecodedisclosurewebinf.soln = O servidor web deve ser configurado para n\u00e3o servir a pasta /WEB-INF ou seu conte\u00fado para navegadores web, uma vez que cont\u00e9m informa\u00e7\u00f5es confidenciais, como c\u00f3digo-fonte Java compilado e arquivos de propriedades que podem conter credenciais. As classes Java implantadas com o aplicativo devem ser ofuscadas, como uma camada adicional de defesa em uma abordagem de "defesa em profundidade".

ascanrules.spring4shell.desc = The application appears to be vulnerable to CVE-2022-22965 (otherwise known as Spring4Shell) - remote code execution (RCE) via data binding.
ascanrules.spring4shell.name = Spring4Shell
ascanrules.spring4shell.refs = https\://nvd.nist.gov/vuln/detail/CVE-2022-22965\nhttps\://www.rapid7.com/blog/post/2022/03/30/spring4shell-zero-day-vulnerability-in-spring-framework/\nhttps\://spring.io/blog/2022/03/31/spring-framework-rce-early-announcement\#vulnerability\nhttps\://tanzu.vmware.com/security/cve-2022-22965
ascanrules.spring4shell.soln = Upgrade Spring Framework to versions 5.3.18, 5.2.20, or newer.

ascanrules.springactuator.desc = Spring Actuator for Health is enabled and may reveal sensitive information about this application. Spring Actuators can be used for real monitoring purposes, but should be used with caution as to not expose too much information about the application or the infrastructure running it.
ascanrules.springactuator.name = Spring Actuator Information Leak
ascanrules.springactuator.refs = https\://docs.spring.io/spring-boot/docs/current/actuator-api/htmlsingle/\#overview
ascanrules.springactuator.soln = Disable the Health Actuators and other actuators, or restrict them to administrative users.

#ascanrules.sqlinjection.alert.errorbased.attack={1}
ascanrules.sqlinjection.alert.booleanbased.attack = campo\: [{0}], valor [{1}]
ascanrules.sqlinjection.alert.booleanbased.extrainfo = The page results were successfully manipulated using the boolean conditions [{0}] and [{1}]\nThe parameter value being modified was {2}stripped from the HTML output for the purposes of the comparison
ascanrules.sqlinjection.alert.booleanbased.extrainfo.dataexists = Os dados foram retornados para o par\u00e2metro original.\nA vulnerabilidade foi detectada ao restringir com sucesso os dados originalmente retornados, manipulando o par\u00e2metro
ascanrules.sqlinjection.alert.booleanbased.extrainfo.datanotexists = Os dados N\u00c3O foram retornados para o par\u00e2metro original.\nA vulnerabilidade foi detectada ao recuperar com sucesso mais dados do que os originalmente retornados, manipulando o par\u00e2metro
ascanrules.sqlinjection.alert.errorbased.attack = [{0}] field\: [{1}], value [{2}]
ascanrules.sqlinjection.alert.errorbased.differentiation.attack = Valor Original\: [{0}]. Valor Modificado\: [{1}]. Valor de Controle\: [{2}]
ascanrules.sqlinjection.alert.errorbased.differentiation.extrainfo = Mensagem n\u00e3o modificada fornece status HTTP [{0}], comprimento do corpo [{1}], mensagem modificada fornece status HTTP [{2}], comprimento do corpo [{3}]. Um terceiro (valor que n\u00e3o induz a inje\u00e7\u00e3o SQL) fornece status HTTP [{4}], comprimento do corpo [{5}]
ascanrules.sqlinjection.alert.errorbased.extrainfo = RDBMS [{0}] likely, given error message regular expression [{1}] matched by the HTML results.\nThe vulnerability was detected by manipulating the parameter to cause a database error message to be returned and recognised
ascanrules.sqlinjection.alert.errorbased.httpstatuscode.extrainfo = Mensagem n\u00e3o modificada fornece status HTTP [{0}], Mensagem modificada fornece status HTTP [{1}]
ascanrules.sqlinjection.alert.expressionbased.extrainfo = Os resultados da p\u00e1gina original foram replicados com sucesso usando a express\u00e3o [{0}] como o valor do par\u00e2metro\nO valor do par\u00e2metro sendo modificado foi {1} retirado da sa\u00edda HTML para fins de compara\u00e7\u00e3o
ascanrules.sqlinjection.alert.orderbybased.extrainfo = Os resultados da p\u00e1gina original foram replicados com sucesso usando a express\u00e3o "ORDENAR POR" [{0}] como o valor do par\u00e2metro\nO valor do par\u00e2metro sendo modificado foi {1} retirado da sa\u00edda HTML para fins de compara\u00e7\u00e3o
ascanrules.sqlinjection.alert.timebased.extrainfo = O tempo da query \u00e9 control\u00e1vel utilizando o valor do par\u00e2metro [{0}], o qual causou a requisi\u00e7\u00e3o a levar [{1}] milissegundos, enquanto o valor original da query sem modifica\u00e7\u00e3o com o valor [{2}] levou [{3}] milissegundos
ascanrules.sqlinjection.alert.unionbased.attack = [{0}] field\: [{1}], value [{2}]
ascanrules.sqlinjection.alert.unionbased.extrainfo = RDBMS [{0}] likely, given UNION-specific error message regular expression [{1}] matched by the HTML results\nThe vulnerability was detected by manipulating the parameter with an SQL ''UNION'' clause to cause a database error message to be returned and recognised
ascanrules.sqlinjection.authbypass.desc = SQL injection may be possible on a login page, potentially allowing the application's authentication mechanism to be bypassed
ascanrules.sqlinjection.authbypass.name = Inje\u00e7\u00e3o SQL - Desvio de Autentica\u00e7\u00e3o
ascanrules.sqlinjection.desc = SQL injection may be possible.
ascanrules.sqlinjection.hypersonic.name = Inje\u00e7\u00e3o SQL - Hypersonic SQL
ascanrules.sqlinjection.mssql.alert.timebased.extrainfo = The query time is controllable using parameter value [{0}], which caused the request to take [{1}] milliseconds, when the original unmodified query with value [{2}] took [{3}] milliseconds.
ascanrules.sqlinjection.mssql.name = Inje\u00e7\u00e3o SQL - MsSQL
ascanrules.sqlinjection.mysql.name = Inje\u00e7\u00e3o SQL - MySQL
ascanrules.sqlinjection.name = Inje\u00e7\u00e3o SQL
ascanrules.sqlinjection.oracle.name = Inje\u00e7\u00e3o SQL - Oracle
ascanrules.sqlinjection.postgres.name = Inje\u00e7\u00e3o SQL - PostgreSQL
ascanrules.sqlinjection.refs = https\://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html
ascanrules.sqlinjection.soln = Do not trust client side input, even if there is client side validation in place.\nIn general, type check all data on the server side.\nIf the application uses JDBC, use PreparedStatement or CallableStatement, with parameters passed by '?'\nIf the application uses ASP, use ADO Command Objects with strong type checking and parameterized queries.\nIf database Stored Procedures can be used, use them.\nDo *not* concatenate strings into queries in the stored procedure, or use 'exec', 'exec immediate', or equivalent functionality\!\nDo not create dynamic SQL queries using simple string concatenation.\nEscape all data received from the client.\nApply an 'allow list' of allowed characters, or a 'deny list' of disallowed characters in user input.\nApply the principle of least privilege by using the least privileged database user possible.\nIn particular, avoid using the 'sa' or 'db-owner' database users. This does not eliminate SQL injection, but minimizes its impact.\nGrant the minimum database access that is necessary for the application.
ascanrules.sqlinjection.sqlite.alert.errorbased.extrainfo = The following known SQLite error message was provoked\: [{0}].
ascanrules.sqlinjection.sqlite.alert.timebased.extrainfo = The query time is controllable using parameter value [{0}], which caused the request to take [{1}] milliseconds, parameter value [{2}], which caused the request to take [{3}] milliseconds, when the original unmodified query with value [{4}] took [{5}] milliseconds.
ascanrules.sqlinjection.sqlite.alert.versionnumber.extrainfo = Using a UNION based SQL Injection attack, and by exploiting SQLite''s dynamic typing mechanism, the SQLite version was determined to be [{0}].\nWith string-based injection points, full SQLite version information can be extracted, but with numeric injection points, only partial SQLite version information can be extracted.\nMore information on SQLite version [{0}] is available at https\://www.sqlite.org/changes.html
ascanrules.sqlinjection.sqlite.name = Inje\u00e7\u00e3o SQL - SQLite

ascanrules.ssti.alert.otherinfo = Proof found at [{0}] \ncontent\:\n[{1}]
ascanrules.ssti.desc = When the user input is inserted in the template instead of being used as argument in rendering is evaluated by the template engine. Depending on the template engine it can lead to remote code execution.
ascanrules.ssti.name = Server Side Template Injection
ascanrules.ssti.refs = https\://portswigger.net/blog/server-side-template-injection
ascanrules.ssti.soln = Instead of inserting the user input in the template, use it as rendering argument.

ascanrules.sstiblind.alert.recvdcallback.otherinfo = Received callback from the server.
ascanrules.sstiblind.desc = When the user input is inserted in the template instead of being used as argument in rendering is evaluated by the template engine. Depending on the template engine it can lead to remote code execution.
ascanrules.sstiblind.name = Server Side Template Injection (Blind)
ascanrules.sstiblind.refs = https\://portswigger.net/blog/server-side-template-injection
ascanrules.sstiblind.soln = Instead of inserting the user input in the template, use it as rendering argument.

ascanrules.traceaxd.desc = The ASP.NET Trace Viewer (trace.axd) was found to be available. This component can leak a significant amount of valuable information.
ascanrules.traceaxd.name = Trace.axd Vazamento de Informa\u00e7\u00e3o
ascanrules.traceaxd.otherinfo = Based on response status code Trace Viewer may be protected by an authentication or authorization mechanism.  
ascanrules.traceaxd.refs = https\://msdn.microsoft.com/en-us/library/bb386420.aspx\nhttps\://msdn.microsoft.com/en-us/library/wwh16c6c.aspx\nhttps\://www.dotnetperls.com/trace
ascanrules.traceaxd.soln = Consider whether or not Trace Viewer is actually required in production, if it isn't then disable it. If it is then ensure access to it requires authentication and authorization.

ascanrules.useragent.desc = Check for differences in response based on fuzzed User Agent (eg. mobile sites, access as a Search Engine Crawler). Compares the response statuscode and the hashcode of the response body with the original response.
ascanrules.useragent.name = User Agent Fuzzer
ascanrules.useragent.refs = https\://owasp.org/wstg
ascanrules.useragent.useragentparmname = Cabe\u00e7alho do Agente de Usu\u00e1rio

ascanrules.xpathinjection.name = Inje\u00e7\u00e3o XPath

ascanrules.xsltinjection.command.otherinfo = Command execution may be possible.
ascanrules.xsltinjection.desc = Injection using XSL transformations may be possible, and may allow an attacker to read system information, read and write files, or execute arbitrary code.
ascanrules.xsltinjection.error.otherinfo = The response to sending an XSLT token included error messages that may indicate a vulnerability to XSLT injections.
ascanrules.xsltinjection.name = Inje\u00e7\u00e3o XSLT
ascanrules.xsltinjection.portscan.otherinfo = Port scanning may be possible.
ascanrules.xsltinjection.refs = https\://www.contextis.com/blog/xslt-server-side-injection-attacks
ascanrules.xsltinjection.soln = Sanitize and analyze every user input coming from any client-side.
ascanrules.xsltinjection.vendor.otherinfo = The XSLT processor vendor name "{0}" was returned after an injection request.

ascanrules.xxe.name = XML External Entity Attack

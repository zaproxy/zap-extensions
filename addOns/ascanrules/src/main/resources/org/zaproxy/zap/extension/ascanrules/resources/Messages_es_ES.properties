ascanrules.desc = Liberar el estado de las reglas activas de escaneo
ascanrules.name = Reglas de Escaneo Activas

ascanrules.bufferoverflow.name = Buffer Overflow
ascanrules.bufferoverflow.desc = Los errores de Buffer Overflow se caracterizan por la sobrescritura de espacios de memoria del proceso web en segundo plano, que no deber\u00edan haber sido modificados, intencionadamente o no. Sobrescribir los valores de IP (Instruction Pointer), BP (Base Pointer) y otros registros causan excepciones, violaciones del segmento y otros errores. Normalmente estos errores terminan la ejecuci\u00f3n de la aplicaci\u00f3n de manera inseperada. 
ascanrules.bufferoverflow.soln = Reescribir el programa en segundo plano realizando una correcta comprobaci\u00f3n de la longitud de retorno. Esto requerir\u00e1 el recompilado del ejecutable en segundo plano.
ascanrules.bufferoverflow.refs = https\://owasp.org/www-community/attacks/Buffer_overflow_attack
ascanrules.bufferoverflow.other = Potencial desbordamiento de buffer. El script ha cerrado la conexi\u00f3n y ha lanzado un error interno del servidor 500

ascanrules.cloudmetadata.name = Metadatos de la nube potencialmente expuestos
ascanrules.cloudmetadata.desc = Un Ataque de Metadatos en la Nube intenta abusar de un servidor NGINX mal configurado para acceder a los metadatos de la instancia que mantienen proveedores de servicios en la nube, como AWS, GCP y Azure.\n\
\n\
Todos estos proveedores proporcionan metadatos a trav\u00e9s de una direcci\u00f3n IP interna no enrutable '169.254.169.254'; estos pueden ser expuestos por servidores NGINX mal configurados al acceder a ellos poniendo esa direcci\u00f3n IP en el campo de encabezado Host.
ascanrules.cloudmetadata.otherinfo = Seg\u00fan el c\u00f3digo de estado de respuesta correcto, es posible que se hayan devuelto metadatos de la nube en la respuesta. Verifique los datos de respuesta para ver si se han devuelto metadatos de la nube.\n\
\n\
Los metadatos devueltos pueden incluir informaci\u00f3n que permitir\u00eda a un atacante comprometer completamente el sistema.
ascanrules.cloudmetadata.refs = https\://www.nginx.com/blog/trust-no-one-perils-of-trusting-user-input/
ascanrules.cloudmetadata.soln = No conf\u00ede en ning\u00fan dato de usuario en las configuraciones de NGINX. En este caso, probablemente sea el uso de la variable $host que se establece desde el encabezado 'Host' y puede estar controlado por un atacante.

ascanrules.commandinjection.name=Inyecci\u00f3n Remota de Comandos del Sistema Operativo
ascanrules.commandinjection.desc=T\u00e9cnica de ataque utilizada para la ejecuci\u00f3n no autorizada de comandos del sistema operativo. Este ataque es posible cuando una aplicaci\u00f3n acepta datos de entrada que no son de confianza para crear comandos del sistema operativo de manera insegura, lo que implica que tiene un filtro de datos inadecuado y/o una llamada incorrecta de programas externos.
ascanrules.commandinjection.refs=http\://cwe.mitre.org/data/definitions/78.html\n\
https\://owasp.org/www-community/attacks/Command_Injection
ascanrules.commandinjection.otherinfo.feedback-based=La regla de escaneo pudo recuperar el contenido de un archivo o comando enviando [{0}] al sistema operativo que ejecuta esta aplicaci\u00f3n
ascanrules.commandinjection.otherinfo.time-based=La regla de escaneo pudo controlar el tiempo de respuesta de la aplicaci\u00f3n enviando [{0}] al sistema operativo que ejecuta esta aplicaci\u00f3n

ascanrules.elmah.name = Fuga de informaci\u00f3n ELMAH
ascanrules.elmah.desc = El Error Logging Modules and Handlers (ELMAH [elmah.axd]) M\u00f3dulo HTTP fue encontrado disponible. Este modulo puede tener fugas de una cantidad importante de informaci\u00f3n valiosa.
ascanrules.elmah.otherinfo = Basado en el c\u00f3digo de estado de respuesta ELMAH podr\u00eda estar protegida por un mecanismo de autenticaci\u00f3n o autorizaci\u00f3n.  
ascanrules.elmah.refs = https\://www.troyhunt.com/aspnet-session-hijacking-with-google/\n\
https\://www.nuget.org/packages/elmah\n\
https\://elmah.github.io/
ascanrules.elmah.soln = Considere si o no ELMAH es actualmente requerido en la producci\u00f3n, si no es as\u00ed entonces deshabilitarlo. Si s\u00ed es entonces asegurar el acceso a el requiere autenticaci\u00f3n y autorizaci\u00f3n. Vea tambi\u00e9n\: https\://elmah.github.io/a/securing-error-log-pages/

ascanrules.envfiles.name = Fuga de informaci\u00f3n .env
ascanrules.envfiles.desc = Parece que se han ubicado uno o m\u00e1s archivos .env en el servidor. Estos archivos a menudo exponen credenciales de cuentas administrativas o de infraestructura, claves de API o APP u otra informaci\u00f3n de configuraci\u00f3n confidencial. 
ascanrules.envfiles.otherinfo = Seg\u00fan el c\u00f3digo de estado de respuesta, el archivo .env puede estar protegido por un mecanismo de autenticaci\u00f3n o autorizaci\u00f3n.
ascanrules.envfiles.refs = https\://www.google.com/search?q\=db_password+filetype%3Aenv\n\
https\://mobile.twitter.com/svblxyz/status/1045013939904532482
ascanrules.envfiles.soln = Aseg\u00farate de que el archivo .env no sea accesible.

ascanrules.formatstring.name=Error de formato de cadena
ascanrules.formatstring.desc=Un error de formato de cadena ocurre cuando los datos de una cadena de entrada es evaluada como un comando por la aplicaci\u00f3n. 
ascanrules.formatstring.soln= Reescribir el programa en segundo plano usando un borrado apropiado de las cadenas de caracteres err\u00f3neas. Esto requerir\u00e1 el recompilado del ejecutable en segundo plano.
ascanrules.formatstring.refs=https\://owasp.org/www-community/attacks/Format_string_attack
ascanrules.formatstring.error1 = Potencial error de formato de cadena. El script cerr\u00f3 la conexi\u00f3n en /%s
ascanrules.formatstring.error2 = Potencial error de formato de cadena. El script cerr\u00f3 la conexi\u00f3n en /%s y /%x
ascanrules.formatstring.error3 = Potencial error de formato de cadena. El script cerr\u00f3 la conexi\u00f3n en una cadena de formato de error de microsoft

ascanrules.getforpost.name=GET para POST
ascanrules.getforpost.desc=Una solicitud que originalmente se observ\u00f3 como POST tambi\u00e9n se acept\u00f3 como GET. Este problema no representa una debilidad de seguridad en s\u00ed mismo, sin embargo, puede facilitar la simplificaci\u00f3n de otros ataques. Por ejemplo, si el POST original est\u00e1 sujeto a Cross-Site Scripting (XSS), este descubrimiento puede indicar que tambi\u00e9n es posible un ataque XSS simplificado (basado en GET).
ascanrules.getforpost.soln=Aseg\u00farate de que solo se acepta POST donde se espera POST.

ascanrules.heartbleed.name=Vulnerabilidades de OpenSLL HeartBleed
ascanrules.heartbleed.desc=La implementaci\u00f3n de TLS en OpenSSL 1.0.1 antes de 1.0.1g, no maneja adecuadamente los paquetes de extensi\u00f3n de latido, lo que permite a los atacantes remotos obtener informaci\u00f3n confidencial de la memoria de proceso mediante paquetes hechos a mano que desencadenan un b\u00fafer de lectura excesiva, para potencialmente revelar informaci\u00f3n confidencial.
ascanrules.heartbleed.soln=Actualice a OpenSSL 1.0.1g o superior. Vuelva a emitir los certificados HTTPS. Cambie las claves privadas asim\u00e9tricas y las claves secretas compartidas, ya que pueden haber sido comprometidas, sin que haya evidencia de ello en los archivos de registro del servidor.
ascanrules.heartbleed.refs=https\://nvd.nist.gov/vuln/detail/CVE-2014-0160
ascanrules.heartbleed.extrainfo=Este problema se confirm\u00f3 extrayendo datos del servidor mediante {0}. Es poco probable que sea un falso positivo.

ascanrules.hidden.files.name = Buscador de Archivos Ocultos
ascanrules.hidden.files.alert.name = Archivo Oculto Encontrado
ascanrules.hidden.files.desc = Se identific\u00f3 un archivo confidencial como accesible o disponible. Esto puede filtrar informaci\u00f3n administrativa, de configuraci\u00f3n o de credenciales que puede ser aprovechada por un individuo malintencionado para atacar m\u00e1s adelante el sistema o mejorar la manera en que realiza ataques de ingenier\u00eda social.
ascanrules.hidden.files.otherinfo = {0}
ascanrules.hidden.files.refs = https\://blog.hboeck.de/archives/892-Introducing-Snallygaster-a-Tool-to-Scan-for-Secrets-on-Web-Servers.html
ascanrules.hidden.files.soln = Considera si este componente es realmente necesario en producci\u00f3n; si no es as\u00ed, desact\u00edvelo. Si es as\u00ed, aseg\u00farate de que el acceso requiera la autenticaci\u00f3n y autorizaci\u00f3n adecuadas, o limita la exposici\u00f3n solo a sistemas internos o IPs de origen definidas, etc.

ascanrules.htaccess.name = Filtrado de informaci\u00f3n en .htaccess
ascanrules.htaccess.desc = Los archivos htaccess se usan para modificar la configuraci\u00f3n del software Apache Web Server, y para habilitar/deshabilitar funciones y caracter\u00edsticas adicionales que el software Apache Web Server puede ofrecer. 
ascanrules.htaccess.otherinfo = Seg\u00fan el c\u00f3digo de estado de respuesta, el archivo htaccess puede estar protegido por un mecanismo de autenticaci\u00f3n o autorizaci\u00f3n.
ascanrules.htaccess.refs = http\://www.htaccess-guide.com/
ascanrules.htaccess.soln = Aseg\u00farese de que el archivo .htaccess no sea accesible.

ascanrules.paddingoracle.name=Padding Oracle Gen\u00e9rico
ascanrules.paddingoracle.desc=Al manipular el contenido de una cadena cifrada, un atacante puede generar un mensaje de error que indica una posible vulnerabilidad 'padding oracle'. Esta vulnerabilidad puede afectar a cualquier aplicaci\u00f3n o marco que utilice el cifrado de forma incorrecta, como algunas versiones de ASP.net, Java Server Faces y Mono. Un atacante puede explotar este fallo para descifrar datos y recuperar claves de cifrado, con lo que podr\u00eda ver y modificar datos confidenciales. Esta regla deber\u00eda detectar la vulnerabilidad padding oracle MS10-070 en ASP.net si CustomErrors est\u00e1 habilitado para eso.
ascanrules.paddingoracle.soln=Actualice el software del servidor afectado o modifique los scripts para que validen correctamente los datos cifrados antes de intentar descifrarlos.
ascanrules.paddingoracle.refs=http\://netifera.com/research/ \n\
http\://www.microsoft.com/technet/security/bulletin/ms10-070.mspx \n\
http\://www.mono-project.com/Vulnerabilities\#ASP.NET_Padding_Oracle \n\
https\://bugzilla.redhat.com/show_bug.cgi?id\=623799

ascanrules.payloader.desc=Brinda soporte para cargas \u00fatiles personalizadas en reglas de escaneo.
ascanrules.payloader.name=Reglas de exploraci\u00f3n activa Cargas \u00fatiles personalizadas

ascanrules.remotecodeexecution.cve-2012-1823.name = Ejecuci\u00f3n remota de c\u00f3digo - CVE-2012-1823
ascanrules.remotecodeexecution.cve-2012-1823.desc = Ciertas versiones de PHP, cuando se configuran para ejecutarse mediante CGI, no manejan correctamente las cadenas de consulta que carecen de un car\u00e1cter "\=", lo que permite la ejecuci\u00f3n arbitraria de c\u00f3digo. En este caso, un comando del sistema operativo fue causado para ser ejecutado en el servidor web, y los resultados fueron devueltos al navegador web. 
ascanrules.remotecodeexecution.cve-2012-1823.soln = Actualice a la \u00faltima versi\u00f3n estable de PHP, o utilice el servidor web Apache y el m\u00f3dulo mod_rewrite para filtrar solicitudes maliciosas mediante las directivas "RewriteCond" y "RewriteRule".

ascanrules.sourcecodedisclosurecve-2012-1823.name = Divulgaci\u00f3n del c\u00f3digo fuente - CVE-2012-1823
ascanrules.sourcecodedisclosurecve-2012-1823.desc = Existen versiones de PHP, que cuando est\u00e1n configuradas para ejecutarse con CGI, no pueden manejar de manera correcta las cadenas de consulta, que no cuentan con el car\u00e1cter "\=", permitiendo as\u00ed que c\u00f3digo fuente de PHP sea revelado, adem\u00e1s de la ejecuci\u00f3n de cualquier c\u00f3digo. En casos como este se sirvieron directamente en el navegador web los contenidos del archivo PHP. Esta salida seguramente contendr\u00e1 PHP, pero tambi\u00e9n pudiera contener HTML directo.
ascanrules.sourcecodedisclosurecve-2012-1823.soln = Actualice a la \u00faltima versi\u00f3n estable de PHP, o utilice el servidor web Apache y el m\u00f3dulo mod_rewrite para filtrar solicitudes maliciosas mediante las directivas "RewriteCond" y "RewriteRule".


ascanrules.sourcecodedisclosurewebinf.name = Divulgaci\u00f3n del c\u00f3digo fuente - / carpeta WEB-INF
ascanrules.sourcecodedisclosurewebinf.desc = El c\u00f3digo fuente de Java fue revelado por el servidor web en los archivos del Java class en la carpeta Web-INF. Los archivos class se pueden desmontar para producir c\u00f3digo fuente que coincida muy de cerca con el c\u00f3digo fuente original.  
ascanrules.sourcecodedisclosurewebinf.soln = Todo servidor web se debe configurar para que no muestre la carpeta /WEB-INF ni sus contenidos a los navegadores web, porque este tiene informaci\u00f3n delicada como el c\u00f3digo fuente compilado de Java, adem\u00e1s de archivos que pueden contener credenciales como los de propiedades. Los Java class implementados con la aplicaci\u00f3n se deben ocultar, en forma de una capa adicional de defensa, como una "defensa en profundidad".
ascanrules.sourcecodedisclosurewebinf.propertiesfile.name = Divulgaci\u00f3n del archivo de propiedades\: carpeta /WEB-INF
ascanrules.sourcecodedisclosurewebinf.propertiesfile.desc = Un Java class de la carpeta /Web-INF divulg\u00f3 la presencia del archivo de propiedades. El archivo de propiedades no est\u00e1 dise\u00f1ado para ser p\u00fablicamente accesible, y com\u00fanmente contiene la informaci\u00f3n de configuraci\u00f3n, credenciales de aplicaci\u00f3n o claves criptogr\u00e1ficas.   
ascanrules.sourcecodedisclosurewebinf.propertiesfile.soln = El servidor web debe configurarse para que no sirva la carpeta / WEB-INF o sus contenidos a los navegadores web. Tambi\u00e9n es posible eliminar la carpeta / WEB-INF.  
ascanrules.sourcecodedisclosurewebinf.propertiesfile.extrainfo = La referencia al archivo de propiedades se encontr\u00f3 en el c\u00f3digo fuente de Java desensamblado para la clase Java [{0}].


ascanrules.crosssitescripting.name = Cross Site Scripting (Reflected)
ascanrules.crosssitescripting.json.name = Cross Site Scripting XSS (reflejada en la respuesta de JSON)
ascanrules.crosssitescripting.json.desc = Se encontr\u00f3 un ataque XSS reflejado en una respuesta JSON, esto podr\u00eda dejar a los usuarios del contenido vulnerables a un ataque si no controlan adecuadamente los datos (respuesta).
ascanrules.crosssitescripting.otherinfo.nothtml = Creado con confianza BAJA, ya que Content-Type no es HTML
ascanrules.crosssitescripting.otherinfo.accesskey = El atributo accesskey especifica una tecla de atajo para activar/enfocar un elemento. Este atributo puede desencadenar cargas \u00fatiles para etiquetas no convencionales o personalizadas.

ascanrules.persistentxssattack.name=Cross Site Scripting XSS (Persistente)
ascanrules.persistentxssattack.otherinfo=Fuente URL\: {0}
ascanrules.persistentxssattack.json.name = Devilidad Cross Site Scripting (Persistente en la respuesta JSON)
ascanrules.persistentxssattack.json.desc = Se encontr\u00f3 un ataque XSS en una respuesta JSON, esto podr\u00eda dejar a los usuarios del contenido vulnerables a un ataque si no controlan adecuadamente los datos (respuesta).
ascanrules.persistentxssattack.otherinfo.nothtml = Iniciado con POCA confianza, ya que el contenido (Content-Type) no es HTML

ascanrules.persistentxssprime.name=Cross Site Scripting (Persistente) - Prime
ascanrules.persistentxssprime.misc=N/A

ascanrules.persistentxssspider.name=Cross Site Scripting (Persistente) - Spider
ascanrules.persistentxssspider.misc=N/A

ascanrules.sqlinjection.name=Inyecci\u00f3n SQL
ascanrules.sqlinjection.desc=Inyecci\u00f3n SQL puede ser posible
ascanrules.sqlinjection.soln=No conf\u00ede en los datos de entrada del lado del cliente, incluso si existe una validaci\u00f3n del lado del cliente.\n\
Como norma general, escriba la verificaci\u00f3n de los datos en el lado del servidor.\n\
Si la aplicaci\u00f3n usa JDBC, use PreparedStatement o CallableStatement, con par\u00e1metros pasados \u200b\u200bpor '?'\n\
Si la aplicaci\u00f3n usa ASP, use objetos de comando ADO con verificaci\u00f3n de tipo fuerte y consultas parametrizadas.\n\
Si se pueden usar los procedimientos almacenados de la base de datos, util\u00edcelos.\n\
\u00a1*No* concatene cadenas en consultas en el procedimiento almacenado, o use 'ejec', 'ejex immediate' o una funci\u00f3n equivalente\!\n\
No cree consultas SQL din\u00e1micas mediante la concatenaci\u00f3n de cadenas simples.\n\
Escape todos los datos recibidos del cliente.\n\
Aplique una 'lista de permitidos' para caracteres permitidos o una 'lista de denegados' para caracteres no permitidos en la entrada del usuario.\n\
Aplique el privilegio m\u00ednimo utilizando el usuario de base de datos con menos privilegios posible.\n\
En particular, evite usar los usuarios de la base de datos 'sa' o 'db-owner'. Esto no elimina la inyecci\u00f3n SQL, pero minimiza su impacto.\n\
Otorgue el acceso m\u00ednimo a la base de datos que sea necesario para la aplicaci\u00f3n.
ascanrules.sqlinjection.refs=https\://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html
ascanrules.sqlinjection.alert.errorbased.attack=[{0}] campo\: [{1}], valor [{2}]
ascanrules.sqlinjection.alert.errorbased.differentiation.attack=Valor Original\: [{0}]. Valor Modificado\: [{1}]. Valor de Control\: [{2}]
ascanrules.sqlinjection.alert.booleanbased.attack=campo\: [{0}], valor [{1}]
ascanrules.sqlinjection.alert.unionbased.attack=[{0}] campo\: [{1}], valor [{2}]
ascanrules.sqlinjection.alert.errorbased.extrainfo=RDBMS [{0}] probable, dado fragmento del mensaje de error [{1}] en resultados HTML
ascanrules.sqlinjection.alert.unionbased.extrainfo=RDBMS [{0}] probable, dado fragmento [{1}] del mensaje tipo UNION en resultados HTML
ascanrules.sqlinjection.alert.expressionbased.extrainfo=Los resultados de la p\u00e1gina original se replicaron correctamente utilizando la expresi\u00f3n [{0}] como valor de par\u00e1metro\n\
El valor de par\u00e1metro que se est\u00e1 modificando {1}se elimin\u00f3 de la salida HTML a efectos de comparaci\u00f3n.
ascanrules.sqlinjection.alert.orderbybased.extrainfo=Los resultados de la p\u00e1gina original se replicaron correctamente utilizando la expresi\u00f3n "ORDER BY" [{0}] como valor de par\u00e1metro\n\
El valor de par\u00e1metro que se est\u00e1 modificando {1}se elimin\u00f3 de la salida HTML a efectos de comparaci\u00f3n.
ascanrules.sqlinjection.alert.errorbased.httpstatuscode.extrainfo=Mensaje no modificado retorn\u00f3 estado HTTP [{0}], mensaje modificado retorn\u00f3 estado HTTP [{1}]
ascanrules.sqlinjection.alert.errorbased.differentiation.extrainfo=El mensaje sin modificar dio estado HTTP [{0}], longitud [{1}], el mensaje modificado dio estado HTTP [{2}], longitud [{3}]. Un tercero (valor inductor de inyecci\u00f3n no SQL) dio estado HTTP [{4}], longitud [{5}]
ascanrules.sqlinjection.alert.booleanbased.extrainfo=Los resultados de la p\u00e1gina se consiguieron manipular usando las condiciones l\u00f3gicas [{0}] y [{1}]
ascanrules.sqlinjection.alert.booleanbased.extrainfo.dataexists=Se han devuelto datos para el par\u00e1metro original.\n\
Se ha detectado la vulnerabilidad al restringir con \u00e9xito los datos devueltos originalmente, al manipular el par\u00e1metro
ascanrules.sqlinjection.alert.booleanbased.extrainfo.datanotexists=NO se devolvieron datos para el par\u00e1metro original.\n\
La vulnerabilidad se detect\u00f3 al recuperar con \u00e9xito m\u00e1s datos de los que se devolvieron originalmente, al manipular el par\u00e1metro
ascanrules.sqlinjection.alert.timebased.extrainfo=El tiempo de consulta es controlable a trav\u00e9s del valor del par\u00e1metro [{0}], el cual caus\u00f3 que la solicitud tomara [{1}] milisegundos, mientras que la consulta original, no modificada, tom\u00f3 [{2}] [{3}] milisegundos 
ascanrules.sqlinjection.authbypass.name=Inyecci\u00f3n SQL - Saltar Autenticaci\u00f3n
ascanrules.sqlinjection.authbypass.desc=Existe la posibilidad de realizar una inyecci\u00f3n SQL en una p\u00e1gina de inicio de sesi\u00f3n, lo que podr\u00eda permitir saltar el mecanismo de autenticaci\u00f3n de la aplicaci\u00f3n. 

# TODO some duplicates

ascanrules.sqlinjection.mysql.name=Inyecci\u00f3n SQL - MySQL
ascanrules.sqlinjection.hypersonic.name=Inyecci\u00f3n SQL - SQL hipers\u00f3nico
ascanrules.sqlinjection.oracle.name=Inyecci\u00f3n SQL - Oracle
ascanrules.sqlinjection.postgres.name=Inyecci\u00f3n SQL - PostgreSQL
#ascanrules.sqlinjection.alert.errorbased.attack={1}

ascanrules.sqlinjection.mssql.name=MsSQL - Inyecci\u00f3n SQL
ascanrules.sqlinjection.mssql.desc=Inyecci\u00f3n SQL puede ser posible
ascanrules.sqlinjection.mssql.soln=No conf\u00edes en los datos del lado del cliente, incluso si existe una validaci\u00f3n en el del cliente.\n\
En general, debes programar la verificaci\u00f3n de los datos en el lado del servidor.\n\
Si la aplicaci\u00f3n usa JDBC, usa PreparedStatement o CallableStatement, pasando los par\u00e1metros \u200b\u200bpor '?'\n\
Si la aplicaci\u00f3n usa ASP, usa objetos de comando ADO con comprobaci\u00f3n de tipo fuerte y consultas parametrizadas.\n\
Si se pueden utilizar los procedimientos almacenados de la base de datos, \u00fasalos.\n\
\u00a1*No* concatenes cadenas en consultas en el procedimiento almacenado, o utiliza 'exec', 'exec inmediate' o una funcionalidad equivalente\!\n\
No crees consultas SQL din\u00e1micas mediante la concatenaci\u00f3n de cadenas simples.\n\
Escapa todos los datos recibidos del cliente.\n\
Aplica una 'lista de permitidos' para los caracteres permitidos o una 'lista de denegados' de caracteres no permitidos en la entrada del usuario.\n\
Aplica el principio de privilegio m\u00ednimo empleando el usuario de la base de datos con menos privilegios posibles.\n\
En particular, evite usar los usuarios de la base de datos 'sa' o 'db-owner'. Esto no eliminar\u00e1 la inyecci\u00f3n SQL, pero minimizar\u00e1 su impacto.\n\
Otorgue el acceso m\u00ednimo a la base de datos que sea necesario para la aplicaci\u00f3n.
ascanrules.sqlinjection.mssql.refs=https\://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html
ascanrules.sqlinjection.mssql.alert.timebased.extrainfo=El tiempo de consulta se puede controlar mediante el valor del par\u00e1metro [{0}], lo que ha provocado que la solicitud tardara [{1}] milisegundos, cuando la consulta original sin modificar con el valor [{2}] ha tardado [{3}] milisegundos.

ascanrules.sqlinjection.sqlite.name=SQLite - Inyecci\u00f3n SQL
ascanrules.sqlinjection.sqlite.alert.timebased.extrainfo=El tiempo de consulta se puede controlar mediante el valor del par\u00e1metro [{0}], que ha provocado que la solicitud tardara [{1}] milisegundos, el valor del par\u00e1metro [{2}], que ha provocado que la solicitud tardara [{3}] milisegundos, cuando la consulta original sin modificar con el valor [{4}] ha tardado [{5}] milisegundos.
ascanrules.sqlinjection.sqlite.alert.errorbased.extrainfo=Se ha provocado el siguiente mensaje de error de SQLite conocido\: [{0}].
ascanrules.sqlinjection.sqlite.alert.versionnumber.extrainfo=Utilizando un ataque de inyecci\u00f3n SQL basado en UNION y explotando el mecanismo de escritura din\u00e1mica de SQLite, se determin\u00f3 que la versi\u00f3n de SQLite es [{0}].\n\
Con los puntos de inyecci\u00f3n basados en cadenas, se puede extraer la informaci\u00f3n completa de la versi\u00f3n de SQLite, pero con los puntos de inyecci\u00f3n num\u00e9ricos, solo se puede extraer informaci\u00f3n parcial de la versi\u00f3n de SQLite.\n\
M\u00e1s informaci\u00f3n sobre la versi\u00f3n de SQLite [{0}] est\u00e1 disponible en http\://www.sqlite.org/changes.html


ascanrules.externalredirect.name=Redirecci\u00f3n Externa
ascanrules.externalredirect.reason.location.header=La respuesta contiene una redirecci\u00f3n en su encabezado de ubicaci\u00f3n que permite configurar una URL externa.
ascanrules.externalredirect.reason.location.meta=La respuesta contiene una redirecci\u00f3n en su etiqueta meta http-equiv para 'Location' que permite configurar una URL externa.
ascanrules.externalredirect.reason.refresh.header=La respuesta contiene una redirecci\u00f3n en su encabezado Refresh que permite establecer una URL externa.
ascanrules.externalredirect.reason.refresh.meta=La respuesta contiene una redirecci\u00f3n en su etiqueta meta http-equiv para 'Refresh' que permite configurar una URL externa.
ascanrules.externalredirect.reason.javascript=La respuesta contiene una redirecci\u00f3n en su c\u00f3digo JavaScript que permite establecer una URL externa.
ascanrules.externalredirect.reason.notfound=No se encontr\u00f3 raz\u00f3n para ello...

ascanrules.codeinjection.name=Server Side Code Injection
ascanrules.codeinjection.name.asp=Inyecci\u00f3n de C\u00f3digo en el Lado del Servidor - Inyecci\u00f3n de c\u00f3digo ASP
ascanrules.codeinjection.name.php=Inyecci\u00f3n de C\u00f3digo en el Lado del Servidor - Inyecci\u00f3n de c\u00f3digo PHP
ascanrules.codeinjection.desc=Una inyecci\u00f3n de c\u00f3digo puede ser posible, que incluya un c\u00f3digo personalizado que ser\u00e1 evaluado por el motor de secuencias de comandos
ascanrules.codeinjection.soln=No conf\u00ede en los valores de entrada del lado del cliente, incluso si en el lado del cliente se realice una validaci\u00f3n.\n\
En general, comprobar todos los datos de entrada en el lado del servidor y escapar de todos los datos recibidos desde el cliente.\n\
 Evite el uso de funciones eval() combinados con los datos de entrada del usuario.
ascanrules.codeinjection.refs=http\://cwe.mitre.org/data/definitions/94.html\n\
https\://owasp.org/www-community/attacks/Direct_Dynamic_Code_Evaluation_Eval%20Injection

ascanrules.directorybrowsing.name=Exploraci\u00f3n de directorios
ascanrules.directorybrowsing.desc=Es posible listar el directorio de sistema. El directorio de sistema puede mostrar scripts ocultos, archivos, archivos de copia de seguridad, etc., a los que se puede acceder para leer su informaci\u00f3n.
ascanrules.directorybrowsing.soln=Deshabilita el explorador de archivos. Si es necesario, aseg\u00farate de que los archivos que pueda mostrar no sean un riesgo.
ascanrules.directorybrowsing.refs=http\://httpd.apache.org/docs/mod/core.html\#options\n\
http\://alamo.satlug.org/pipermail/satlug/2002-February/000053.html

ascanrules.crlfinjection.name=Inyecci\u00f3n CRLF
ascanrules.crlfinjection.desc=La cookie se puede modificar con inyecci\u00f3n CRLF. Tambi\u00e9n es posible establecer encabezados de respuesta HTTP arbitrarios. Adem\u00e1s, al crear cuidadosamente la respuesta para inyectar mediante secuencias de comandos entre sitios XSS, tambi\u00e9n puede darse una vulnerabilidad de envenenamiento de cach\u00e9.
ascanrules.crlfinjection.soln=Ver\u00edfica cuidadosamente los par\u00e1metros enviados, revisa el tipo de datos. No permitas inyecciones CRLF filtra CRLF.
ascanrules.crlfinjection.refs=http\://www.watchfire.com/resources/HTTPResponseSplitting.pdf\n\
http\://webappfirewall.com/lib/crlf-injection.txtnull\n\
http\://www.securityfocus.com/bid/9804

ascanrules.parametertamper.name=Manipulaci\u00f3n de Par\u00e1metros
ascanrules.parametertamper.desc=La manipulaci\u00f3n de par\u00e1metros provoc\u00f3 que se mostrara una p\u00e1gina de error o un seguimiento de la pila de Java. Esto indica un fallo en como maneja las excepciones se podr\u00eda explotar en el futuro.
ascanrules.parametertamper.soln=Identificar la causa del error y solucionarlo. No conf\u00ede en la entrada del lado del cliente y hacer cumplir un control exhaustivo en el lado del servidor. Adem\u00e1s, detectar la excepci\u00f3n correctamente. Utilice una p\u00e1gina de error 500 gen\u00e9rico para error interno del servidor.

ascanrules.pathtraversal.name=Ruta Transversal

ascanrules.remotefileinclude.name=Inclusi\u00f3n Remota de Archivos

ascanrules.serversideinclude.name=Server Side Include
ascanrules.serversideinclude.desc=Ciertos par\u00e1metros pueden hacer que se Incluyan comandos del Lado del Servidor (SSLI) y se ejecuten. Esto puede permitir que se realice una conexi\u00f3n con la base de datos o la ejecuci\u00f3n de c\u00f3digo arbitrario.
ascanrules.serversideinclude.soln=No conf\u00ede en la entrada del lado del cliente y aplique una verificaci\u00f3n estricta en el lado del servidor. Deshabilita los includes en el lado del servidor.
Refer=el manual para desactivar el Server Side Include (SSI).\n\
\n\
Utilice privilegios m\u00ednimos para ejecutar el servidor web o servidor de aplicaciones.\n\
\n\
Para Apache, deshabilitar lo siguiente\:\n\
\n\
Las opciones de \u00edndices incluye FollowSymLinks\n\
\n\
Agregar el tipo application/x-httpd-cgi .cgi\n\
\n\
Agregar el tipo text/x-server-parsed-html .html\n\

ascanrules.serversideinclude.refs=http\://www.carleton.ca/~dmcfet/html/ssi.html

ascanrules.traceaxd.name = Filtrado de informaci\u00f3n en Trace.axd
ascanrules.traceaxd.desc = Se encontr\u00f3 que ASP.NET Trace Viewer (trace.axd) est\u00e1 disponible. Este componente puede filtrar una cantidad significativa de informaci\u00f3n valiosa.
ascanrules.traceaxd.otherinfo = Seg\u00fan el c\u00f3digo de estado de respuesta, Trace Viewer puede estar protegido por un mecanismo de autenticaci\u00f3n o autorizaci\u00f3n.  
ascanrules.traceaxd.refs = https\://msdn.microsoft.com/en-us/library/bb386420.aspx\n\
https\://msdn.microsoft.com/en-us/library/wwh16c6c.aspx\n\
https\://www.dotnetperls.com/trace
ascanrules.traceaxd.soln = Considere si Trace Viewer es realmente necesario en producci\u00f3n; si no es as\u00ed, desact\u00edvelo. Si es as\u00ed, aseg\u00farese de que el acceso requiera autenticaci\u00f3n y autorizaci\u00f3n.

ascanrules.useragent.name=User Agent Fuzzer
ascanrules.useragent.desc=Compare las diferencias en la respuesta seg\u00fan el fuzzeo de User Agent (por ejemplo, sitios m\u00f3viles, acceso como un motor de b\u00fasqueda). Compara el c\u00f3digo de estado de la respuesta y el hash del cuerpo de la respuesta con la respuesta original.
ascanrules.useragent.refs=https\://owasp.org/wstg
ascanrules.useragent.useragentparmname=Header User-Agent

ascanrules.xsltinjection.name = Inyecci\u00f3n XSLT
ascanrules.xsltinjection.desc = La inyecci\u00f3n mediante transformaciones XSL puede ser posible y puede permitir que un atacante lea informaci\u00f3n del sistema, lea y escriba archivos o ejecute c\u00f3digo arbitrario.
ascanrules.xsltinjection.refs = https\://www.contextis.com/blog/xslt-server-side-injection-attacks
ascanrules.xsltinjection.soln = Sanee y analice cada entrada de usuario que venga de cualquier lado del cliente.
ascanrules.xsltinjection.error.otherinfo = La respuesta al env\u00edo de un token XSLT incluy\u00f3 mensajes de error que pueden indicar una vulnerabilidad a las inyecciones XSLT.
ascanrules.xsltinjection.vendor.otherinfo = El nombre del proveedor del procesador XSLT "{0}" a sido devuelto despu\u00e9s de una solicitud de inyecci\u00f3n.
ascanrules.xsltinjection.portscan.otherinfo = Es posible realizar un escaneo de puertos.
ascanrules.xsltinjection.command.otherinfo = Puede ser posible la ejecuci\u00f3n de comandos

ascanrules.xxe.name=Ataque de entidad externa XML


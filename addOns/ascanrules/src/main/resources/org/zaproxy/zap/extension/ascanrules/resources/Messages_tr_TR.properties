ascanrules.desc = Aktif Tarama Kurallar\u0131

ascanrules.bufferoverflow.name = Bellek Ta\u015fmas\u0131
ascanrules.bufferoverflow.desc = Bellek ta\u015fma hatalar\u0131, arka planda \u00e7al\u0131\u015fan web i\u015flemlerinin bellekteki yerleri \u00fczerine bilerek ya da bilmeyerek yaz\u0131lmas\u0131yla olu\u015fan hatalard\u0131r. IP (Komut \u0130\u015faret\u00e7isi), BP(Temel Pointer) ve di\u011fer yazma\u00e7lar istisnai hatalar, segmentasyon hatalar\u0131 ve di\u011fer i\u015flemlerde problemler olu\u015fmas\u0131na neden olur. Genellikle bu hatalar uygulaman\u0131n beklenmedik bir \u015fekilde sona ermesine sebep olur. 
ascanrules.bufferoverflow.soln = Arka planda \u00e7al\u0131\u015fan program\u0131 uygun d\u00f6n\u00fc\u015f de\u011feri i\u00e7in uzunluk kontrol\u00fc yaparak tekrar yaz. Bu i\u015flem arka planda \u00e7al\u0131\u015fan program\u0131n tekrar derlenmesini gerektirir.
ascanrules.bufferoverflow.refs = https\://owasp.org/www-community/attacks/Buffer_overflow_attack
ascanrules.bufferoverflow.other = Olas\u0131 Bellek Ta\u015fmas\u0131.  Betik ba\u011flant\u0131y\u0131 sonland\u0131rd\u0131 ve 500 \u0130\u00e7 Sunucu Hatas\u0131 verdi

ascanrules.commandinjection.name=Remote OS Command Injection
ascanrules.commandinjection.desc=Attack technique used for unauthorized execution of operating system commands. This attack is possible when an application accepts untrusted input to build operating system commands in an insecure manner involving improper data sanitization, and/or improper calling of external programs.
ascanrules.commandinjection.refs=http\://cwe.mitre.org/data/definitions/78.html\n\
https\://owasp.org/www-community/attacks/Command_Injection

ascanrules.elmah.name = ELMAH Bilgi S\u0131z\u0131nt\u0131s\u0131
ascanrules.elmah.desc = The Error Logging Modules and Handlers (ELMAH [elmah.axd]) HTTP Module was found to be available. This module can leak a significant amount of valuable information.
ascanrules.elmah.otherinfo = Yan\u0131t durumu koduna dayanarak, ELMAH bir kimlik do\u011frulama veya yetkilendirme mekanizmas\u0131 taraf\u0131ndan korunabilir.  
ascanrules.elmah.refs = https\://www.troyhunt.com/aspnet-session-hijacking-with-google/\n\
https\://www.nuget.org/packages/elmah\n\
https\://elmah.github.io/
ascanrules.elmah.soln = ELMAH'\u0131n \u00fcretimde ger\u00e7ekten gerekli olup olmad\u0131\u011f\u0131n\u0131 d\u00fc\u015f\u00fcn\u00fcn, gerekli de\u011filse devre d\u0131\u015f\u0131 b\u0131rak\u0131n. E\u011fer \u00f6yleyse, ona eri\u015fimin, kimlik do\u011frulama ve yetkilendirme gerektirdi\u011finden emin olun. Ayr\u0131ca bkz\: https\://elmah.github.io/a/securing-error-log-pages/

ascanrules.formatstring.name=Bi\u00e7im String Hatas\u0131
ascanrules.formatstring.desc=Girilen verinin uygulama taraf\u0131ndan bir komut olarak de\u011ferlendirilmesi sonucu Bi\u00e7im String hatas\u0131 olu\u015fur. 
ascanrules.formatstring.soln= Arka planda \u00e7al\u0131\u015fan program\u0131 uygun k\u00f6t\u00fc string karakterlerini silerek tekrar yaz\u0131n. Bu arka planda \u00e7al\u0131\u015fan program\u0131n tekrar derlenmesini gerektirir.
ascanrules.formatstring.refs=https\://owasp.org/www-community/attacks/Format_string_attack
ascanrules.formatstring.error1 = Potansiyel bi\u00e7im string hatas\u0131.  Komut dosyas\u0131 bir /%s' de ba\u011flant\u0131 kapatt\u0131
ascanrules.formatstring.error2 = Potansiyel bi\u00e7im string hatas\u0131.  Komut dosyas\u0131 bir /%s' de ve /%x ba\u011flant\u0131 kapatt\u0131
ascanrules.formatstring.error3 = Muhtemel yaz\u0131 format\u0131 hatas\u0131. Komut dosyas\u0131 mikrosoft yaz\u0131 format\u0131 hatas\u0131 ile sonland\u0131

ascanrules.htaccess.name = .htaccess Information Leak
ascanrules.htaccess.desc = htaccess files can be used to alter the configuration of the Apache Web Server software to enable/disable additional functionality and features that the Apache Web Server software has to offer. 
ascanrules.htaccess.otherinfo = Based on response status code htaccess file may be protected by an authentication or authorization mechanism.
ascanrules.htaccess.refs = http\://www.htaccess-guide.com/
ascanrules.htaccess.soln = Ensure the .htaccess file is not accessible.

ascanrules.sourcecodedisclosurewebinf.name = Kaynak Kod A\u00e7\u0131klama - / WEB-INF klas\u00f6r\u00fc
ascanrules.sourcecodedisclosurewebinf.desc = Java kaynak kodu WEB-INF klas\u00f6r\u00fcndeki Java s\u0131n\u0131f dosyalar\u0131 web sunucusu taraf\u0131ndan if\u015fa edildi. s\u0131n\u0131f dosyalar\u0131 olabilir \u00e7ok yak\u0131ndan orijinal kaynak kodu ile e\u015fle\u015fen kaynak kodu \u00fcretmek i\u00e7in dis-topland\u0131.  
ascanrules.sourcecodedisclosurewebinf.soln = web sunucusu bu t\u00fcr kimlik i\u00e7erebilir derlenmi\u015f Java kaynak kodu ve \u00f6zellikleri dosyalar\u0131 gibi hassas bilgiler i\u00e7erdi\u011finden, / WEB-INF klas\u00f6r\u00fcn\u00fc veya web taray\u0131c\u0131lar\u0131 i\u00e7eri\u011fini de\u011fil hizmet i\u00e7in yap\u0131land\u0131r\u0131lmal\u0131d\u0131r. Uygulama ile da\u011f\u0131t\u0131lan Java s\u0131n\u0131flar\u0131 bir "savunma derinlemesine" yakla\u015f\u0131m\u0131 i\u00e7inde ek bir savunma katman\u0131 olarak, Karart\u0131lm\u0131\u015f edilmelidir.
ascanrules.sourcecodedisclosurewebinf.propertiesfile.name = \u00d6zellikler A\u00e7\u0131klanmas\u0131 Dosya - / WEB-INF klas\u00f6r\u00fc
ascanrules.sourcecodedisclosurewebinf.propertiesfile.desc = / WEB-INF klas\u00f6r\u00fcndeki bir Java s\u0131n\u0131f\u0131 \u00f6zellikleri dosyan\u0131n varl\u0131\u011f\u0131n\u0131 a\u00e7\u0131klad\u0131. \u00d6zellikler dosyas\u0131 kamuya a\u00e7\u0131k olmas\u0131 ve genellikle yap\u0131land\u0131rma bilgilerini, uygulama kimlik bilgilerini veya \u015fifreleme anahtarlar\u0131 i\u00e7ermesi i\u00e7in de\u011fildir.   
ascanrules.sourcecodedisclosurewebinf.propertiesfile.soln = web sunucusu / WEB-INF klas\u00f6r\u00fcn\u00fc veya web taray\u0131c\u0131lar\u0131 i\u00e7eri\u011fini de\u011fil hizmet i\u00e7in yap\u0131land\u0131r\u0131lmal\u0131d\u0131r. Ayr\u0131ca / WEB-INF klas\u00f6r\u00fc kald\u0131rmak m\u00fcmk\u00fcn olabilir.  
ascanrules.sourcecodedisclosurewebinf.propertiesfile.extrainfo = \u00f6zellikler dosyaya ba\u015fvuru Java s\u0131n\u0131f\u0131 i\u00e7in dis monte Java kaynak kodu bulunmu\u015ftur [ {0} ].

ascanrules.crosssitescripting.name = Cross Site Scripting (Reflected)
ascanrules.crosssitescripting.json.name = Cross Site Scripting Weakness (Reflected in JSON Response)
ascanrules.crosssitescripting.json.desc = A XSS attack was reflected in a JSON response, this might leave content consumers vulnerable to attack if they don't appropriately handle the data (response).
ascanrules.crosssitescripting.otherinfo.nothtml = Raised with LOW confidence as the Content-Type is not HTML

ascanrules.persistentxssattack.name=Cross Site Scripting (Persistent)
ascanrules.persistentxssattack.otherinfo=Source URL\: {0}
ascanrules.persistentxssattack.json.name = Cross Site Scripting Weakness (Persistent in JSON Response)
ascanrules.persistentxssattack.json.desc = A XSS attack was found in a JSON response, this might leave content consumers vulnerable to attack if they don't appropriately handle the data (response).
ascanrules.persistentxssattack.otherinfo.nothtml = Raised with LOW confidence as the Content-Type is not HTML 

ascanrules.persistentxssprime.name=Cross Site Scripting (Persistent) - Prime
ascanrules.persistentxssprime.misc=N/A

ascanrules.persistentxssspider.name=Cross Site Scripting (Persistent) - Spider
ascanrules.persistentxssspider.misc=N/A

ascanrules.sqlinjection.name=SQL Enjeksiyonu
ascanrules.sqlinjection.desc=SQL injection may be possible.
ascanrules.sqlinjection.soln=Do not trust client side input, even if there is client side validation in place.  \n\
In general, type check all data on the server side.\n\
If the application uses JDBC, use PreparedStatement or CallableStatement, with parameters passed by '?'\n\
If the application uses ASP, use ADO Command Objects with strong type checking and parameterized queries.\n\
If database Stored Procedures can be used, use them.\n\
Do *not* concatenate strings into queries in the stored procedure, or use 'exec', 'exec immediate', or equivalent functionality\!\n\
Do not create dynamic SQL queries using simple string concatenation.\n\
Escape all data received from the client.\n\
Apply an 'allow list' of allowed characters, or a 'deny list' of disallowed characters in user input.\n\
Apply the principle of least privilege by using the least privileged database user possible.\n\
In particular, avoid using the 'sa' or 'db-owner' database users. This does not eliminate SQL injection, but minimizes its impact.\n\
Grant the minimum database access that is necessary for the application.
ascanrules.sqlinjection.refs=https\://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html
ascanrules.sqlinjection.alert.errorbased.attack=[ {0} ] alan\: [ {1} ], de\u011fer [ {2} ]
ascanrules.sqlinjection.alert.errorbased.differentiation.attack=Original Value\: [{0}]. Modified Value\: [{1}]. Control Value\: [{2}]
ascanrules.sqlinjection.alert.booleanbased.attack=[ {0} ] alan\: [ {1} ], de\u011fer [ {2} ]
ascanrules.sqlinjection.alert.unionbased.attack=[ {0} ] alan\: [ {1} ], de\u011fer [ {2} ]
ascanrules.sqlinjection.alert.errorbased.extrainfo=RDBMS [{0}] likely, given error message regular expression [{1}] matched by the HTML results.\n\
The vulnerability was detected by manipulating the parameter to cause a database error message to be returned and recognised
ascanrules.sqlinjection.alert.unionbased.extrainfo=RDBMS [{0}] likely, given UNION-specific error message regular expression [{1}] matched by the HTML results\n\
The vulnerability was detected by manipulating the parameter with an SQL ''UNION'' clause to cause a database error message to be returned and recognised
ascanrules.sqlinjection.alert.expressionbased.extrainfo=The original page results were successfully replicated using the expression [{0}] as the parameter value\n\
The parameter value being modified was {1}stripped from the HTML output for the purposes of the comparison
ascanrules.sqlinjection.alert.orderbybased.extrainfo=The original page results were successfully replicated using the "ORDER BY" expression [{0}] as the parameter value\n\
The parameter value being modified was {1}stripped from the HTML output for the purposes of the comparison
ascanrules.sqlinjection.alert.errorbased.httpstatuscode.extrainfo=De\u011fi\u015ftirilmemi\u015f mesaj [HTTP stat\u00fcs\u00fc verdi {0} ], modifiye mesaj verdi HTTP durum [ {1} ]
ascanrules.sqlinjection.alert.errorbased.differentiation.extrainfo=De\u011fi\u015ftirilmemi\u015f mesaj [HTTP stat\u00fcs\u00fc verdi {0} ], uzunlu\u011fu v\u00fccut [ {1} ], modifiye mesaj HTTP stat\u00fcs\u00fc verdi [ {2} ], uzunluk v\u00fccut [ {3} ]. \u00dc\u00e7\u00fcnc\u00fc (non-SQL enjeksiyonu uyaran de\u011feri) HTTP stat\u00fcs\u00fc verdi [ {4} ], uzunlu\u011fu v\u00fccut [ {5} ]
ascanrules.sqlinjection.alert.booleanbased.extrainfo=The page results were successfully manipulated using the boolean conditions [{0}] and [{1}]\n\
The parameter value being modified was {2}stripped from the HTML output for the purposes of the comparison
ascanrules.sqlinjection.alert.booleanbased.extrainfo.dataexists=Data was returned for the original parameter.\n\
The vulnerability was detected by successfully restricting the data originally returned, by manipulating the parameter
ascanrules.sqlinjection.alert.booleanbased.extrainfo.datanotexists=Data was NOT returned for the original parameter.\n\
The vulnerability was detected by successfully retrieving more data than originally returned, by manipulating the parameter
ascanrules.sqlinjection.alert.timebased.extrainfo=Sorgu s\u00fcresi parametre de\u011ferini kullanarak kontrol edilebilir [ {0} ], istek [almaya neden olan {1} de\u011feri ile orijinal de\u011fi\u015ftirilmemi\u015f sorgusu [zaman] milisaniye, {2} ] [s\u00fcrd\u00fc {3} ] milisaniye 
ascanrules.sqlinjection.authbypass.name=SQL Injection - Authentication Bypass
ascanrules.sqlinjection.authbypass.desc=SQL injection may be possible on a login page, potentially allowing the application's authentication mechanism to be bypassed 

ascanrules.externalredirect.name=External Redirect
ascanrules.externalredirect.reason.location.header=The response contains a redirect in its Location header which allows an external Url to be set.
ascanrules.externalredirect.reason.location.meta=The response contains a redirect in its meta http-equiv tag for 'Location' which allows an external Url to be set.
ascanrules.externalredirect.reason.refresh.header=The response contains a redirect in its Refresh header which allows an external Url to be set.
ascanrules.externalredirect.reason.refresh.meta=The response contains a redirect in its meta http-equiv tag for 'Refresh' which allows an external Url to be set.
ascanrules.externalredirect.reason.javascript=The response contains a redirect in its JavaScript code which allows an external Url to be set.
ascanrules.externalredirect.reason.notfound=No reason found for it...

ascanrules.codeinjection.name=Server Side Code Injection
ascanrules.codeinjection.name.asp=Server Side Code Injection - ASP Code Injection
ascanrules.codeinjection.name.php=Server Side Code Injection - PHP Code Injection
ascanrules.codeinjection.desc=A code injection may be possible including custom code that will be evaluated by the scripting engine
ascanrules.codeinjection.soln=Do not trust client side input, even if there is client side validation in place.\n\
In general, type check all data on the server side and escape all data received from the client.\n\
 Avoid the use of eval() functions combined with user input data.
ascanrules.codeinjection.refs=http\://cwe.mitre.org/data/definitions/94.html\n\
https\://owasp.org/www-community/attacks/Direct_Dynamic_Code_Evaluation_Eval%20Injection

ascanrules.directorybrowsing.name=Dizin Tarama
ascanrules.directorybrowsing.desc=It is possible to view the directory listing.  Directory listing may reveal hidden scripts, include files, backup source files, etc. which can be accessed to read sensitive information.
ascanrules.directorybrowsing.soln=Disable directory browsing.  If this is required, make sure the listed files does not induce risks.
ascanrules.directorybrowsing.refs=http\://httpd.apache.org/docs/mod/core.html\#options\n\
http\://alamo.satlug.org/pipermail/satlug/2002-February/000053.html

ascanrules.crlfinjection.name=CRLF Injection
ascanrules.crlfinjection.desc=Cookie can be set via CRLF injection.  It may also be possible to set arbitrary HTTP response headers. In addition, by carefully crafting the injected response using cross-site script, cache poisoning vulnerability may also exist.
ascanrules.crlfinjection.soln=Type check the submitted parameter carefully.  Do not allow CRLF to be injected by filtering CRLF.
ascanrules.crlfinjection.refs=http\://www.watchfire.com/resources/HTTPResponseSplitting.pdf\n\
http\://webappfirewall.com/lib/crlf-injection.txtnull\n\
http\://www.securityfocus.com/bid/9804

ascanrules.parametertamper.name=Parameter Tampering
ascanrules.parametertamper.desc=Parameter manipulation caused an error page or Java stack trace to be displayed.  This indicated lack of exception handling and potential areas for further exploit.
ascanrules.parametertamper.soln=Identify the cause of the error and fix it.  Do not trust client side input and enforce a tight check in the server side.  Besides, catch the exception properly.  Use a generic 500 error page for internal server error.

ascanrules.pathtraversal.name=Yol Takibi
ascanrules.pathtraversal.other=Check {0}

ascanrules.remotefileinclude.name=Uzaktan dosya dahili

ascanrules.serversideinclude.name=Server Side Include
ascanrules.serversideinclude.desc=Certain parameters may cause Server Side Include commands to be executed.  This may allow database connection or arbitrary code to be executed.
ascanrules.serversideinclude.soln=Do not trust client side input and enforce a tight check in the server side.  Disable server side includes.\n\

Refer=manuel i\u00e7in Sever Side Include devre d\u0131\u015f\u0131 b\u0131rakmak i\u00e7in. Web sunucusu veya uygulama sunucusu \u00e7al\u0131\u015ft\u0131rmak en az ayr\u0131cal\u0131k kullan\u0131n. Apache i\u00e7in a\u015fa\u011f\u0131daki devre d\u0131\u015f\u0131 b\u0131rak\u0131n\: Se\u00e7enekler Endeksleri FollowSymLinks AddType application / x-httpd-cgi .cgi AddType text / x-sunucu-ayr\u0131\u015ft\u0131r\u0131ld\u0131-html .html i\u00e7erir
ascanrules.serversideinclude.refs=http\://www.carleton.ca/~dmcfet/html/ssi.html

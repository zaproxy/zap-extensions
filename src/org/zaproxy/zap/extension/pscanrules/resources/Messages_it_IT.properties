#X-Generator: crowdin.com
# This file defines the default (English) variants of all of the internationalised messages

pscanrules.desc=Regole di analisi passiva

pscanrules.headerxssprotectionscanner.name=Protezione XSS del Browser Web non abilitato
pscanrules.headerxssprotectionscanner.desc=Protezione XSS del Web Browser non \u00e8 abilitata, o \u00e8 disabilitata dalla configurazione dell'intestazione di risposta HTTP 'X-XSS-Protection' sul server web
pscanrules.headerxssprotectionscanner.refs=https\://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps\://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/
pscanrules.headerxssprotectionscanner.extrainfo=L'intestazione di risposta HTTP X-XSS-Protection consente al server web attivare o disattivare il meccanismo di protezione del browser web XSS. I valori seguenti avrebbe tentato di attivarla\:\nX-XSS-Protection\: 1; mode \= block\nX-XSS-Protection\: 1; report \= http\://www.example.com/xss\ni seguenti valori lo disabiliterebbero\:\n X-XSS-Protection\: 0\nL'intestazione di risposta HTTP X-XSS-Protection \u00e8 attualmente supportata su Internet Explorer, Chrome e Safari (WebKit). Si noti che questo avviso viene generato solo se il corpo della risposta potenzialmente potrebbe contenere un payload XSS (con un tipo di contenuto  basato su testo , con una lunghezza diversa da zero).
pscanrules.headerxssprotectionscanner.soln=Assicurarsi che il filtro XSS del web browser sia abilitato, impostando l'intestazione di risposta HTTP X-XSS-Protection a '1'.

pscanrules.xframeoptionsscanner.name=X-Frame-Options  non \u00e8 impostato nell'intestazione
pscanrules.xframeoptionsscanner.incInCsp=The Content-Security-Policy does include a 'frame-ancestors' element which takes precedence over the X-Frame-Options header, which is why this has been raised with a LOW risk.  
pscanrules.xframeoptionsscanner.missing.name=X-Frame-Options Header Not Set
pscanrules.xframeoptionsscanner.missing.desc=L'intestazione X-Frame-Options non \u00e8 inclusa nella risposta HTTP per proteggersi da attacchi 'ClickJacking'.
pscanrules.xframeoptionsscanner.missing.refs=http\://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx
pscanrules.xframeoptionsscanner.missing.soln=Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).
pscanrules.xframeoptionsscanner.multiple.header.name=Multiple X-Frame-Options Header Entries
pscanrules.xframeoptionsscanner.multiple.header.desc=X-Frame-Options (XFO) headers were found, a response with multiple XFO header entries may not be predictably treated by all user-agents.
pscanrules.xframeoptionsscanner.multiple.header.refs=https\://tools.ietf.org/html/rfc7034
pscanrules.xframeoptionsscanner.multiple.header.soln=Ensure only a single X-Frame-Options header is present in the response.
pscanrules.xframeoptionsscanner.compliance.meta.name=X-Frame-Options Defined via META (Non-compliant with Spec)
pscanrules.xframeoptionsscanner.compliance.meta.desc=An X-Frame-Options (XFO) META tag was found, defining XFO via a META tag is explicitly not supported by the spec (RFC 7034).
pscanrules.xframeoptionsscanner.compliance.meta.refs=https\://tools.ietf.org/html/rfc7034\#section-4
pscanrules.xframeoptionsscanner.compliance.meta.soln=Ensure X-Frame-Options is set via a response header field.
pscanrules.xframeoptionsscanner.compliance.malformed.setting.name=X-Frame-Options Setting Malformed
pscanrules.xframeoptionsscanner.compliance.malformed.setting.desc=An X-Frame-Options header was present in the response but the value was not correctly set.
pscanrules.xframeoptionsscanner.compliance.malformed.setting.refs=https\://tools.ietf.org/html/rfc7034\#section-2.1
pscanrules.xframeoptionsscanner.compliance.malformed.setting.soln=Ensure a valid setting is used on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. ALLOW-FROM allows specific websites to frame the web page in supported web browsers).

pscanrules.xcontenttypeoptionsscanner.name=Intestazione X-Content-Type-Options mancante
pscanrules.xcontenttypeoptionsscanner.desc=L'intestazione Anti-MIME-Sniffing nell'impostazione X-Content-Type-Options non era impostata su 'nosniff'. Questo permette alle vecchie versioni di Internet Explorer e Chrome di eseguire analisi MIME-sniffing sul corpo della risposta, potenzialmente causando che il corpo della risposta venga interpretato e visualizzato come un tipo di contenuto diverso dal tipo dichiarato. Versioni attuali (inizio 2014) e precedenti di Firefox useranno il tipo di contenuto dichiarato (se uno \u00e8 impostato), piuttosto che eseguire analisi MIME.
pscanrules.xcontenttypeoptionsscanner.otherinfo=This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.\nAt "High" threshold this scanner will not alert on client or server error responses.
pscanrules.xcontenttypeoptionsscanner.refs=http\://msdn.microsoft.com/en-us/library/ie/gg622941%28v\=vs.85%29.aspx\nhttps\://www.owasp.org/index.php/List_of_useful_HTTP_headers
pscanrules.xcontenttypeoptionsscanner.soln=Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.

pscanrules.applicationerrorscanner.name=Application Error Disclosure
pscanrules.applicationerrorscanner.desc=This page contains an error/warning message that may disclose sensitive information like the location of the file that produced the unhandled exception. This information can be used to launch further attacks against the web application. The alert could be a false positive if the error message is found inside a documentation page.
pscanrules.applicationerrorscanner.soln=Review the source code of this page. Implement custom error pages. Consider implementing a mechanism to provide a unique error reference/identifier to the client (browser) while logging the details on the server side and not exposing them to the user.

pscanrules.cachecontrolscanner.name=Incomplete or No Cache-control and Pragma HTTP Header Set
pscanrules.cachecontrolscanner.desc=The cache-control and pragma HTTP header have not been set properly or are missing allowing the browser and proxies to cache content.
pscanrules.cachecontrolscanner.soln=Whenever possible ensure the cache-control HTTP header is set with no-cache, no-store, must-revalidate; and that the pragma HTTP header is set with no-cache.
pscanrules.cachecontrolscanner.refs=https\://www.owasp.org/index.php/Session_Management_Cheat_Sheet\#Web_Content_Caching

pscanrules.contenttypemissingscanner.name=Content-Type Header Missing
pscanrules.contenttypemissingscanner.name.empty=Content-Type Header Empty
pscanrules.contenttypemissingscanner.desc=The Content-Type header was either missing or empty.
pscanrules.contenttypemissingscanner.soln=Ensure each page is setting the specific and appropriate content-type value for the content being delivered.
pscanrules.contenttypemissingscanner.refs=http\://msdn.microsoft.com/en-us/library/ie/gg622941%28v\=vs.85%29.aspx

pscanrules.cookiehttponlyscanner.name=Cookie No HttpOnly Flag
pscanrules.cookiehttponlyscanner.desc=A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.
pscanrules.cookiehttponlyscanner.soln=Ensure that the HttpOnly flag is set for all cookies.
pscanrules.cookiehttponlyscanner.refs=http\://www.owasp.org/index.php/HttpOnly

pscanrules.cookiesecureflagscanner.name=Cookie Without Secure Flag
pscanrules.cookiesecureflagscanner.desc=A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.
pscanrules.cookiesecureflagscanner.soln=Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.
pscanrules.cookiesecureflagscanner.refs=http\://www.owasp.org/index.php/Testing_for_cookies_attributes_(OWASP-SM-002)

pscanrules.crossdomainscriptinclusionscanner.name=Cross-Domain JavaScript Source File Inclusion
pscanrules.crossdomainscriptinclusionscanner.desc=The page includes one or more script files from a third-party domain.
pscanrules.crossdomainscriptinclusionscanner.soln=Ensure JavaScript source files are loaded from only trusted sources, and the sources can't be controlled by end users of the application.

pscanrules.mixedcontentscanner.name=Secure Pages Include Mixed Content
pscanrules.mixedcontentscanner.name.inclscripts=Secure Pages Include Mixed Content (Including Scripts)
pscanrules.mixedcontentscanner.desc=The page includes mixed content, that is content accessed via HTTP instead of HTTPS.
pscanrules.mixedcontentscanner.soln=A page that is available over SSL/TLS must be comprised completely of content which is transmitted over SSL/TLS.\nThe page must not contain any content that is transmitted over unencrypted HTTP.\n This includes content from third party sites.
pscanrules.mixedcontentscanner.refs=https\://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet

pscanrules.passwordautocompletescanner.name=Password Autocomplete in Browser
pscanrules.passwordautocompletescanner.desc=The AUTOCOMPLETE attribute is not disabled on an HTML FORM/INPUT element containing password type input.  Passwords may be stored in browsers and retrieved.
pscanrules.passwordautocompletescanner.soln=Turn off the AUTOCOMPLETE attribute in forms or individual input elements containing password inputs by using AUTOCOMPLETE\='OFF'.
pscanrules.passwordautocompletescanner.refs=http\://www.w3schools.com/tags/att_input_autocomplete.asp\nhttps\://msdn.microsoft.com/en-us/library/ms533486%28v\=vs.85%29.aspx

pscanrules.testinfoprivateaddressdisclosure.name=Private IP Disclosure
pscanrules.testinfoprivateaddressdisclosure.desc=A private IP (such as 10.x.x.x, 172.x.x.x, 192.168.x.x) or an Amazon EC2 private hostname (for example, ip-10-0-56-78) has been found in the HTTP response body. This information might be helpful for further attacks targeting internal systems.
pscanrules.testinfoprivateaddressdisclosure.soln=Remove the private IP address from the HTTP response body.  For comments, use JSP/ASP/PHP comment instead of HTML/JavaScript comment which can be seen by client browsers.
pscanrules.testinfoprivateaddressdisclosure.refs=https\://tools.ietf.org/html/rfc1918

pscanrules.testinfosessionidurl.name=Session ID in URL Rewrite
pscanrules.testinfosessionidurl.desc=URL rewrite is used to track user session ID. The session ID may be disclosed via cross-site referer header. In addition, the session ID might be stored in browser history or server logs.
pscanrules.testinfosessionidurl.soln=For secure content, put session ID in a cookie. To be even more secure consider using a combination of cookie and URL rewrite.
pscanrules.testinfosessionidurl.refs=http\://seclists.org/lists/webappsec/2002/Oct-Dec/0111.html
pscanrules.testinfosessionidurl.referrer.alert=Referer Exposes Session ID
pscanrules.testinfosessionidurl.referrer.desc=A hyperlink pointing to anther host name was found. As session ID URL rewrite is used, it may be disclosed in referer header to external hosts.
pscanrules.testinfosessionidurl.referrer.soln=This is a risk if the session ID is sensitive and the hyperlink refers to an external or third party host. For secure content, put session ID in secured session cookie.


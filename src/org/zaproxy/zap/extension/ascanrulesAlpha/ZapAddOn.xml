<zapaddon>
	<name>Active scanner rules (alpha)</name>
	<version>13</version>
	<description>The alpha quality Active Scanner rules</description>
	<author>ZAP Dev Team</author>
	<url>https://github.com/zaproxy/zap-extensions/wiki/AddOn_ascanrulesAlpha</url>
	<changes>
	<![CDATA[
	Updated add-on's info URL.<br>
	Minor code changes.<br>
	Added a new scanner to search for format string errors in compiled code.<br>
	Change scanners to honour the technologies enabled (1618).
  	]]>
	</changes>
	<extensions>
		<extension>org.zaproxy.zap.extension.ascanrulesAlpha.ExtensionAscanRulesAlpha</extension>
	</extensions>
	<ascanrules>
		<ascanrule>org.zaproxy.zap.extension.ascanrulesAlpha.ExampleSimpleActiveScanner</ascanrule>
		<ascanrule>org.zaproxy.zap.extension.ascanrulesAlpha.ExampleFileActiveScanner</ascanrule>
		<ascanrule>org.zaproxy.zap.extension.ascanrulesAlpha.FormatString</ascanrule>
		<ascanrule>org.zaproxy.zap.extension.ascanrulesAlpha.HttpsAsHttpScanner</ascanrule>
		<ascanrule>org.zaproxy.zap.extension.ascanrulesAlpha.ProxyDisclosureScanner</ascanrule>
		<ascanrule>org.zaproxy.zap.extension.ascanrulesAlpha.RelativePathConfusionScanner</ascanrule>
		<ascanrule>org.zaproxy.zap.extension.ascanrulesAlpha.SlackerCookieDetector</ascanrule>
		<ascanrule>org.zaproxy.zap.extension.ascanrulesAlpha.SourceCodeDisclosureFileInclusion</ascanrule>
		<ascanrule>org.zaproxy.zap.extension.ascanrulesAlpha.SourceCodeDisclosureGit</ascanrule>
		<ascanrule>org.zaproxy.zap.extension.ascanrulesAlpha.SQLInjectionSQLite</ascanrule>
	</ascanrules>
	<pscanrules/>
	<filters/>
	<files>
		<file>xml/example-ascan-file.txt</file>
	</files>
	<not-before-version>2.4.1</not-before-version>
	<not-from-version></not-from-version>
</zapaddon>

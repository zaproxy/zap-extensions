#X-Generator: crowdin.com
# ascanalphaAlpha 
#
# This file defines the default (English) variants of all of the internationalised messages
ascanalpha.desc=Activar Reglas de Escaneo - alfa

ascanalpha.examplefile.name=Un ejemplo regla de lectura activa que carga datos desde un archivo
ascanalpha.examplefile.desc=A\u00f1adir m\u00e1s informaci\u00f3n acerca de la vulnerabilidad aqu\u00ed
ascanalpha.examplefile.other=Se trata de informaci\u00f3n que no encaja en ninguna de las otras secciones
ascanalpha.examplefile.soln=Una descripci\u00f3n general de como resolver el problema
ascanalpha.examplefile.refs=http\://zaproxy.blogspot.co.uk/2014/04/hacking-zap-4-active-scan-rules.html

ascanalpha.sourcecodedisclosure.desc=El c\u00f3digo fuente de la p\u00e1gina actual se dio a conocer por el servidor web
ascanalpha.sourcecodedisclosure.lfibased.name=Divulgaci\u00f3n de C\u00f3digo Fuente - Inclusi\u00f3n de archivos
ascanalpha.sourcecodedisclosure.lfibased.soln=Asegurar que los archivos arbitrarios especificados por el usuario no se incluyen en la salida
ascanalpha.sourcecodedisclosure.lfibased.extrainfo=La salida para el nombre del archivo de c\u00f3digo fuente [{0}] se diferencia suficientemente de la del par\u00e1metro aleatorio [{1}], a [{2}%], en comparaci\u00f3n con un umbral de [{3}%]
ascanalpha.sourcecodedisclosure.lfibased.evidence=[cadena vac\u00eda]

ascanalpha.sourcecodedisclosure.gitbased.name=Divulgaci\u00f3n de C\u00f3digo Fuente - Git
ascanalpha.sourcecodedisclosure.gitbased.soln=Aseg\u00farese de que los archivos de metadatos Git no se implementan en el servidor web o servidor de aplicaciones
ascanalpha.sourcecodedisclosure.gitbased.extrainfo=[cadena vac\u00eda]
ascanalpha.sourcecodedisclosure.gitbased.evidence=El c\u00f3digo fuente de [{0}] fue extra\u00eddo usando [{1}]

ascanalpha.elinjection.name=Inyecci\u00f3n Expresi\u00f3n de Lenguaje
ascanalpha.elinjection.desc=El software construye todo o parte de una instrucci\u00f3n de lenguaje de expresi\u00f3n (EL) en una p\u00e1gina de servidor Java (JSP) con entrada influenciado externamente de un componente upstream, pero no neutraliza o incorrectamente neutraliza elementos especiales que podr\u00edan modificar la declaraci\u00f3n de EL previsto antes de ejecutarse. En ciertas versiones de Spring 3.0.5 y anteriores, hab\u00eda una vulnerabilidad (CVE-2011-2730) en que lenguaje de expresi\u00f3n de etiquetas se evaluar\u00edan dos veces, que expone con eficacia cualquier aplicaci\u00f3n de la inyecci\u00f3n EL. Sin embargo, incluso para las versiones posteriores, esta debilidad es posible dependiendo de la configuraci\u00f3n.
ascanalpha.elinjection.soln=Realizar la mejores pr\u00e1cticas de validaci\u00f3n de datos de entrada en la que no se conf\u00eda y para garantizar que se aplica la codificaci\u00f3n de salida cuando llega datos sobre la capa EL, para que el metacaracter sea encontrado por el int\u00e9rprete dentro del contenido del usuario antes de la evaluaci\u00f3n. Los patrones m\u00e1s evidentes para detectar incluyen ${ y \#{, pero puede ser posible codificar o fragmento estos datos.
ascanalpha.elinjection.refs=https\://www.owasp.org/index.php/Expression_Language_Injection\nhttp\://cwe.mitre.org/data/definitions/917.html

ascanalpha.cookieslack.name=Detector de Cookie Slack
ascanalpha.cookieslack.desc=Repetidas solicitudes GET\: colocar una cookie diferente cada vez, seguido por la petici\u00f3n normal con todas las cookies para estabilizar la sesi\u00f3n, comparar las respuestas contra la l\u00ednea base GET original. Esto puede revelar \u00e1reas donde la cookie basado en autenticaci\u00f3n y atributos no se aplican realmente.
ascanalpha.cookieslack.solution=N.a.
ascanalpha.cookieslack.otherinfo.intro=Las cookies que no tienen efectos esperados pueden revelar defectos en la l\u00f3gica de la aplicaci\u00f3n. En el peor de los casos, esto puede revelar donde la autenticaci\u00f3n por token(s) de cookies no se aplican realmente. 
ascanalpha.cookieslack.session.warning=Nota\: Debido a su nombre esta cookie puede ser importante, pero al caer parece no tener ning\u00fan efecto\: [{0}]  
ascanalpha.cookieslack.affect.response.yes=Estas cookies afectan la respuesta\: 
ascanalpha.cookieslack.affect.response.no=Estas cookies no afectaron la respuesta\:
ascanalpha.cookieslack.session.destroyed=Dejando caer esta cookie no parece tener invalida la sesi\u00f3n\: [{0}] Una solicitud de seguimiento con todas las cookies originales todav\u00eda ten\u00eda una respuesta diferente a la solicitud original.
ascanalpha.cookieslack.separator=,
ascanalpha.cookieslack.endline=\ 

ascanalpha.httpsashttpscanner.name=HTTPS Contenido Disponible v\u00eda HTTP
ascanalpha.httpsashttpscanner.desc=El contenido que inicialmente se accede a trav\u00e9s de HTTPS (por ejemplo\: usando encriptaci\u00f3n SSL/TLS) es tambi\u00e9n accesible v\u00eda HTTP (sin encriptaci\u00f3n). 
ascanalpha.httpsashttpscanner.soln=Aseg\u00farese de que su servidor web, servidor de aplicaciones, balanceador de carga, etc. est\u00e1 configurado para s\u00f3lo servir a tales contenidos a trav\u00e9s de HTTPS. Considere implementar HTTP Strict Transport Security.
ascanalpha.httpsashttpscanner.refs=https\://www.owasp.org/index.php/HTTP_Strict_Transport_Security\nhttps\://www.owasp.org/index.php/List_of_useful_HTTP_headers\nhttp\://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp\://caniuse.com/stricttransportsecurity\nhttp\://tools.ietf.org/html/rfc6797

ascanalpha.sqlinjection.sqlite.name=Inyecci\u00f3n SQL - SQLite
ascanalpha.sqlinjection.desc=Falla por Inyecci\u00f3n SQL puede ser posible
ascanalpha.sqlinjection.soln=No conf\u00ede en los valores de entrada del lado del cliente, incluso si en el lado del cliente se realice una validaci\u00f3n.\nEn general, comprobar todos los datos de entrado en el servidor.\nSi la aplicaci\u00f3n usa JDBC, usar PreparedStatement o CallableStatement, con par\u00e1metros pasados por '?'\nSi la aplicaci\u00f3n utiliza ASP, utilice Command Objects ADO  con un fuerte tipo de verificaci\u00f3n y consultas parametrizadas.\nSi la Base de Datos puede usar Stored Procedures (Procedimientos Almacenados), \u00faselos.\n\u00a1NO concatenar cadenas en los query (consultas) en el procedimientos almacenados,  o utilizar 'exec', 'exec immediate', o su funcionalidad equivalente\!\nNo crear consultas SQL din\u00e1micas  usando una sencilla concatenaci\u00f3n de cadenas.\nAplique aun lista blanca (whitelist) de caracteres permitidos, o una lista negra (blacklist) de caracteres no permitidos en la entrada (input) del usuario.\nAplique el privilegio m\u00ednimo posible al usuario de la base de datos de los privilegios usados.\nEn particular evitar el uso de los usuarios de base de datos 'sa' o 'db-owner'. Esto no elimina la inyecci\u00f3n SQL, pero minimiza su impacto.\nConceder el m\u00ednimo acceso de base de datos que es necesario para la aplicaci\u00f3n.
ascanalpha.sqlinjection.refs=https\://www.OWASP.org/index.php/Top_10_2010-a1 https\://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet
ascanalpha.sqlinjection.sqlite.alert.timebased.extrainfo=El tiempo de consulta es controlable mediante el valor del par\u00e1metro [{0}], que caus\u00f3 la petici\u00f3n de tomar [{1}] milisegundos, el valor del par\u00e1metro [{2}], que caus\u00f3 la petici\u00f3n de tomar [{3}] milisegundos, cuando la consulta original sin modificar con valor [{4}] tom\u00f3 [{5}] milisegundos.
ascanalpha.sqlinjection.sqlite.alert.errorbased.extrainfo=El siguiente mensaje de error SQLite conocido fue provocado\: [{0}].
ascanalpha.sqlinjection.sqlite.alert.versionnumber.extrainfo=Usando una UNION basado en un Ataque de Inyecci\u00f3n SQL, y explotando mecanismo de tipos din\u00e1micos de SQLite, la versi\u00f3n de SQLite fue determinada para ser [{0}]. \nCon los puntos de inyecci\u00f3n basada en cadenas (string), la versi\u00f3n completa SQLite la informaci\u00f3n se puede extraer. \nM\u00e1s informaci\u00f3n sobre la versi\u00f3n de SQLite [{0}] est\u00e1 disponible en http\://www.sqlite.org/changes.html

ascanalpha.proxydisclosure.name=Disvulgaci\u00f3n Proxy
ascanalpha.proxydisclosure.desc={0} servidor(es) proxy fueron detectados o identificados sus huellas digitales. Esta informaci\u00f3n ayuda a determinar potenciales ataques contra la aplicaci\u00f3n. \n- Una lista de objetivos para un ataque en contra de la aplicaci\u00f3n.\n- Posibles vulnerabilidades en los servidores proxy que sirven a la aplicaci\u00f3n.\n- La presencia o ausencia de cualquier componente basado en proxy que podr\u00edan ocasionar ataques contra la aplicaci\u00f3n a ser detectado, prevenido o mitigado. 
ascanalpha.proxydisclosure.soln=Desactivar el m\u00e9todo de 'TRACE' en los servidores proxy, as\u00ed como el servidor de web/aplicaci\u00f3n de origen. Desactivar el m\u00e9todo de 'OPTIONS' en los servidores proxy, as\u00ed como el servidor de web/aplicaci\u00f3n de origen, si no es necesario para otros fines, tales como 'CORS' (Cross Origin Resource Sharing). \nConfigurar los servidores web y de aplicaciones con p\u00e1ginas de error personalizadas, para evitar que las p\u00e1ginas de error espec\u00edfico de productos 'fingerprintable' siendo filtrados al usuario en caso de errores HTTP, tales como peticiones 'TRACK' de p\u00e1ginas inexistentes.\nConfigurar todos los proxies, servidores de aplicaciones y servidores web para impedir la divulgaci\u00f3n de la informaci\u00f3n tecnologica en el 'Server' y cabeceras de respuesta HTTP 'X-Powered-By'.\n
ascanalpha.proxydisclosure.refs=???
ascanalpha.proxydisclosure.attack=TRACE, m\u00e9todos de OPTIONS con cabeceras 'Max-Forwards'. M\u00e9todo TRACK.
ascanalpha.proxydisclosure.extrainfo.unknown=Desconocido
ascanalpha.proxydisclosure.extrainfo.proxyserver.header=Utilizando los m\u00e9todos TRACE, OPTIONS y TRACK, se han identificado los siguientes servidores proxy entre OWASP ZAP y el servidor de aplicaci\u00f3n/web\: 
ascanalpha.proxydisclosure.extrainfo.proxyserver=- {0}
ascanalpha.proxydisclosure.extrainfo.webserver.header=Se ha identificado el siguiente servidor web/aplicaci\u00f3n\: 
ascanalpha.proxydisclosure.extrainfo.webserver=- {0}
ascanalpha.proxydisclosure.extrainfo.silentproxyserver.header=Se identificaron los siguientes servidores proxy 'silent' (silenciosos). Debido a su comportamiento, no se sabe en que punto en la topolog\u00eda de red residen estos servidores proxy\:
ascanalpha.proxydisclosure.extrainfo.silentproxyserver=- {0}
ascanalpha.proxydisclosure.extrainfo.traceenabled=El m\u00e9todo 'TRACE' est\u00e1 activado en uno o m\u00e1s de los servidores proxy, o en el servidor de origen. Este m\u00e9todo filtra toda la informaci\u00f3n enviada desde el navegador web y proxies al usuario agente. Esto puede facilitar ataques 'Cross Site Tracing'. 

ascanalpha.relativepathconfusion.name=Confusi\u00f3n de Ruta Relativa de acceso
ascanalpha.relativepathconfusion.desc=El servidor web est\u00e1 configurado para servir a las respuestas a las URLs ambiguas de manera que es probable que conduzca a confusi\u00f3n sobre la "relative path" (ruta relativa) correcta para la URL. Los recursos (CSS, im\u00e1genes, etc) tambi\u00e9n est\u00e1n especificados en la respuesta de la p\u00e1gina usando URL relativas, en lugar de las direcciones URL absolutas. En un ataque, si el navegador web analiza la respuesta de "cross-content" de manera permisiva, o puede ser enga\u00f1ado para permisivamente analizar la respuesta de "cross-content", utilizando t\u00e9cnicas como framing, entonces el navegador web puede ser enga\u00f1ado al interpretar HTML como CSS (u otros tipos de contenido), llevando a una vulnerabilidad XSS.
ascanalpha.relativepathconfusion.soln=Los servidores web y los frameworks deben actualizarse para ser configurado para no servir a las respuestas de URLs ambiguas de tal manera que la ruta relativa de tales direcciones URL podr\u00eda ser mal-interpretadas por componentes ya sea en el lado del cliente o del lado del servidor.\nDentro de la aplicaci\u00f3n, el uso correcto del tag HTML "<base>" en la respuesta HTTP sin ambig\u00fcedades especificar\u00e1 la URL base para todas las URLs relativas en el documento.\nUtilice en la cabecera de respuesta HTTP "Content-Type" para hacer m\u00e1s dif\u00edcil para el atacante para forzar el navegador web para mal interpretar el tipo de contenido de la respuesta.\nUtilice en la cabecera de respuesta HTTP la opci\u00f3n "X-Content-Type-Opciones\: NOSNIFF" para prevenir desde que el navegador web "sniffing" al tipo de contenido de respuesta.\nUse un DOCTYPE moderna como "<\!doctype html>" para prevenir que la p\u00e1gina sea mostrada en el navegador web utilizando "Quirks Mode", ya que resulta en el tipo de contenido que est\u00e1 siendo ignorado por el navegador web.\nEspecifique la cabecera de respuesta HTTP "X-Frame-Options" para prevenir Quirks Mode de ser habilitado en el navegador web utilizando ataques framing. 
ascanalpha.relativepathconfusion.refs=http\://www.thespanner.co.uk/2014/03/21/rpo/\nhttps\://hsivonen.fi/doctype/\nhttp\://www.w3schools.com/tags/tag_base.asp
ascanalpha.relativepathconfusion.extrainfo.morethanonebasetag=M\u00e1s de una etiqueta <base> fue especificada en la etiqueta HTML <head> para definir la ubicaci\u00f3n de las direcciones URL relativas, que no es v\u00e1lida.
ascanalpha.relativepathconfusion.extrainfo.nobasetag=Ninguna etiqueta <base> fue especificada en la etiqueta HTML <head> para definir la ubicaci\u00f3n de las direcciones URL relativas.
ascanalpha.relativepathconfusion.extrainfo.contenttypeenabled=Fue especificado un Content Type de "{0}". Si el navegador web esta utilizando reglas estrictas de an\u00e1lisis, esto evitar\u00e1 los ataques de cross-content tengan \u00e9xito. El Quirks Mode en el navegadorweb podr\u00eda desactivar an\u00e1lisis estricto.  
ascanalpha.relativepathconfusion.extrainfo.quirksmodeenabledexplicitly=El Quirks Mode esta habilitado de forma expl\u00edcita a trav\u00e9s de < meta http-equiv\="{0}", permitiendo que el Content Type especificado pase por alto.
ascanalpha.relativepathconfusion.extrainfo.quirksmodeenabledimplicitly=El Quirks Mode est\u00e1 habilitada de forma impl\u00edcita a trav\u00e9s del uso de un antigua versi\u00f3n DOCTYPE con PUBLIC id "{0}", permitiendo que el Content Type especificado se omita en algunos navegadores web.
ascanalpha.relativepathconfusion.extrainfo.quirksmodeenabledimplicitlynodoctype=El Quirks Mode est\u00e1 habilitada de forma impl\u00edcita a trav\u00e9s de la ausencia de un DOCTYPE, permitiendo que el Content Type especificado se pasa por alto.
ascanalpha.relativepathconfusion.extrainfo.nocontenttype=Se ha especificado ning\u00fan Content Type, por lo que el Quirks Mode no est\u00e1 obligado a explotar la vulnerabilidad en el navegador web. 
ascanalpha.relativepathconfusion.extrainfo.framingallowed=No se especific\u00f3 ninguna cabecera X-Frame-Options, as\u00ed que la p\u00e1gina puede ser enmarcada, y esto puede utilizarse para activar el Quirks Mode, permitiendo que el Content Type especificado pase por alto.


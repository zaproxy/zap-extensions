#X-Generator: crowdin.com
# This file defines the default (English) variants of all of the internationalised messages

ascanrules.desc=Regole di scansione attiva

ascanrules.bufferoverflow.name=Buffer Overflow
ascanrules.bufferoverflow.desc=Gli errori di Buffer overflow sono caratterizzati dalla sovrascrittura di spazi di memoria del processo web sottostante, che non dovebbe mai essere modificata intenzionalmente o non intenzionalmente. Sovrascrivere i valori del registro IP (Instruction Pointer, puntatotre di istruzione), BP (Base Pointer, puntatore base) e altri registri pu\u00f2 causare eccezioni, errori di segmentazione, e altri errori di processo. Normalmente questi errori terminano l'esecuzione dell'applicazione in un modo non prevedibile. 
ascanrules.bufferoverflow.soln=Riscrivere il programma sullo sfondo utilizzando il controllo della lunghezza del valore di ritorno. Questo richiede di ricompilare l'eseguibile sullo sfondo.
ascanrules.bufferoverflow.refs=https\://www.owasp.org/index.php/Buffer_overflow_attack
ascanrules.bufferoverflow.other=Potenziale Buffer Overflow. Lo script ha chiuso la connessione e ha generato un errore 500 Error interno del server


ascanrules.commandinjectionplugin.name=Iniezione di comando al sistema operativo remoto
ascanrules.commandinjectionplugin.desc=Tecnica di attacco usata per l'esecuzione non autorizzata di comandi del sistema operativo. Questo attacco \u00e8 possibile quando un'applicazione accetta input non fidato per costruire comandi del sistema operativo in maniera non sicura, inclusi la non corretta sanificazione dell'input, e/o l'invocazione non corretta di programmi esterni.
ascanrules.commandinjectionplugin.refs=http\://cwe.mitre.org/data/definitions/78.html\nhttps\://www.owasp.org/index.php/Command_Injection

ascanrules.formatstring.name=Errore nella formattazione della stringa
ascanrules.formatstring.desc=Un errore di formato della stringa avviene quando i dati inviati di una stringa di input vengono valutati come comando dall'applicazione. 
ascanrules.formatstring.soln=Riscrivere il programma in background utilizzando una corretta eliminazione delle stringhe con caratteri malevoli. Questo richieder\u00e0 una ricompilazione dell'eseguibile in background.
ascanrules.formatstring.refs=https\://www.owasp.org/index.php/Format_string_attack
ascanrules.formatstring.error1=Potenziale errore di formato stringa.  Lo script ha chiuso la connessione su un /%s
ascanrules.formatstring.error2=Potenziale errore di formato stringa.  Lo script ha chiuso la connessione su un /%s e /%x
ascanrules.formatstring.error3=Potenziale errore di formato stringa.  Lo script ha chiuso la connessione su un errore di formattazione stringa microsoft


ascanrules.testscrosssitescriptv2.name=Cross Site Scripting (riflesso)
ascanrules.testscrosssitescriptv2.otherinfo.nothtml=Rilevato con BASSA confidenza dato che il content-type non \u00e8 HTML

ascanrules.testpersistentxssattack.name=Cross Site Scripting (persistente)
ascanrules.testpersistentxssattack.otherinfo=URL sorgente\: {0}

ascanrules.testpersistentxssprime.name=Cross Site Scripting (Persistente) - Primo
ascanrules.testpersistentxssprime.misc=Non disponibile

ascanrules.testpersistentxssspider.name=Cross Site Scripting (persistente) - ragno
ascanrules.testpersistentxssspider.misc=Non disponibile

ascanrules.testsqlinjection.name=SQL Injection
ascanrules.testsqlinjection.desc=Una iniezione SQL potrebbe essere possibile.
ascanrules.testsqlinjection.soln=Non fidarti dell'input utente anche se viene effettuata la validazione client side. In linea generale,\ncontrolla il tipo di tutti i dati a lato server.\nSe l'applicazione utilizza JDBC, usa PreparedStatement o CallableStatement con parametri passati via '?'.\nSe l'applicazione utilizza ASP, usa gli Oggetti ADO Command con forte controllo tipizzato e query parametrizzate.\nSe lato database possono essere utilizzate Stored Procedures, utilizzale. *Non* concatenare stringhe in query nelle stored procedure, o utilizzare 'exec', 'exec immediate', o istruzioni equivalenti\!\nNon creare query SQL dinamiche utilizzando la semplice concatenazione delle stringhe.\nSanifica tutti i dati ricevuti dal client.\nAdotta una 'whitelist' di caratteri permessi, o una 'blacklist' di caratteri non consentiti nell'input utente.\nAdotta il principio del privilegio minimo utilizzando l'utente del database con il minor numero di privilegi possibili.In particolare, evitare di utilizzare il 'sa' o gli utenti 'db-owner'. Questo non eliminer\u00e0 eventuali SQL injection, ma ridurr\u00e0 al minimo il loro impatto.\nConcedi nel database l'accesso minimo necessario al funzionamento dell'applicazione.
ascanrules.testsqlinjection.refs=https\://www.owasp.org/index.php/Top_10_2010-A1\nhttps\://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet
ascanrules.testsqlinjection.alert.errorbased.attack=[{0}] campo\: [{1}], valore [{2}]
ascanrules.testsqlinjection.alert.errorbased.differentiation.attack=Valore originale\: [{0}]. valore modificato\: [{1}]. valore di controllo\: [{2}]
ascanrules.testsqlinjection.alert.booleanbased.attack=[{0}] campo\: [{1}], valore [{2}]
ascanrules.testsqlinjection.alert.unionbased.attack=[{0}] campo\: [{1}], valore [{2}]
ascanrules.testsqlinjection.alert.errorbased.extrainfo=L''RDBMS [{0}] probabilmente, dato che il messaggio d''errore eguaglia l''espressione regolare [{1}] dai risultati HTML. \u00c8 stata rilevata la vulnerabilit\u00e0 manipolando il parametro per causare la restituzione di un messaggio di errore del database e quindi il suo riconoscimento
ascanrules.testsqlinjection.alert.unionbased.extrainfo=L''RDBMS [{0}] probabilmente, dato che il messaggio d''errore specifico su di una UNION eguaglia l''espressione regolare [{1}] dai risultati HTML. \u00c8 stata rilevata la vulnerabilit\u00e0 manipolando il parametro con una istruzione UNION SQL per causare la restituzione di un messaggio di errore del database e quindi il suo riconoscimento
ascanrules.testsqlinjection.alert.expressionbased.extrainfo=I risultati della pagina originale sono stati replicati con successo utilizzando l''espressione [{0}] come valore del parametro. Il valore del parametro modificato \u00e8 stato {1} rimosso dall''output HTML a scopo di confronto
ascanrules.testsqlinjection.alert.orderbybased.extrainfo=I risultati della pagina originale sono stati replicati con successo utilizzando l''espressione "Order by" [{0}] come valore del parametro. Il valore del parametro modificato \u00e8 stato {1} rimosso dall''output HTML a scopo di confronto
ascanrules.testsqlinjection.alert.errorbased.httpstatuscode.extrainfo=Il messaggio non modificato ha dato il codice di stato HTTP [{0}], il messaggio modificato ha dato lo stato HTTP [{1}]
ascanrules.testsqlinjection.alert.errorbased.differentiation.extrainfo=Il messaggio non modificato ha restituito il codice di stato HTTP [{0}], corpo di lunghezza [{1}], il messaggio modificato ha dato lo stato HTTP [{2}], corpo di lunghezza [{3}]. Un terzo valore, inducente una non-SQL injection, ha dato lo stato HTTP [{4}], corpo di lunghezza [{5}]
ascanrules.testsqlinjection.alert.booleanbased.extrainfo=I risultati della pagina sono stati manipolati con successo utilizzando le condizioni booleane [{0}] e [{1}]. Il valore del parametro da modificare \u00e8 stato {2} rimosso dal codice HTML di output a scopo di confronto
ascanrules.testsqlinjection.alert.booleanbased.extrainfo.dataexists=Sono stati restituiti dati per il parametro originale. La vulnerabilit\u00e0 \u00e8 stata rilevata restringendo i dati restituiti in origine, manipolando il parametro
ascanrules.testsqlinjection.alert.booleanbased.extrainfo.datanotexists=NON sono stati restituiti dati per il parametro originale. La vulnerabilit\u00e0 \u00e8 stata rilevata ottenendo pi\u00f9 dati di quelli ottenuti come risposta, manipolando il parametro
ascanrules.testsqlinjection.alert.timebased.extrainfo=Il tempo di query \u00e8 controllabile tramite il valore del parametro [{0}], che ha causato l''impiego di [{1}] millisecondi per la richiesta, mentre la query originale non modificata con valore [{2}] ha impiegato [{3}] millisecondi 
ascanrules.testsqlinjection.authbypass.name=Iniezione SQL - aggiramento dell'autenticazione
ascanrules.testsqlinjection.authbypass.desc=Un attacco di tipo Iniezione SQL \u00e8 possibile su una pagina di login, consentendo potenzialmente di aggirare il meccanismo di autenticazione dell'applicazione 

ascanrules.testexternalredirect.name=Redirezione esterna
ascanrules.testexternalredirect.reason.location.header=La risposta contiene un redirect nella sua intestazione Location che permette di impostare un Url esterno.
ascanrules.testexternalredirect.reason.location.meta=La risposta contiene un redirect nel tag meta http-equiv per 'Location', che permette di impostare un Url esterno.
ascanrules.testexternalredirect.reason.refresh.header=La risposta contiene un redirect nella sua intestazione "Refresh" che permette di impostare un Url esterno.
ascanrules.testexternalredirect.reason.refresh.meta=La risposta contiene un redirect nel tag meta http-equiv per 'Refresh', che permette di impostare un Url esterno.
ascanrules.testexternalredirect.reason.javascript=La risposta contiene un redirect nel suo codice JavaScript che permette di impostare un Url esterno.
ascanrules.testexternalredirect.reason.notfound=Nessun motivo trovato per ci\u00f2...

ascanrules.codeinjectionplugin.name=Iniezione di codice lato server
ascanrules.codeinjectionplugin.name.asp=Iniezione di codice lato server - iniezione di codice ASP
ascanrules.codeinjectionplugin.name.php=Iniezione di codice lato server - iniezione di codice PHP
ascanrules.codeinjectionplugin.desc=Una iniezione di codice \u00e8 possibile includendo codice personalizzato che sar\u00e0 valutato dal motore di scripting
ascanrules.codeinjectionplugin.soln=Non fidarsi dell'input lato client, anche se esiste validazione lato client.\nIn generale, controllare i tipi di dato lato server e escludere tutti i dati ricevuti dal client.\n Evitare l'uso di funzioni eval() combinate con input lato utente.
ascanrules.codeinjectionplugin.refs=http\://cwe.mitre.org/data/definitions/94.html\nhttps\://www.owasp.org/index.php/Direct_Dynamic_Code_Evaluation_('Eval_Injection')

ascanrules.testdirectorybrowsing.name=Navigazione delle directory
ascanrules.testdirectorybrowsing.desc=E' possibile vedere la lista delle directory. La lista delle directory pu\u00f2 rivelare script nascosti, file di inclusione, backup del codice sorgente, ecc che possono essere acceduti per leggere informazioni sensibili.
ascanrules.testdirectorybrowsing.soln=Disabilitare la navigazione di directory. Se \u00e8 necessario, assicurarsi che i file elencati non causino rischi.
ascanrules.testdirectorybrowsing.refs=http\://httpd.apache.org/docs/mod/core.html\#options\nhttp\://alamo.satlug.org/pipermail/satlug/2002-February/000053.html\n

ascanrules.testinjectioncrlf.name=Iniezione CRLF
ascanrules.testinjectioncrlf.desc=Un Coookie pu\u00f2 essere impostato attraverso una iniezione CRLF. E' anche possibile impostare intestazione di riposta HTTP a piacere. In aggiunta, modificando attentamente la risposta con un'iniezione di cross-site scripting, \u00e8 possibile avere una vulnerabilit\u00e0 di avvelenamento della cache.
ascanrules.testinjectioncrlf.soln=Controllare attentamente il tipo del parametro inserito. Non consentire l'iniezione di CRLF filtrando i caratteri CRLF.
ascanrules.testinjectioncrlf.refs=http\://www.watchfire.com/resources/HTTPResponseSplitting.pdf\nhttp\://webappfirewall.com/lib/crlf-injection.txtnull\nhttp\://www.securityfocus.com/bid/9804

ascanrules.testparametertamper.name=Manomissione del parametro
ascanrules.testparametertamper.desc=La manomissione del parametro ha causato l'apparizione di una pagina d'errore o uno stack trace di Java. Questo indica la mancanza di una gestione delle eccezioni e potenziali aree per ulteriori exploit.
ascanrules.testparametertamper.soln=Identificare la causa dell'errore e risolverlo. Non fidarsi dell'input lato client e applicare uno stretto controllo lato server. Inoltre, catturare in maniera corretta l'eccezione. Usare un generico errore 500 per errori interni del server.

ascanrules.testpathtraversal.name=Attraversamento del percorso

ascanrules.testremotefileinclude.name=Inclusione di file remoti

ascanrules.testserversideinclude.name=Inclusione lato server
ascanrules.testserversideinclude.desc=Alcuni parametri possono causare l'esecuzione di comandi include lato server. Questo pu\u00f2 consentire connessioni al database o l'esecuzione di codice arbitrario.
ascanrules.testserversideinclude.soln=Non fidarsi dell'input lato client e applicare uno stretto controllo lato server. Disabilitare gli include lato server.\n
Refer=per disabilitare manualmente Server Side Include.\n\nUtilizzare il minor privilegio possibile per lanciare il vostro web server o application server.\n\nPer Apache, disabilitare il seguente\:\n\nOptions Indexes FollowSymLinks Includes\n\nAddType application/x-httpd-cgi .cgi\n\nAddType text/x-server-parsed-html .html
ascanrules.testserversideinclude.refs=http\://www.carleton.ca/~dmcfet/html/ssi.html


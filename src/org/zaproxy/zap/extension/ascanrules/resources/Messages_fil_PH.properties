#X-Generator: crowdin.com
# This file defines the default (English) variants of all of the internationalised messages

ascanrules.desc=Mga Aktibong Scan na mga patakaran

ascanrules.bufferoverflow.name=Umaapaw na Buffer
ascanrules.bufferoverflow.desc=Mga umaapaw na mga kamalian ay characterized sa pamamagitan ng mapatungan ang memory na mga espasyo sa backround web process, na dapat ay hindi kailanman binagong sinasadya o hindi sinasadya. Mapatungan ng mga halaga ng IP IP (Instruction Pointer), BP (Base Pointer) at iba pang mga nakarehistro na sanhi sa mga exceptions, segmentation faults, at iba pang mga prosesong mali na mangyari. Karaniwang mga errors end execution sa application sa isang di-inaasahang paraan. 
ascanrules.bufferoverflow.soln=Muling isulat ang background programa na gamit ang tamang balik ng haba ng pagsusuri. Ito ay nangangailangan ng isang recompile na background executable.
ascanrules.bufferoverflow.refs=https\://www.owasp.org/index.php/Buffer_overflow_attack
ascanrules.bufferoverflow.other=Posibleng Buffer na umaapaw. Ang script ay nagsara ng koneksiyon at inihagis ang Internal Server Error


ascanrules.commandinjectionplugin.name=Remote OS Command Injection
ascanrules.commandinjectionplugin.desc=Pamaraan sa pag-atake ay ginamit para sa hindi awtorisadong pagsasagawa ng operating system commands. Ang atake ay posible kapag ang isang apilikasyon ay tumatanggap ng di-pinagkatiwalaan na bumuo ng mga iniuutos ng operating system sa isang hindi secure na pamaraan na kinasasangkutang ng maling datos sanitazation, o hindi wastong tungkulin ng panlabas na mga programa.
ascanrules.commandinjectionplugin.refs=http\://cwe.mitre.org/data/definitions/78.html\nhttps\://www.owasp.org/index.php/Command_Injection

ascanrules.formatstring.name=Mali na Format String
ascanrules.formatstring.desc=Ang Format Strong na mali at nangyari kapag isinumeting datos sa isang input string ay sinusuri bilang isang utos ng aplikasyon. 
ascanrules.formatstring.soln=Muling isulat ang background na programa gamit ang tamang pagtanggal ng masamang character strings. Ito ay nangangailangan ng isang recomple ng background executable.
ascanrules.formatstring.refs=https\://www.owasp.org/index.php/Format_string_attack
ascanrules.formatstring.error1=Potensyal na Format String na mali. Ang script ay nagsara ng koneksyon sa isang /%s
ascanrules.formatstring.error2=Potensyal na Format String na mali. Ang script ay nagsara ng koneksyon sa iang  /%s at /%x
ascanrules.formatstring.error3=Potensyal na Format String na mali. Ang script na ito ay nagsara ng koneksiyon sa microsoft format string na mali


ascanrules.testscrosssitescriptv2.name=Cross Site Scripting (Nagsasalarawan)
ascanrules.testscrosssitescriptv2.otherinfo.nothtml=Lumaki na may MABABANG tiwala sa sarili habang ang Content-Type ay hindi HTML

ascanrules.testpersistentxssattack.name=Cross Site Scripting (Nagpupumilit)
ascanrules.testpersistentxssattack.otherinfo=Pinagmulan na URL\: {0}

ascanrules.testpersistentxssprime.name=Cross Site Scripting (Nagpupumilit) - Prime
ascanrules.testpersistentxssprime.misc=N/A

ascanrules.testpersistentxssspider.name=Cross Site Scripting (Nagpupumilit) - Spider
ascanrules.testpersistentxssspider.misc=N/A

ascanrules.testsqlinjection.name=SQL Injection
ascanrules.testsqlinjection.desc=Maaring makapag-SQL injection.
ascanrules.testsqlinjection.soln=Huwag magtiwala sa client side na pagpasok, sa kahit na mayroong client side validation sa lugar. \nSa pangkahalatan, ang uri ng sinuri sa lahat ng datos sa server side.\nKung ang aplikasyon at gumagamit ng JDBC, paggamit ng PreparedStatement o CallableStatement, kasama ang mga parameters na nilagpasan '?'\nKung ang aplikasyon ay gumagamit ng ASP, paggamit ng ADO Command Objects kasama ang strong na uli ng pagsusuri at mga parameterized queries.\nKung ang database Store Procedures ay pwedeng magamit, gamitin ang mga ito.\nHuwag i-concatenate strings sa mga queries sa paggamit ng simple string concatenation.\nHuwag gumawa ng dynamic SQL na mga queries gamit ang simple string concatenation.\nTakasan ang lahat ng datos na matatanggap na galing sa client.\nI-apply ang 'whitelist' sa mga katanggap-tanggap na characters o isang 'blacklist' na hindi katanggap-tanggap na mga characters sa user input.\nI-apply ang simulain, iwasan ang paggamit ng  'sa' o 'db-owner' database users. Ito ay hindi nagtatanggal ng SQL Injection, kundi pinapaliit nito ang impact.\nIpagkaloob ang pinakamababang database access na kinakailangan para sa aplikasyon.
ascanrules.testsqlinjection.refs=https\://www.owasp.org/index.php/Top_10_2010-A1\nhttps\://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet
ascanrules.testsqlinjection.alert.errorbased.attack=[{0}] field\: [{1}], halaga [{2}]
ascanrules.testsqlinjection.alert.errorbased.differentiation.attack=Orihinal na halaga\: [{0}]. Binago na halaga\: [{1}]. Hawak na Halaga\: [{2}]
ascanrules.testsqlinjection.alert.booleanbased.attack=[{0}] field\: [{1}], halaga [{2}]
ascanrules.testsqlinjection.alert.unionbased.attack=[{0}] field\: [{1}], halaga [{2}]
ascanrules.testsqlinjection.alert.errorbased.extrainfo=RDBMS [{0}] lamang, ang ibinigay na maling mensahe regular expression [{1}] ay tumugma sa mga HTML results.\nAng butas ay nalaman sa pamamagitan ng pag-manipulate sa parameter na sanhi sa database error na mensahe para maibalik at malaman
ascanrules.testsqlinjection.alert.unionbased.extrainfo=RDBMS [{0}] lamang, ang ibinigay na UNION-specific na maling mensahe sa regular expression [{1}] ay tumugma sa mga HTML results\nAng butas ay nalaman sa pamamagitan ng pag-manipulate sa parameter sa pamamagitan ng SQL ''UNION'' clause para sa sanhi ng database na maling mensahe na ibabalik at kinikilala
ascanrules.testsqlinjection.alert.expressionbased.extrainfo=Ang orihinal na pahinang mga resulta ay matagumpay na nakokopya gamit ang expression [{0}] gaya ng parameter na halaga\nAng halaga ng parameter ay binago ay {1}stripped mula sa HTML na output para sa layunin ng paghahambing
ascanrules.testsqlinjection.alert.orderbybased.extrainfo=Ang orihinal na pahina ng mga resulta ay matagumpay na nakokopya gamit ang "ORDER BY" expression [{0}] gaya ng parameter na halaga\nAng halaga ng parameter ay binago ay {1}stripped na mula sa HTML na output para sa layunin sa paghahambing
ascanrules.testsqlinjection.alert.errorbased.httpstatuscode.extrainfo=Hindi nabago na mga mensahe ay binigay na HTTP status [{0}], binago na mensahe ay ibinigay na HTTP status [{1}]
ascanrules.testsqlinjection.alert.errorbased.differentiation.extrainfo=Hindi nabago na mensahe ay ibinigay sa HTTP status [{0}], haba ng katawan [{1}], binago na mensahe ay ibinigay sa HTTP status [{2}], haba ng katawan. Ang pangatlong (non-SQL injection ay naglalaman ng halaga) ibinigay ang HTTP status [{4}], haba ng katawan [{5}]
ascanrules.testsqlinjection.alert.booleanbased.extrainfo=Ang mga resulta ng pahina ay matagumpay na na-manipulate gamit ang boolean na mga conditions [{0}] at [{1}]\nAng halaga ng parameter ay binago ay {2}stripped mula sa HTML na output para sa layunin ng paghahambing
ascanrules.testsqlinjection.alert.booleanbased.extrainfo.dataexists=Datos ay binalik para sa orihinal na parameter. \nAng kahinaan ay nagtukoy ng matagumpay na pinagbabawal sa datos na orihinal na nagbalik, sa pamamgitan ng pag-manipulate sa paramater
ascanrules.testsqlinjection.alert.booleanbased.extrainfo.datanotexists=Datos ay hindi bumalik para sa orihinal na parameter.\nAng kahinaan ay natukoy ng matagumpay na nagbabalik nga maraming datos kumpara sa orihinal na binalik, sa pag-manipulate sa parameter
ascanrules.testsqlinjection.alert.timebased.extrainfo=Ang query time ay nakokontrol gamit sa parameter value [{0}], na naging dahilan sa kahilingan upang makuha ng [{1} millisecondsm nang ang orihinal na hindi nabagong query na may halaga [{2}] pagkuha [{3}] milliseconds 
ascanrules.testsqlinjection.authbypass.name=SQL Injection - Pagpapatunay na Bypass
ascanrules.testsqlinjection.authbypass.desc=SQL injection ay maaring maging posible sa isang pahina sa pag-login, posibleng nagpapahintulot sa pagpapatunay na mekanismo sa aplikasyon upang ma-bypassed 

ascanrules.testexternalredirect.name=Panlabas na Redirect
ascanrules.testexternalredirect.reason.location.header=Ang sagot ay naglalaman ng isang redirect sa kanyang lokasyon na header na kung saan ay nagpapahintulot sa isang panlabas na Url na maaring itakda.
ascanrules.testexternalredirect.reason.location.meta=Ang sagot ay naglalaman ng isang redirect sa kanyang meta http-equiv tag para sa 'Lokasyon' na kung saan nagpapahintulot sa panlabas na Url na maaring itakda.
ascanrules.testexternalredirect.reason.refresh.header=Ang sagot ay naglalaman ng isang redirect sa kanyang Refresh header na kung saan nagpapahintulot sa isang panglabas na Url na maaring itakda.
ascanrules.testexternalredirect.reason.refresh.meta=Ang sagot ay naglalaman ng isang redirect sa kanyang meta http-equiv tag para sa 'Refresh' na kung saan nagpapahintulot sa panlabas na Url na maaring itakda.
ascanrules.testexternalredirect.reason.javascript=Ang sagot ay naglalaman ng isang redirect sa kanyang JavaScript code na kung saan ay nagpapahintulot sa isang panlabas na Url na maaring itakda.
ascanrules.testexternalredirect.reason.notfound=Walang dahilan na makita para dito...

ascanrules.codeinjectionplugin.name=Server Side Code Injection
ascanrules.codeinjectionplugin.name.asp=Server Side Code Injection - ASP Code Injection
ascanrules.codeinjectionplugin.name.php=Server Side Code Injection - PHP Code Injection
ascanrules.codeinjectionplugin.desc=Isang code injection ay maaring posibleng kabilang ang custom code na kabilang ang sinusuri sa pamamagitan ng script engine
ascanrules.codeinjectionplugin.soln=Huwag magtiwala sa client side input, kahit na mayroong client side validation sa lugar.\nSa pangkalahatan, suriin ang lahat ng mga datos na nasa server side at takasan ang lahat na natanggap mula sa client.\n Iwasan ang paggamit sa eval() na mga functions na pinagsama sa user input na datos.
ascanrules.codeinjectionplugin.refs=http\://cwe.mitre.org/data/definitions/94.html\nhttps\://www.owasp.org/index.php/Direct_Dynamic_Code_Evaluation_('Eval_Injection')

ascanrules.testdirectorybrowsing.name=Direktoryo sa pagba-browse
ascanrules.testdirectorybrowsing.desc=Ito ay posible upang tingnan an listahan sa direktoryo. Listahan ng direktoryo ay ibubunyag ang mga nakatagong mga scripts, magsana ng mga files, i-backup ang mga source files at iba pa na maaring ma-access na mabasa ang sensitibong impormasyon.
ascanrules.testdirectorybrowsing.soln=Huwag paganahin ang pag-browse sa direktoryo. Kung ito ay kinakailangan, tiyakin na ang mga listahan ng mga files ay hindi nag-induce na mga panganib.
ascanrules.testdirectorybrowsing.refs=http\://httpd.apache.org/docs/mod/core.html\#options\nhttp\://alamo.satlug.org/pipermail/satlug/2002-February/000053.html\n

ascanrules.testinjectioncrlf.name=CRLF Injection
ascanrules.testinjectioncrlf.desc=Cookie ay maaring magtakda via CRLF injection. Maaring rin itong posible na itakda sa artibitrary HTTP response headers,. Bukod pa dito, ng maingat na isinulong ng injected na sagot gamit ang cross-site script, cache poisoning na kahinaan ay posibleng umiiral.
ascanrules.testinjectioncrlf.soln=I-type check ang  pinadala na parameter nang maayos. Huwag itong ipahintulot amg CRLF na i-inject sa pamamagitan ng filtering CRLF.
ascanrules.testinjectioncrlf.refs=http\://www.watchfire.com/resources/HTTPResponseSplitting.pdf\nhttp\://webappfirewall.com/lib/crlf-injection.txtnull\nhttp\://www.securityfocus.com/bid/9804

ascanrules.testparametertamper.name=Parameter Tampering
ascanrules.testparametertamper.desc=Parameter manipulation caused ng isang error na pahina o Java stack trade na i-display. Ang indicate lack na ito sa exception handling at potential na bahagi para sa isinusulong.
ascanrules.testparametertamper.soln=Tingnan ang sanhi sa mga mali at ayusin ito. Huwag kang magtiwala sa client side input at i-enforce ang mahigpit na check sa server side. Bukod sa, huliin ang exception properly. Gamitin ang isang generic 500 na mail na pahina para sa panloob na server error.

ascanrules.testpathtraversal.name=Path Traversal

ascanrules.testremotefileinclude.name=Remote File Inclusion

ascanrules.testserversideinclude.name=Server Side Include
ascanrules.testserversideinclude.desc=Ilang mga parameters ay posibleng sanhi sa Server Side Include na mga commands para ma-execute. Ito ay nagbibigay pahintuloy sa database koneksyon o arbitary code na i-execute.
ascanrules.testserversideinclude.soln=Huwag magtiwala sa client side input at i-enforce ang isang tight check sa server side. Huwag paganahin ang server side na kasali.\n
Refer=sa manwal na huwag paganahin ang Server Side ay kasama.\n\nGamitin ang pinakamaliit na pribilehiyo upang mapagana ang iyong web server o application server.\n\nPara sa Apache, huwag paganahin ang sumusunod \:\n\nAddType application/x-httpd-cgi .cgi\n\nAddType text/x-server-parsed-html .html
ascanrules.testserversideinclude.refs=http\://www.carleton.ca/~dmcfet/html/ssi.html


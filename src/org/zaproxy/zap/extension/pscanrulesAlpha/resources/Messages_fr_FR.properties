#X-Generator: crowdin.com
# This file defines the default (English) variants of all of the internationalised messages
pscanalpha.desc=R\u00e8gles de balayage passif - alpha

pscanalpha.cookiesamesitescanner.name=Cookie Without SameSite Attribute
pscanalpha.cookiesamesitescanner.desc=Un cookie a \u00e9t\u00e9 d\u00e9finie sans les SameSite attribut, ce qui signifie que le cookie peut \u00eatre envoy\u00e9 en tant que r\u00e9sultat d'un 'cross-site' la demande. \nLe SameSite attribut est une lutte efficace contre mesure cross-site request forgery, cross-site inclusion de script, et le timing des attaques.
pscanalpha.cookiesamesitescanner.badval=Un cookie a \u00e9t\u00e9 fix\u00e9 avec une d\u00e9faillance de SameSite valeur de l'attribut, ce qui signifie que le cookie peut \u00eatre envoy\u00e9 en tant que r\u00e9sultat d'un 'cross-site' la demande. \nLe SameSite attribut est une lutte efficace contre mesure cross-site request forgery, cross-site inclusion de script, et le timing des attaques.
pscanalpha.cookiesamesitescanner.soln=Ensure that the SameSite attribute is set to either 'lax' or ideally 'strict' for all cookies.
pscanalpha.cookiesamesitescanner.refs=https\://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site

pscanalpha.examplefile.name=Un exemple de r\u00e8gle de balayage passif qui charge les donn\u00e9es d'un fichier
pscanalpha.examplefile.desc=Ajouter plus d'informations sur la vuln\u00e9rabilit\u00e9 ici
pscanalpha.examplefile.other=Pour des informations ne rentrant dans aucune des autres sections
pscanalpha.examplefile.soln=Une description g\u00e9n\u00e9rale sur la mani\u00e8re de r\u00e9soudre le probl\u00e8me
pscanalpha.examplefile.refs=http\://zaproxy.blogspot.co.uk/2014/04/hacking-zap-3-passive-scan-rules.html

pscanalpha.insecureformload.name=Transition de HTTP vers HTTPS dangereuse lors de l'envoi du formulaire
pscanalpha.insecureformload.desc=Cette v\u00e9rification recherche des pages HTTP non s\u00e9curis\u00e9es qui h\u00e9bergent des formulaires HTTPS. Le probl\u00e8me est qu\u2019une page HTTP non s\u00e9curis\u00e9e peut facilement \u00eatre d\u00e9tourn\u00e9e par MITM et le formulaire HTTPS s\u00e9curis\u00e9 peut \u00eatre remplac\u00e9 ou usurp\u00e9.
pscanalpha.insecureformload.refs=\ 
pscanalpha.insecureformload.soln=Utilisez HTTPS pour des pages h\u00e9bergeant des formulaires s\u00e9curis\u00e9s.
pscanalpha.insecureformload.exploit=\ 
pscanalpha.insecureformload.extrainfo=La r\u00e9ponse \u00e0 la requ\u00eate HTTP suivante inclut une valeur d\u2019attribut de l''action du formulaire HTTPS\:\n\n{0}Le contexte \u00e9tait\:\n\n{1}

pscanalpha.insecureformpost.name=Transition de HTTPS vers HTTP dangereuse lors de l'envoi du formulaire
pscanalpha.insecureformpost.desc=Cette v\u00e9rification identifie les pages HTTPS s\u00e9curis\u00e9es h\u00e9bergeant un formulaire HTTP non s\u00e9curis\u00e9. Le probl\u00e8me est qu\u2019une page s\u00e9curis\u00e9e bascule vers une page non s\u00e9curis\u00e9e lorsque des donn\u00e9es sont transf\u00e9r\u00e9es au tranvers d\u2019un formulaire. L\u2019utilisateur peut penser qu\u2019il envoie des donn\u00e9es vers une page s\u00e9curis\u00e9e, alors qu'elles ne le sont pas.
pscanalpha.insecureformpost.refs=\ 
pscanalpha.insecureformpost.soln=Assurez-vous que des donn\u00e9es sensibles ne sont envoy\u00e9es que sur des canaux s\u00e9curis\u00e9s HTTPS.
pscanalpha.insecureformpost.exploit=\ 
pscanalpha.insecureformpost.extrainfo=La r\u00e9ponse \u00e0 la requ\u00eate HTTPS suivante inclut une valeur d\u2019attribut de l''action du formulaire HTTP\:\n\n{0}Le contexte \u00e9tait\:\n\n{1}

pscanalpha.usercontrolledcharset.name=Jeu de caract\u00e8res contr\u00f4lable par l\u2019utilisateur
pscanalpha.usercontrolledcharset.desc=Cette v\u00e9rification v\u00e9rifie l'entr\u00e9e fournie par l\u2019utilisateur dans les param\u00e8tres de cha\u00eene de requ\u00eate et les donn\u00e9es POST pour identifier o\u00f9 le Content-Type ou le meta tag charset pourraient \u00eatre contr\u00f4l\u00e9s par l\u2019utilisateur. Ces d\u00e9clarations de charset devraient toujours \u00eatre d\u00e9clar\u00e9es par l\u2019application. Si un attaquant peut contr\u00f4ler le jeu de caract\u00e8res de la r\u00e9ponse, il pourrait manipuler le code HTML pour ex\u00e9cuter des XSS ou d'autres attaques.
pscanalpha.usercontrolledcharset.refs=\ 
pscanalpha.usercontrolledcharset.soln=Imposez UTF-8 dans toutes les d\u00e9clarations de jeu de caract\u00e8res. Si l\u2019entr\u00e9e utilisateur doit d\u00e9cider d\u2019une d\u00e9claration de charset, veillez \u00e0 ce que seule une liste autoris\u00e9e est utilis\u00e9e.
pscanalpha.usercontrolledcharset.exploit=Un attaquant contr\u00f4lant la valeur de jeu de caract\u00e8res de l\u2019\u00e9l\u00e9ment <meta> est en mesure de d\u00e9clarer UTF-7 et peut \u00e9galement inclure une charge utile dans le document HTML, afin qu\u2019elle soit par la suite interpr\u00e9t\u00e9e comme UTF-7. En encodant sa charge utile avec UTF-7, l\u2019attaquant peut contourner les protections XSS du c\u00f4t\u00e9 serveur et int\u00e9grer un script dans la page.
pscanalpha.usercontrolledcharset.extrainfo=Un attribut [{1}] de la balise [{0}] \n\nL\u2019entr\u00e9e utilisateur trouv\u00e9e \u00e9tait\:\n{2} \={3}\n\nLa valeur du jeu de caract\u00e8re contr\u00f4l\u00e9e \u00e9tait\:\n{4}

pscanalpha.usercontrolledcookie.name=Empoisonnement de cookie
pscanalpha.usercontrolledcookie.desc=Cette v\u00e9rification porte sur l'entr\u00e9e fournie par l\u2019utilisateur dans les param\u00e8tres de cha\u00eene de requ\u00eate et dans les donn\u00e9es POST, afin d'identifier o\u00f9 les param\u00e8tres de cookie peuvent \u00eatre contr\u00f4l\u00e9s. Ceci s\u2019appelle un empoisonnement de cookie, et cela peut devenir exploitable dans certaines conditions. Cependant, permettre \u00e0 des param\u00e8tres d\u2019URL de d\u00e9finir des valeurs de cookie est g\u00e9n\u00e9ralement consid\u00e9r\u00e9 comme un bogue.
pscanalpha.usercontrolledcookie.refs=http\://websecuritytool.codeplex.com/wikipage?title\=Checks\#user-controlled-cookie
pscanalpha.usercontrolledcookie.soln=Ne laissez pas les entr\u00e9es utilisateur contr\u00f4ler les noms de cookie ou leurs valeurs. Si certains param\u00e8tres de requ\u00eate doivent \u00eatre d\u00e9finis dans les valeurs du cookie, assurez-vous de filtrer les points-virgules qui peuvent servir de d\u00e9limiteurs de paire nom/valeur.
pscanalpha.usercontrolledcookie.exploit.get=Un attaquant peut \u00eatre capable d\u2019empoisonner les valeurs du cookie par l\u2019interm\u00e9diaire de param\u00e8tres d\u2019URL.  Essayez d\u2019injecter un point-virgule pour voir si vous pouvez ajouter des valeurs au cookie (p.ex. nom\=controlledValue; nom\=anotherValue;).
pscanalpha.usercontrolledcookie.exploit.post=Un attaquant peut \u00eatre capable d\u2019empoisonner les valeurs du cookie par l\u2019interm\u00e9diaire de param\u00e8tres POST. Afin de v\u00e9rifier s\u2019il s\u2019agit d\u2019un probl\u00e8me plus grave, vous devriez essayer de renvoyer cette requ\u00eate sous forme de GET, avec le param\u00e8tre POST inclu comme param\u00e8tre dans la requ\u00eate. Par exemple\: http\://nottrusted.com/page?value\=maliciousInput.  \n\n
pscanalpha.usercontrolledcookie.extrainfo=Cela a \u00e9t\u00e9 identifi\u00e9 \u00e0\:\n\n{0}\n\nL\u2019entr\u00e9e utilisateur a \u00e9t\u00e9 trouv\u00e9e dans le cookie suivant\:\n{1}\n\nL\u2019entr\u00e9e utilisateur \u00e9tait\:\n{2} \={3}

pscanalpha.usercontrolledjavascriptevent.name=\u00c9v\u00e9nement JavaScript contr\u00f4lable par l'utilisateur (XSS)
pscanalpha.usercontrolledjavascriptevent.desc=Cette v\u00e9rification porte sur l\u2019entr\u00e9e utilisateur fournie en param\u00e8tre de requ\u00eate et sur les donn\u00e9es POST, afin d'identifier o\u00f9 certaines valeurs d\u2019attribut HTML peuvent \u00eatre contr\u00f4l\u00e9es. Ceci d\u00e9tecte des "points chauds" pour le XSS (cross-site scripting), qui n\u00e9cessiteront un examen plus approfondi par un analyste de s\u00e9curit\u00e9 pour en d\u00e9terminer l\u2019exploitabilit\u00e9.            
pscanalpha.usercontrolledjavascriptevent.refs=http\://websecuritytool.codeplex.com/wikipage?title\=Checks\#user-javascript-event
pscanalpha.usercontrolledjavascriptevent.soln=Validez toutes les entr\u00e9es et assainissez les sorties avant d\u2019\u00e9crire sur un quelconque \u00e9v\u00e9nement javascript on*.
pscanalpha.usercontrolledjavascriptevent.exploit=\ 
pscanalpha.usercontrolledjavascriptevent.extrainfo=Au moins un \u00e9v\u00e9nement javascript contr\u00f4l\u00e9 par l\u2019utilisateur a \u00e9t\u00e9 trouv\u00e9. L''exploitabilit\u00e9 devra \u00eatre d\u00e9termin\u00e9e manuellement. La page \u00e0 l\u2019adresse\:\n\n{0}"\n\ninclut l\u2019\u00e9v\u00e9nement Javascript suivant qui peut \u00eatre contr\u00f4l\u00e9 par l\u2019attaquant\:\n\nL''entr\u00e9e utilisateur a \u00e9t\u00e9 trouv\u00e9e dans les donn\u00e9es suivantes d\u2019un \u00e9v\u00e9nement [{1}]\:\n{2}\n\nL\u2019entr\u00e9e utilisateur \u00e9tait\:\n{3}

pscanalpha.usercontrolledjavascriptproperty.name=Propri\u00e9t\u00e9 JavaScript contr\u00f4lable par l'utilisateur (XSS)
pscanalpha.usercontrolledjavascriptproperty.desc=Cette v\u00e9rification porte sur l\u2019entr\u00e9e utilisateur fournie en param\u00e8tre de requ\u00eate et sur les donn\u00e9es POST, afin d'identifier o\u00f9 certaines propri\u00e9t\u00e9s javascript (p.ex. createElement src) peuvent \u00eatre contr\u00f4l\u00e9es. Ceci d\u00e9tecte des "points chauds" pour le XSS (cross-site scripting), qui n\u00e9cessiteront un examen plus approfondi par un analyste de s\u00e9curit\u00e9 pour en d\u00e9terminer l\u2019exploitabilit\u00e9.            
pscanalpha.usercontrolledjavascriptproperty.refs=http\://websecuritytool.codeplex.com/wikipage?title\=Checks\#user-controlled-javascript-reference
pscanalpha.usercontrolledjavascriptproperty.soln=Ne permettez pas axu entr\u00e9es utilisateur de contr\u00f4ler les r\u00e9f\u00e9rences de localisation de source javascript.
pscanalpha.usercontrolledjavascriptproperty.exploit=\ 
pscanalpha.usercontrolledjavascriptproperty.extrainfo=La page \u00e0 l\u2019adresse suivante semble contenir des entr\u00e9es utilisateur dans une valeur de propri\u00e9t\u00e9 javascript\:\n\n{0}L\u2019entr\u00e9e utilisateur trouv\u00e9e \u00e9tait\:\n{1} \={2}\n\nLe contexte \u00e9tait\:\n{3}

pscanalpha.usercontrolledhtmlattributes.name=Attribut d\u2019\u00e9l\u00e9ment HTML contr\u00f4lable par l\u2019utilisateur (XSS potentiel)
pscanalpha.usercontrolledhtmlattributes.desc=Cette v\u00e9rification porte sur entr\u00e9e fourni par l'utilisateur dans les param\u00e8tres de cha\u00eene de requ\u00eate et de publier des donn\u00e9es afin d'identifier o\u00f9 certains HTML les valeurs d'attribut peut \u00eatre contr\u00f4l\u00e9. Cette offre de d\u00e9tecter les points chauds pour les attaques de type XSS (cross-site scripting) qui va exiger un nouvel examen par un analyste de la s\u00e9curit\u00e9 pour d\u00e9terminer l'exploitabilit\u00e9.
pscanalpha.usercontrolledhtmlattributes.refs=http\://websecuritytool.codeplex.com/wikipage?title\=Checks\#user-controlled-html-attribute
pscanalpha.usercontrolledhtmlattributes.soln=Valider toutes les entr\u00e9es et les d\u00e9sinfecter la sortie en avant l'\u00e9criture d'attributs HTML.
pscanalpha.usercontrolledhtmlattributes.exploit=\ 
pscanalpha.usercontrolledhtmlattributes.extrainfo=User-controlled HTML attribute values were found. Try injecting special characters to see if XSS might be possible. The page at the following URL\:\r\n\r\n{0}\r\n\r\nappears to include user input in\: \r\n\r\na(n) [{1}] tag [{2}] attribute \r\n\r\nThe user input found was\:\r\n{3}\={4}\r\n\r\nThe user-controlled value was\:\r\n{5}

pscanalpha.usercontrolledopenredirect.name=Open Redirect
pscanalpha.usercontrolledopenredirect.desc=Ouvrir les redirections sont l'un de OWASP 2010 Top Dix des vuln\u00e9rabilit\u00e9s. Cette v\u00e9rification porte sur entr\u00e9e fourni par l'utilisateur dans les param\u00e8tres de cha\u00eene de requ\u00eate et de publier des donn\u00e9es afin d'identifier o\u00f9 ouvrir redirige pourrait \u00eatre possible. Ouvrir les redirections se produire lorsqu'une application permet \u00e0 l'utilisateur d'entr\u00e9e fourni (p. ex. http\://nottrusted.com) pour la commande d'un hors site de redirection. Ce est g\u00e9n\u00e9ralement une jolie fa\u00e7on pr\u00e9cise, pour trouver o\u00f9 301 ou 302 redirige pourrait \u00eatre exploit\u00e9e par des spammeurs ou des attaques de phishing
pscanalpha.usercontrolledopenredirect.soln=Pour \u00e9viter de l'ouvrir rediriger la vuln\u00e9rabilit\u00e9, les param\u00e8tres de l'application script/programme doit \u00eatre valid\u00e9 avant d'envoyer code HTTP 302 (redirection) pour le navigateur client. Mettre en \u0153uvre s\u00fbr rediriger les fonctionnalit\u00e9s que seuls les redirige vers URI's relatif, ou une liste des domaines de confiance
pscanalpha.usercontrolledopenredirect.exploit=An attacker could supply a user with the following link\: http\://example.com/example.php?url\=http\://malicious.example.com
pscanalpha.usercontrolledopenredirect.refs=https\://www.owasp.org/index.php/Open_redirect\nhttps\://owasp.org/index.php/Top_10_2010-A10-Unvalidated_Redirects_and_Forwards\nhttps\://cwe.mitre.org/data/definitions/601.html
pscanalpha.usercontrolledopenredirect.extrainfo.get=La 301 ou 302 r\u00e9ponse \u00e0 une demande de l'URL suivante semblait contenir des entr\u00e9es d'utilisateur dans l'en-t\u00eate location\:\n\n
pscanalpha.usercontrolledopenredirect.extrainfo.post=Ouvert rediriger contr\u00f4l\u00e9 par des param\u00e8tres POST a \u00e9t\u00e9 d\u00e9tect\u00e9. Pour tester si c'est un probl\u00e8me plus grave, vous devriez essayer de le renvoyer cette demande comme une GET, avec le param\u00e8tre POST inclus comme un param\u00e8tre de cha\u00eene de requ\u00eate. Par exemple\: http\://nottrusted.com/page?url\=http\://lookout.net.\n\nLa 301 ou 302 r\u00e9ponse \u00e0 une demande de l'URL suivante semblait contenir des entr\u00e9es d'utilisateur dans l'en-t\u00eate location\:\n\n
pscanalpha.usercontrolledopenredirect.extrainfo.common={0}\r\n\r\nThe user input found was\:\r\n\r\n{1}\={2}\r\n\r\nThe context was\:\r\n\r\n{3}

pscanalpha.sourcecodedisclosure.name=Source Code Disclosure
pscanalpha.sourcecodedisclosure.desc=Code Source de l'Application a \u00e9t\u00e9 divulgu\u00e9e par le serveur web
pscanalpha.sourcecodedisclosure.soln=S'assurer que le Code Source de l'application n'est pas disponible avec d'autres extensions, et de s'assurer que le code source n'est pas pr\u00e9sent dans d'autres fichiers ou de donn\u00e9es d\u00e9ploy\u00e9es sur le serveur web, ou servis par le serveur web. 
pscanalpha.sourcecodedisclosure.refs=http\://blogs.wsj.com/cio/2013/10/08/adobe-source-code-leak-is-bad-news-for-u-s-government/
pscanalpha.sourcecodedisclosure.extrainfo={0}

pscanalpha.hashdisclosure.name=Hash Disclosure
pscanalpha.hashdisclosure.desc=A hash was disclosed by the web server
pscanalpha.hashdisclosure.soln=S'assurer que les hachages sont utilis\u00e9s pour prot\u00e9ger les informations d'identification ou d'autres ressources ne sont pas divulgu\u00e9s par le serveur web ou de base de donn\u00e9es. Il n'y a g\u00e9n\u00e9ralement pas d'obligation pour le hachage de mots de passe pour \u00eatre accessible par le navigateur web.      
pscanalpha.hashdisclosure.refs=https\://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure\nhttp\://projects.webappsec.org/w/page/13246936/Information%20Leakage\nhttp\://openwall.info/wiki/john/sample-hashes
pscanalpha.hashdisclosure.extrainfo={0}

pscanalpha.timestampdisclosure.name=Timestamp Disclosure
pscanalpha.timestampdisclosure.desc=A timestamp was disclosed by the application/web server
pscanalpha.timestampdisclosure.soln=V\u00e9rifier manuellement que l'horodatage des donn\u00e9es n'est pas sensible, et que les donn\u00e9es ne peuvent pas \u00eatre agr\u00e9g\u00e9s \u00e0 divulguer des mod\u00e8les exploitables.
pscanalpha.timestampdisclosure.refs=https\://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure\nhttp\://projects.webappsec.org/w/page/13246936/Information%20Leakage
pscanalpha.timestampdisclosure.extrainfo={0}, which evaluates to\: {1}

pscanalpha.base64disclosure.name=Base64 Disclosure
pscanalpha.base64disclosure.desc=Base64 encoded data was disclosed by the application/web server
pscanalpha.base64disclosure.soln=Manually confirm that the Base64 data does not leak sensitive information, and that the data cannot be aggregated/used to exploit other vulnerabilities.
pscanalpha.base64disclosure.refs=https\://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure\nhttp\://projects.webappsec.org/w/page/13246936/Information%20Leakage
pscanalpha.base64disclosure.extrainfo={1}

pscanalpha.base64disclosure.viewstate.name=ASP.NET ViewState Disclosure
pscanalpha.base64disclosure.viewstate.desc=An ASP.NET ViewState was disclosed by the application/web server
pscanalpha.base64disclosure.viewstate.soln=Manually confirm that the ASP.NET ViewState does not leak sensitive information, and that the data cannot be aggregated/used to exploit other vulnerabilities.
pscanalpha.base64disclosure.viewstate.refs=http\://msdn.microsoft.com/en-us/library/bb386448.aspx\nhttps\://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure\nhttp\://projects.webappsec.org/w/page/13246936/Information%20Leakage
pscanalpha.base64disclosure.viewstate.extrainfo={0}

pscanalpha.base64disclosure.viewstatewithoutmac.name=ASP.NET ViewState Integrity
pscanalpha.base64disclosure.viewstatewithoutmac.desc=The application does not use a Message Authentication Code (MAC) to protect the integrity of the ASP.NET ViewState, which can be tampered with by a malicious client
pscanalpha.base64disclosure.viewstatewithoutmac.soln=Ensure that all ASP.NET ViewStates are protected from tampering, by using a MAC, generated using a secure algorithm, and a secret key on the server side. This is the default configuration on modern ASP.NET installation, by may be over-ridden programatically, or via the ASP.NET configuration.
pscanalpha.base64disclosure.viewstatewithoutmac.refs=http\://msdn.microsoft.com/en-us/library/bb386448.aspx\nhttps\://www.jardinesoftware.net/2012/02/06/asp-net-tampering-with-event-validation-part-1/
pscanalpha.base64disclosure.viewstatewithoutmac.extrainfo={0}

pscanalpha.directorybrowsing.name=Directory Browsing
pscanalpha.directorybrowsing.desc=Il est possible d'afficher la liste du contenu du r\u00e9pertoire. Les listes de r\u00e9pertoires peuvent r\u00e9v\u00e9ler des scripts cach\u00e9s, les fichiers , source de la sauvegarde des fichiers, etc, qui seront accessibles \u00e0 r\u00e9v\u00e9ler des informations sensibles.
pscanalpha.directorybrowsing.soln=Configure the web server to disable directory browsing. 
pscanalpha.directorybrowsing.refs=https\://cwe.mitre.org/data/definitions/548.html
pscanalpha.directorybrowsing.extrainfo={0}

pscanalpha.heartbleed.name=Heartbleed OpenSSL Vulnerability (Indicative)
pscanalpha.heartbleed.desc=Le TLS et DTLS impl\u00e9mentations dans OpenSSL 1.0.1 avant 1.0.1 g ne g\u00e8rent pas correctement les Pulsations de l'Extension de paquets, qui permet \u00e0 des attaquants distants d'obtenir des informations sensibles \u00e0 partir de la m\u00e9moire du processus via con\u00e7u paquets qui d\u00e9clenchent un tampon plus de lire, potentiellement de divulguer des informations sensibles.\t
pscanalpha.heartbleed.soln=Mettez \u00e0 jour OpenSSL avec la version 1.0.1g ou ult\u00e9rieure. R\u00e9-\u00e9mettez les certificats HTTPS. Changer les cl\u00e9s priv\u00e9es asym\u00e9triques et les cl\u00e9s secr\u00e8tes partag\u00e9es, car elles peuvent avoir \u00e9t\u00e9 compromises, sans aucun avertissement dans les fichiers journaux du serveur.
pscanalpha.heartbleed.refs=http\://cvedetails.com/cve-details.php?t\=1&cve_id\=CVE-2014-0160
pscanalpha.heartbleed.extrainfo={0} est en cours d''utilisation. Notez toutefois que la version pourrait contenir r\u00e9troport\u00e9s des correctifs de s\u00e9curit\u00e9, et donc, la question pourrait \u00eatre un faux positif. Ce qui est commun sur Red Hat, par exemple.

pscanalpha.crossdomain.name=Mauvaise configuration inter-domaines
pscanalpha.crossdomain.desc=Navigateur Web chargement de donn\u00e9es peut \u00eatre possible, en raison d'une Origine de la Croix de Partage de Ressources (CORS) mauvaise configuration sur le serveur web
pscanalpha.crossdomain.soln=Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).\nConfigure the "Access-Control-Allow-Origin" HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.
pscanalpha.crossdomain.refs=http\://www.hpenterprisesecurity.com/vulncat/en/vulncat/vb/html5_overly_permissive_cors_policy.html
pscanalpha.crossdomain.extrainfo=De la CORS mauvaise configuration sur le serveur web permet \u00e0 la croix-domaine de demandes de lecture de l'arbitraire tiers domaines, non authentifi\u00e9 \u00e0 l'aide d'Api sur ce domaine. Navigateur Web impl\u00e9mentations ne permettent pas de l'arbitraire des tiers pour lire la r\u00e9ponse d'authentification APIs, cependant. Cela r\u00e9duit quelque peu le risque. Cette erreur de configuration peut \u00eatre utilis\u00e9 par un attaquant d'acc\u00e9der \u00e0 des donn\u00e9es qui sont disponibles dans un non authentifi\u00e9 de mani\u00e8re, mais qui utilise une autre forme de s\u00e9curit\u00e9, telles que l'adresse IP de liste-blanche.

pscanalpha.serverheader.scanner.name=HTTP Server Response Header Scanner
pscanalpha.serverheaderversioninfoleak.name=Server Leaks Version Information via "Server" HTTP Response Header Field
pscanalpha.serverheaderversioninfoleak.desc=The web/application server is leaking version information via the "Server" HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.
pscanalpha.serverheaderinfoleak.name=Server Leaks its Webserver Application via "Server" HTTP Response Header Field
pscanalpha.serverheaderinfoleak.desc=Le web/serveur d'application est une fuite de l'application qu'il utilise comme un serveur web via le "Serveur" t\u00eate de r\u00e9ponse HTTP. L'acc\u00e8s \u00e0 ces informations peut faciliter les attaquants d'identifier d'autres facteurs de vuln\u00e9rabilit\u00e9 de votre site web/serveur d'application est soumis. Cette seule information, c'est \u00e0 dire sans une cha\u00eene de version, n'est pas tr\u00e8s dangereux pour la s\u00e9curit\u00e9 d'un serveur, n\u00e9anmoins cette information dans le champ d'en-t\u00eate de r\u00e9ponse est presque toujours inutile et donc juste obsol\u00e8te attaquer vecteur.
pscanalpha.serverheaderinfoleak.general.refs=http\://httpd.apache.org/docs/current/mod/core.html\#servertokens\nhttp\://msdn.microsoft.com/en-us/library/ff648552.aspx\#ht_urlscan_007\nhttp\://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp\://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html
pscanalpha.serverheaderinfoleak.general.soln=Ensure that your web server, application server, load balancer, etc. is configured to suppress the "Server" header or provide generic details.

pscanalpha.stricttransportsecurity.scanner.name=Strict-Transport-Security Header Scanner
pscanalpha.stricttransportsecurity.name=Strict-Transport-Security Header Not Set
pscanalpha.stricttransportsecurity.desc=HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.
pscanalpha.stricttransportsecurity.refs=https\://www.owasp.org/index.php/HTTP_Strict_Transport_Security\nhttps\://www.owasp.org/index.php/List_of_useful_HTTP_headers\nhttp\://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp\://caniuse.com/stricttransportsecurity\nhttp\://tools.ietf.org/html/rfc6797
pscanalpha.stricttransportsecurity.soln=Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.
pscanalpha.stricttransportsecurity.max.age.name=Strict-Transport-Security Disabled
pscanalpha.stricttransportsecurity.max.age.desc=A HTTP Strict Transport Security (HSTS) header was found, but it contains the directive max-age\=0 which disables the control and instructs browsers to reset any previous HSTS related settings. See RFC 6797 for further details.\nHTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL).
pscanalpha.stricttransportsecurity.max.age.refs=http\://tools.ietf.org/html/rfc6797\#section-6.2
pscanalpha.stricttransportsecurity.max.age.soln=Revoir la configuration de ce contr\u00f4le. S'assurer que votre serveur web, serveur d'application, \u00e9quilibrage de charge, etc. est configur\u00e9 pour d\u00e9finir Strict-Transport-Security, avec une valeur max-\u00e2ge.
pscanalpha.stricttransportsecurity.compliance.multiple.header.name=Strict-Transport-Security Multiple Header Entries (Non-compliant with Spec)
pscanalpha.stricttransportsecurity.compliance.multiple.header.desc=HTTP Strict Transport Security (HSTS) des en-t\u00eates ont \u00e9t\u00e9 trouv\u00e9s, une r\u00e9ponse aux multiples HSTS en-t\u00eate des entr\u00e9es n'est pas compatible avec la sp\u00e9cification (RFC 6797) et seule la premi\u00e8re HSTS en-t\u00eate seront trait\u00e9es que d'autres seront ignor\u00e9s par les agents d'utilisateur ou le HSTS politique peuvent \u00eatre appliqu\u00e9es de mani\u00e8re incorrecte.\nHTTP Strict Transport Security (HSTS) est un site web politique de s\u00e9curit\u00e9 m\u00e9canisme par lequel un serveur web d\u00e9clare que le respect, les agents utilisateurs (par exemple un navigateur web) sont \u00e0 interagir avec elle en utilisant seulement de s\u00e9curiser les connexions HTTPS (c'est \u00e0 dire HTTP couches sur TLS/SSL).
pscanalpha.stricttransportsecurity.compliance.multiple.header.refs=http\://tools.ietf.org/html/rfc6797\#section-8.1
pscanalpha.stricttransportsecurity.compliance.multiple.header.soln=S'assurer qu'un seul composant dans votre pile\: code, serveur web, serveur d'application, \u00e9quilibrage de charge, etc. est configur\u00e9 pour d\u00e9finir ou ajouter un HTTP Strict-Transport-Security (HSTS) de la t\u00eate.
pscanalpha.stricttransportsecurity.plain.resp.name=Strict-Transport-Security Header on Plain HTTP Response
pscanalpha.stricttransportsecurity.plain.resp.desc=A HTTP Strict Transport Security (HSTS) header was found, but HSTS headers are ignored on plain (non-HTTPS) responses.\nHTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL).
pscanalpha.stricttransportsecurity.plain.resp.refs=http\://tools.ietf.org/html/rfc6797\#section-8.1
pscanalpha.stricttransportsecurity.plain.resp.soln=Review the configuration of this control. Ensure that your web server, application server, load balancer, etc. is configured to set Strict-Transport-Security for HTTPS responses.
pscanalpha.stricttransportsecurity.compliance.max.age.missing.name=Strict-Transport-Security Missing Max-Age (Non-compliant with Spec)
pscanalpha.stricttransportsecurity.compliance.max.age.missing.desc=A HTTP Strict Transport Security (HSTS) header was found, but it is missing the max-age directive (or the directive is missing a value). See RFC 6797 for further details.\nHTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL).
pscanalpha.stricttransportsecurity.compliance.max.age.missing.refs=http\://tools.ietf.org/html/rfc6797\#section-6.2
pscanalpha.stricttransportsecurity.compliance.max.age.missing.soln=Revoir la configuration de ce contr\u00f4le. S'assurer que votre serveur web, serveur d'application, \u00e9quilibrage de charge, etc. est configur\u00e9 pour d\u00e9finir Strict-Transport-Security, avec une valeur max-\u00e2ge.
pscanalpha.stricttransportsecurity.compliance.meta.name=Strict-Transport-Security Defined via META (Non-compliant with Spec)
pscanalpha.stricttransportsecurity.compliance.meta.desc=A HTTP Strict Transport Security (HSTS) META tag was found, defining HTTP Strict Transport Security (HSTS) via a META tag is explicitly not supported by the spec (RFC 6797).
pscanalpha.stricttransportsecurity.compliance.meta.refs=http\://tools.ietf.org/html/rfc6797\#section-8.5
pscanalpha.stricttransportsecurity.compliance.meta.soln=Do not attempt to set HTTP Strict Transport Security (HSTS) via a META tag.
pscanalpha.stricttransportsecurity.compliance.max.age.malformed.name=Strict-Transport-Security Max-Age Malformed (Non-compliant with Spec)
pscanalpha.stricttransportsecurity.compliance.max.age.malformed.desc=Un HTTP Strict Transport Security (HSTS) de la t\u00eate a \u00e9t\u00e9 trouv\u00e9e, mais il contient des citations pr\u00e9c\u00e9dant la directive max-age (la valeur max-\u00e2ge peut \u00eatre cit\u00e9, mais la directive elle-m\u00eame ne peut pas \u00eatre). Voir la RFC 6797 pour plus de d\u00e9tails.\nHTTP Strict Transport Security (HSTS) est un site web politique de s\u00e9curit\u00e9 m\u00e9canisme par lequel un serveur web d\u00e9clare que le respect, les agents utilisateurs (par exemple un navigateur web) sont \u00e0 interagir avec elle en utilisant seulement de s\u00e9curiser les connexions HTTPS (c'est \u00e0 dire HTTP couches sur TLS/SSL).
pscanalpha.stricttransportsecurity.compliance.max.age.malformed.refs=http\://tools.ietf.org/html/rfc6797\#section-6.1
pscanalpha.stricttransportsecurity.compliance.max.age.malformed.soln=Revoir la configuration de ce contr\u00f4le. S'assurer que votre serveur web, serveur d'application, \u00e9quilibrage de charge, etc. est configur\u00e9 pour d\u00e9finir Strict-Transport-Security avec un format appropri\u00e9.
pscanalpha.stricttransportsecurity.compliance.malformed.content.name=Strict-Transport-Security Malformed Content (Non-compliant with Spec)
pscanalpha.stricttransportsecurity.compliance.malformed.content.desc=A HTTP Strict Transport Security (HSTS) header was found, but it contains some content that was not expected (perhaps curly quotes), the expectation is that the content be printable ASCII characters.
pscanalpha.stricttransportsecurity.compliance.malformed.content.refs=http\://tools.ietf.org/html/rfc6797
pscanalpha.stricttransportsecurity.compliance.malformed.content.soln=Revoir la configuration de ce contr\u00f4le. S'assurer que votre serveur web, serveur d'application, \u00e9quilibrage de charge, etc. est configur\u00e9 pour d\u00e9finir Strict-Transport-Security avec le contenu appropri\u00e9. 

pscanalpha.xpoweredbyheaderinfoleak.name=Server Leaks Information via "X-Powered-By" HTTP Response Header Field(s)
pscanalpha.xpoweredbyheaderinfoleak.desc=Le web/serveur d'application est une fuite de l'information, via un ou plusieurs "X-Powered-By" t\u00eates de r\u00e9ponse HTTP. L'acc\u00e8s \u00e0 ces informations peut faciliter les attaquants d'identifier d'autres frameworks/composants de votre application web est tributaire et les vuln\u00e9rabilit\u00e9s de tels composants peuvent \u00eatre soumis.
pscanalpha.xpoweredbyheaderinfoleak.refs=http\://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp\://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html
pscanalpha.xpoweredbyheaderinfoleak.soln=Ensure that your web server, application server, load balancer, etc. is configured to suppress "X-Powered-By" headers.
pscanalpha.xpoweredbyheaderinfoleak.exploit=\ 
pscanalpha.xpoweredbyheaderinfoleak.extrainfo=\ 
pscanalpha.xpoweredbyheaderinfoleak.otherinfo.msg=The following X-Powered-By headers were also found\:\r\n

pscanalpha.contentsecuritypolicymissing.name=Content Security Policy (CSP) Header Not Set
pscanalpha.contentsecuritypolicymissing.desc=Content Security Policy (CSP) est une couche de s\u00e9curit\u00e9 suppl\u00e9mentaire qui permet de d\u00e9tecter et de r\u00e9duire certains types d'attaques, y compris Cross Site Scripting (XSS) et les donn\u00e9es des attaques par injection. Ces attaques sont utilis\u00e9s pour tout, de vol de donn\u00e9es de site, la d\u00e9gradation ou la distribution de logiciels malveillants. CSP fournit un ensemble d'en-t\u00eates HTTP qui permettent aux propri\u00e9taires de sites web \u00e0 d\u00e9clarer approuv\u00e9 sources de contenu que les navigateurs devraient \u00eatre autoris\u00e9s \u00e0 charger sur la page \u2014 couverte de types sont JavaScript, CSS, HTML, images, polices, images et int\u00e9grable objets tels que les applets Java, ActiveX, les fichiers audio et vid\u00e9o.
pscanalpha.contentsecuritypolicymissing.refs=https\://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps\://www.owasp.org/index.php/Content_Security_Policy\nhttp\://www.w3.org/TR/CSP/\nhttp\://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp\://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp\://caniuse.com/\#feat\=contentsecuritypolicy\nhttp\://content-security-policy.com/
pscanalpha.contentsecuritypolicymissing.soln=Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header, to achieve optimal browser support\: "Content-Security-Policy" for Chrome 25+, Firefox 23+ and Safari 7+, "X-Content-Security-Policy" for Firefox 4.0+ and Internet Explorer 10+, and "X-WebKit-CSP" for Chrome 14+ and Safari 6+.
pscanalpha.contentsecuritypolicymissing.exploit=\ 
pscanalpha.contentsecuritypolicymissing.extrainfo=\ 
pscanalpha.contentsecuritypolicymissing.ro.name=Content Security Policy (CSP) Report-Only Header Found
pscanalpha.contentsecuritypolicymissing.ro.desc=La r\u00e9ponse contenait un Contenu-de la Politique de S\u00e9curit\u00e9-Rapport-Seulement d'en-t\u00eate, cela peut indiquer un travail en cours de mise en \u0153uvre, ou d'un oubli dans la promotion de la pr\u00e9-Prod de Prod, etc.\n\nContent Security Policy (CSP) est une couche de s\u00e9curit\u00e9 suppl\u00e9mentaire qui permet de d\u00e9tecter et de r\u00e9duire certains types d'attaques, y compris Cross Site Scripting (XSS) et les donn\u00e9es des attaques par injection. Ces attaques sont utilis\u00e9s pour tout, de vol de donn\u00e9es de site, la d\u00e9gradation ou la distribution de logiciels malveillants. CSP fournit un ensemble d'en-t\u00eates HTTP qui permettent aux propri\u00e9taires de sites web \u00e0 d\u00e9clarer approuv\u00e9 sources de contenu que les navigateurs devraient \u00eatre autoris\u00e9s \u00e0 charger sur la page -- couverte de types sont JavaScript, CSS, HTML, images, polices, images et int\u00e9grable objets tels que les applets Java, ActiveX, les fichiers audio et vid\u00e9o.
pscanalpha.contentsecuritypolicymissing.ro.refs=https\://www.w3.org/TR/CSP2/\nhttps\://w3c.github.io/webappsec-csp/\nhttp\://caniuse.com/\#feat\=contentsecuritypolicy\nhttp\://content-security-policy.com/

pscanalpha.xbackendserver.name=X-Backend-Serveur D'Informations D'En-T\u00eate De Fuite
pscanalpha.xbackendserver.desc=Le serveur est en fuite les informations relatives \u00e0 backend syst\u00e8mes (tels que les noms d'h\u00f4te ou l'adresse IP). Arm\u00e9s de cette information, un attaquant peut \u00eatre en mesure de s'attaquer \u00e0 d'autres syst\u00e8mes ou plus directement/efficacement l'attaque de ces syst\u00e8mes.
pscanalpha.xbackendserver.refs=\ 
pscanalpha.xbackendserver.soln=S'assurer que votre serveur web, serveur d'application, \u00e9quilibrage de charge, etc. est configur\u00e9 pour supprimer les X-Backend-Serveur t\u00eates.
pscanalpha.xbackendserver.exploit=\ 
pscanalpha.xbackendserver.extrainfo=\ 

pscanalpha.insecurecomponent.name=Insecure Component
pscanalpha.insecurecomponent.desc=Based on passive analysis of the response, insecure component {0} {1} appears to be in use.\nThe highest noted CVSS rating for this product version is {2}.\nIn total, {3} vulnerabilities were noted.\nSome Linux distributions such as Red Hat employ the practice of retaining old version numbers when security fixes are "backported".\nThese cases are noted as "False Positives", but should be manually verified.  
pscanalpha.insecurecomponent.refs={0}
pscanalpha.insecurecomponent.soln=Mise \u00e0 niveau \u00e0 partir de {0} {1} vers la derni\u00e8re version stable du produit.\nUtiliser un gestionnaire de paquets et de colis de gestion des politiques et des proc\u00e9dures afin de g\u00e9rer les versions install\u00e9es de logiciels.

pscanalpha.bigredirectsscanner.name=Big Redirect Detected (Potential Sensitive Information Leak)
pscanalpha.bigredirectsscanner.desc=Le serveur a r\u00e9pondu avec une redirection qui semble fournir une r\u00e9ponse. Cela peut indiquer que, bien que le serveur a envoy\u00e9 une redirection il a \u00e9galement r\u00e9pondu avec le contenu du corps (qui peut inclure des informations sensibles, PII, etc).
pscanalpha.bigredirectsscanner.refs=\ 
pscanalpha.bigredirectsscanner.soln=S'assurer qu'aucune information sensible est une fuite via des r\u00e9ponses de redirection. R\u00e9ponses de redirection doit avoir presque pas de contenu.
pscanalpha.bigredirectsscanner.extrainfo=Location header URI length\: {0} [{1}].\nPredicted response size\: {2}.\nResponse Body Length\: {3}.


pscanalpha.storabilitycacheability.name=Contenu Cacheability

pscanalpha.nonstorable.name=Non-Storable Content
pscanalpha.nonstorable.desc=Le contenu de r\u00e9ponse ne sont pas stockables par la mise en cache des composants tels que des serveurs proxy. Si la r\u00e9ponse ne contient pas sensibles, personnelles ou des informations sp\u00e9cifiques \u00e0 l'utilisateur, il peut b\u00e9n\u00e9ficier de l'\u00eatre stock\u00e9s et mis en cache pour am\u00e9liorer les performances.
pscanalpha.nonstorable.refs=https\://tools.ietf.org/html/rfc7234\nhttps\://tools.ietf.org/html/rfc7231\nhttp\://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (obsoleted by rfc7234)
pscanalpha.nonstorable.soln=Le contenu peut \u00eatre marqu\u00e9 comme stockables en veillant \u00e0 ce que les conditions suivantes sont remplies\:\nLa m\u00e9thode de la requ\u00eate doit \u00eatre comprise par le cache et d\u00e9fini comme \u00e9tant mis en cache ("GET", "HEAD", et "POST" sont actuellement d\u00e9finis comme pouvant \u00eatre mis en cache)\nLe code d'\u00e9tat de r\u00e9ponse doit \u00eatre comprise par le cache (l'un des 1XX, 2XX, 3XX, 4XX ou 5XX r\u00e9ponse classes sont g\u00e9n\u00e9ralement comprises)\nLe "no-store" cache directive ne doivent pas figurer dans la requ\u00eate ou de la r\u00e9ponse champs d'en-t\u00eate\nPour la mise en cache par "partag\u00e9" caches comme "proxy" caches, le "private" r\u00e9ponse de la directive ne doit pas appara\u00eetre dans la r\u00e9ponse\nPour la mise en cache par "shared" caches comme "proxy" caches, le "Autorization" champ d'en-t\u00eate ne doivent pas figurer dans la demande, \u00e0 moins que la r\u00e9ponse permet explicitement (\u00e0 l'aide de l'un des "must-revalidate", "public", ou "s-maxage" Cache-Control r\u00e9ponse directives)\nOutre les conditions ci-dessus, au moins une des conditions suivantes doivent \u00e9galement \u00eatre satisfaits par la r\u00e9ponse\:\nIl doit contenir une "Expires" champ d'en-t\u00eate\nIl doit contenir un "max-age" r\u00e9ponse de la directive\nPour "shared" caches comme "proxy" caches, il doit contenir un "s-maxage" r\u00e9ponse de la directive\nIl doit contenir un "Cache Control Extension" qui lui permet d'\u00eatre mis en cachesa\nIl doit avoir un code d'\u00e9tat est d\u00e9finie comme pouvant \u00eatre mis en cache par d\u00e9faut (200, 203, 204, 206, 300, 301, 404, 405, 410, 414, 501).   
pscanalpha.nonstorable.extrainfo={0}

pscanalpha.storablenoncacheable.name=Storable but Non-Cacheable Content
pscanalpha.storablenoncacheable.desc=Le contenu de r\u00e9ponse sont stockables par la mise en cache des composants tels que des serveurs proxy, mais ne seront pas r\u00e9cup\u00e9r\u00e9es directement \u00e0 partir du cache, sans validation de la demande en amont, en r\u00e9ponse \u00e0 des demandes similaires provenant d'autres utilisateurs. 
pscanalpha.storablenoncacheable.refs=https\://tools.ietf.org/html/rfc7234\nhttps\://tools.ietf.org/html/rfc7231\nhttp\://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (obsoleted by rfc7234)
pscanalpha.storablenoncacheable.soln=\ 
pscanalpha.storablenoncacheable.extrainfo={0}}

pscanalpha.storablecacheable.name=\u00c0 ranger et facile \u00e0 mettre en Cache le Contenu
pscanalpha.storablecacheable.desc=Le contenu de r\u00e9ponse sont stockables par la mise en cache des composants tels que des serveurs proxy, et peuvent \u00eatre r\u00e9cup\u00e9r\u00e9es directement \u00e0 partir du cache, plut\u00f4t que depuis le serveur d'origine par la mise en cache des serveurs, en r\u00e9ponse \u00e0 des demandes similaires provenant d'autres utilisateurs. Si les donn\u00e9es de r\u00e9ponse sont sensibles, personnelles ou sp\u00e9cifiques \u00e0 l'utilisateur, cela peut entra\u00eener la fuite d'informations sensibles. Dans certains cas, cela peut m\u00eame aboutir \u00e0 un utilisateur le contr\u00f4le total de la session d'un autre utilisateur, selon la configuration de la mise en cache des composants \u00e0 utiliser dans leur environnement. C'est principalement un probl\u00e8me o\u00f9 "shared" de la mise en cache des serveurs tels que "proxy" caches sont configur\u00e9s sur le r\u00e9seau local. Cette configuration est g\u00e9n\u00e9ralement trouv\u00e9s en entreprise ou en milieu scolaire, par exemple.
pscanalpha.storablecacheable.refs=https\://tools.ietf.org/html/rfc7234\nhttps\://tools.ietf.org/html/rfc7231\nhttp\://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (obsoleted by rfc7234)
pscanalpha.storablecacheable.soln=Validate that the response does not contain sensitive, personal or user-specific information.  If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user\:\nCache-Control\: no-cache, no-store, must-revalidate, private\nPragma\: no-cache\nExpires\: 0\nThis configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request. 
pscanalpha.storablecacheable.extrainfo={0}
pscanalpha.storablecacheable.otherinfo.liberallifetimeheuristic=In the absence of an explicitly specified caching lifetime directive in the response, a liberal lifetime heuristic of 1 year was assumed. This is permitted by rfc7234.
pscanalpha.storablecacheable.otherinfo.staleretrievenotblocked=The response is stale, and stale responses are not configured to be re-validated or blocked, using the 'must-revalidate', 'proxy-revalidate', 's-maxage', or 'max-age' response 'Cache-Control' directives.

pscanalpha.retrievedfromcache.name=Retrieved from Cache
pscanalpha.retrievedfromcache.desc=Le contenu a \u00e9t\u00e9 extrait \u00e0 partir d'un cache partag\u00e9. Si les donn\u00e9es de r\u00e9ponse sont sensibles, personnelles ou sp\u00e9cifiques \u00e0 l'utilisateur, cela peut entra\u00eener la fuite d'informations sensibles. Dans certains cas, cela peut m\u00eame aboutir \u00e0 un utilisateur le contr\u00f4le total de la session d'un autre utilisateur, selon la configuration de la mise en cache des composants \u00e0 utiliser dans leur environnement. C'est principalement un probl\u00e8me o\u00f9 la mise en cache des serveurs tels que "proxy" caches sont configur\u00e9s sur le r\u00e9seau local. Cette configuration est g\u00e9n\u00e9ralement trouv\u00e9s en entreprise ou en milieu scolaire, par exemple. 
pscanalpha.retrievedfromcache.refs=https\://tools.ietf.org/html/rfc7234\nhttps\://tools.ietf.org/html/rfc7231\nhttp\://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (obsoleted by rfc7234)
pscanalpha.retrievedfromcache.soln=Valider que la r\u00e9ponse ne contient pas sensibles, personnelles ou des informations sp\u00e9cifiques \u00e0 l'utilisateur. Si elle le fait, l'utilisation de la suite-t\u00eates de r\u00e9ponse HTTP, afin de limiter ou d'emp\u00eacher le contenu d'\u00eatre stock\u00e9es et r\u00e9cup\u00e9r\u00e9es \u00e0 partir de la m\u00e9moire cache par un autre utilisateur\:\nCache-Control\: no-cache, pas de magasin, must-revalidate, priv\u00e9\nPragma\: no-cache\nExpires\: 0\nCette configuration dirige \u00e0 la fois le protocole HTTP 1.0 et HTTP 1.1 compatible serveurs cache \u00e0 ne pas stocker la r\u00e9ponse, et pour ne pas r\u00e9cup\u00e9rer la r\u00e9ponse (sans validation) \u00e0 partir du cache, en r\u00e9ponse \u00e0 une demande similaire.
pscanalpha.retrievedfromcache.extrainfo={0}
pscanalpha.retrievedfromcache.extrainfo.http11ageheader=The presence of the 'Age' header indicates that that a HTTP/1.1 compliant caching server is in use.

pscanalpha.imagelocationscanner.name=Image Location and Privacy Scanner
pscanalpha.imagelocationscanner.alerttitle=Image Exposes Location or Privacy Data
pscanalpha.imagelocationscanner.alertDetailPrefix=This image embeds a location or leaks privacy-related data\: 
pscanalpha.imagelocationscanner.desc=L'image a \u00e9t\u00e9 trouv\u00e9 pour contiennent des informations de localisation, telles que les coordonn\u00e9es GPS, ou d'une autre la vie priv\u00e9e de l'exposition, tels que l'appareil photo du num\u00e9ro de s\u00e9rie. En fonction du contexte de l'image dans le site web, cette information peut exposer les informations priv\u00e9es des utilisateurs d'un site. Par exemple, un site qui permet aux utilisateurs de t\u00e9l\u00e9charger des photos prises \u00e0 la maison peut exposer \u00e0 la maison de l'adresse.  
pscanalpha.imagelocationscanner.refs=https\://www.veggiespam.com/ils/
pscanalpha.imagelocationscanner.soln=Avant de permettre \u00e0 des images stock\u00e9es sur le serveur et/ou transmis au navigateur, d\u00e9pouiller le int\u00e9gr\u00e9 les informations de localisation \u00e0 partir d'une image. Cela pourrait signifier la suppression de toutes les donn\u00e9es Exif ou juste le GPS composant. D'autres donn\u00e9es, comme les num\u00e9ros de s\u00e9rie, devrait \u00e9galement \u00eatre supprim\u00e9.

pscanalpha.usernameidor.name=Username Hash Found
pscanalpha.usernameidor.desc=A hash of a username ({0}) was found in the response. This may indicate that the application is subject to an Insecure Direct Object Reference (IDOR) vulnerability. Manual testing will be required to see if this discovery can be abused.
pscanalpha.usernameidor.otherinfo=The hash was an {0}, with value\: {1} 
pscanalpha.usernameidor.soln=D'utilisation par utilisateur ou de la session indirects r\u00e9f\u00e9rences de l'objet (cr\u00e9er un mappage temporaire au moment de l'utilisation). Ou, s'assurer que chaque utilisation d'un objet direct de r\u00e9f\u00e9rence est li\u00e9e \u00e0 une demande d'autorisation pour s'assurer que l'utilisateur est autoris\u00e9 pour l'objet demand\u00e9. 
pscanalpha.usernameidor.refs=https\://www.owasp.org/index.php/Top_10_2013-A4-Insecure_Direct_Object_References\nhttps\://www.owasp.org/index.php/Testing_for_Insecure_Direct_Object_References_(OTG-AUTHZ-004)

pscanalpha.xaspnetversioncanner.name=X-AspNet-Version Response Header Scanner
pscanalpha.xaspnetversioncanner.desc=Server leaks information via "X-AspNet-Version"/"X-AspNetMvc-Version" HTTP response header field(s).
pscanalpha.xaspnetversioncanner.soln=Configure the server so it will not return those headers.
pscanalpha.xaspnetversioncanner.extrainfo=Un attaquant peut utiliser ces informations pour exploiter les vuln\u00e9rabilit\u00e9s connues.
pscanalpha.xaspnetversioncanner.refs=https\://www.troyhunt.com/shhh-dont-let-your-response-headers/\nhttps\://blogs.msdn.microsoft.com/varunm/2013/04/23/remove-unwanted-http-response-headers/

pscanalpha.xchromeloggerdata.name=X-ChromeLogger-Data (XCOLD) Header Information Leak
pscanalpha.xchromeloggerdata.desc=Le serveur est une fuite de l'information par le biais de la X-ChromeLogger-Donn\u00e9es (ou X-ChromePhp-Data) en-t\u00eate de r\u00e9ponse. Le contenu de ces en-t\u00eates peuvent \u00eatre personnalis\u00e9s par le d\u00e9veloppeur, mais il n'est pas rare de trouver\: serveur de fichiers, serveur virtuel, d\u00e9clarations, etc.
pscanalpha.xchromeloggerdata.refs=https\://craig.is/writing/chrome-logger
pscanalpha.xchromeloggerdata.soln=D\u00e9sactiver cette fonctionnalit\u00e9 dans la Production quand il pourrait fuir de l'information qui pourrait \u00eatre exploit\u00e9 par un attaquant. Sinon, s'assurer que l'utilisation de la fonctionnalit\u00e9 est li\u00e9e \u00e0 une forte demande d'autorisation et uniquement disponible pour les administrateurs ou le support technique pour des fins de d\u00e9pannage pas les utilisateurs en g\u00e9n\u00e9ral.
pscanalpha.xchromeloggerdata.otherinfo.msg=La liste suivante repr\u00e9sente une tentative de d\u00e9codage base64 la valeur\:
pscanalpha.xchromeloggerdata.otherinfo.error=Header value could not be base64 decoded\:

pscanalpha.xdebugtoken.name=X-Debug-Token Information Leak
pscanalpha.xdebugtoken.desc=The response contained an X-Debug-Token or X-Debug-Token-Link header. This indicates that Symfony's Profiler may be in use and exposing sensitive data.
pscanalpha.xdebugtoken.otherinfo=By accessing a URL in the form http\://target_host/_profiler/token_value (i.e.\: http\://example.com/_profiler_/123ab4), you may gain access to the profiler and further leaked information.
pscanalpha.xdebugtoken.refs=https\://symfony.com/doc/current/cookbook/profiler/profiling_data.html\nhttps\://symfony.com/blog/new-in-symfony-2-4-quicker-access-to-the-profiler-when-working-on-an-api
pscanalpha.xdebugtoken.soln=Limiter l'acc\u00e8s \u00e0 de Symfony Profiler, soit par le biais de l'authentification/autorisation ou la limitation de l'inclusion de l'en-t\u00eate pour des clients sp\u00e9cifiques (par IP, etc).


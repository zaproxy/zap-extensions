#X-Generator: crowdin.com
# This file defines the default (English) variants of all of the internationalised messages
pscanalpha.desc=Reglas de exploraci\u00f3n pasivas - alpha

pscanalpha.cookiesamesitescanner.name=Cookie sin atributo SameSite
pscanalpha.cookiesamesitescanner.desc=Una cookie ha sido enviada sin el atributo SameSite, lo que significa que la cookie puede ser enviada como un resultado de una solicitud 'cross-site'. \nEl atributo SameSite es una medida efectiva contra solicitudes de falsificaci\u00f3n de cross-site, inclusi\u00f3n de secuencias cross-site, y ataques sincronizados.
pscanalpha.cookiesamesitescanner.badval=Una cookie ha sido establecida con un valor de atributo SameSite invalido, lo que significa que la cookie podr\u00eda ser enviada como resultado de una solicitud 'cross-site'.\nEl atributo SameSite es una medida efectiva contra solicitudes de falsificaci\u00f3n cross-site, inclusi\u00f3n de secuencias cross-site, y ataques sincronizados.
pscanalpha.cookiesamesitescanner.soln=Aseg\u00farese que el atributo SameSite est\u00e1 establecido como 'lax' o idealmente 'strict' para todas las cookies.
pscanalpha.cookiesamesitescanner.refs=https\://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site

pscanalpha.examplefile.name=Un ejemplo regla de exploraci\u00f3n pasiva que carga datos de un archivo
pscanalpha.examplefile.desc=A\u00f1adir m\u00e1s informaci\u00f3n acerca de la vulnerabilidad aqu\u00ed
pscanalpha.examplefile.other=Se trata de informaci\u00f3n que no encaja en ninguna de las otras secciones
pscanalpha.examplefile.soln=Una descripci\u00f3n general de como resolver el problema
pscanalpha.examplefile.refs=http\://zaproxy.blogspot.co.uk/2014/04/hacking-zap-3-pasivve-scan-rules.html

pscanalpha.insecureformload.name=HTTP a HTPPS transici\u00f3n insegura en forma de post
pscanalpha.insecureformload.desc=Esta comprobaci\u00f3n busca p\u00e1ginas HTTP inseguras que alojan formas HTTPS. El problema es que una p\u00e1gina HTTP insegura puede f\u00e1cilmente ser secuestrada a trav\u00e9s de MITM y la forma HTTPS segura puede ser reemplazada o simulada.
pscanalpha.insecureformload.refs=[cadena vac\u00eda]
pscanalpha.insecureformload.soln=Utilizar HTTPS para p\u00e1ginas de destino que alojen formas seguras.
pscanalpha.insecureformload.exploit=[cadena vac\u00eda]
pscanalpha.insecureformload.extrainfo=La respuesta a la siguiente petici\u00f3n por HTTP inclu\u00eda un valor de atributo de acci\u00f3n de etiqueta de forma HTTPS\:\n\n{0} el contexto era\:\n\n{1}

pscanalpha.insecureformpost.name=Transici\u00f3n insegura en forma de post de HTTPS a HTTP
pscanalpha.insecureformpost.desc=Esta comprobaci\u00f3n identifica p\u00e1ginas HTTPS seguras que alojan fromas HTTP inseguras. El problema es que una p\u00e1gina segura est\u00e1 transicionando a una p\u00e1gina insegura cuando datos son cargados a trav\u00e9s de una forma. El user puede pensar que est\u00e1n enviando datos a una p\u00e1gina segura cuando en realidad no es as\u00ed.
pscanalpha.insecureformpost.refs=[cadena vac\u00eda]
pscanalpha.insecureformpost.soln=Aseg\u00farese que los datos sensibles solo son enviados a trav\u00e9s de canales HTTPS seguros.
pscanalpha.insecureformpost.exploit=[cadena vac\u00eda]
pscanalpha.insecureformpost.extrainfo=La respuesta a la siguiente petici\u00f3n por HTTPS inclu\u00eda un valor de atributo de acci\u00f3n de etiqueta de forma HTTP\:\n\n{0} el contexto era\:\n\n{1}

pscanalpha.usercontrolledcharset.name=Usuario Charset controlable
pscanalpha.usercontrolledcharset.desc=Esta comprobaci\u00f3n busca en input user-supplied en par\u00e1metros de cadena de consulta y datos POST para identificar que las declaraciones de conjunto de caracteres de etiqueta Content-Type o meta podr\u00edan ser controladas por un user. Estas declaraciones de charset deben ser siempre declaradas por la aplicaci\u00f3n. SI un atacante puede controlar el charset de respuesta, ellos podr\u00edan manipular el HTML para ejecutar XSS o otros ataques.
pscanalpha.usercontrolledcharset.refs=[cadena vac\u00eda]
pscanalpha.usercontrolledcharset.soln=Fuerza UTF-8 en todas las declaraciones charset. Si la entrada de usuario es requerida para decidir una declaraci\u00f3n charset, aseg\u00farese que solo esta usted en la lista de los permitidos.
pscanalpha.usercontrolledcharset.exploit=Un atacante controlando el valor de conjunto de caracteres del elemento <meta> es capaz de declarar UTF-7 y tambi\u00e9n capaz de incluir suficiente carga controlada por el usuario temprano en el documento HTML para tenerlo interpretado como UT-7. Al codificar su carga con UTF-7 el atacante es capaz de saltarse cualquier protecci\u00f3n de servidor XSS e insertar guion en la p\u00e1gina.
pscanalpha.usercontrolledcharset.extrainfo=Una (n) [{0}] eiqueta [{1}] atributo\n\nLa entrada del usuario encontr\u00f3\:\n{2}\={3}\n\nEn valor del conjunto de caracteres era controlado por\:\n{4}

pscanalpha.usercontrolledcookie.name=Envenenamiento de cookie
pscanalpha.usercontrolledcookie.desc=Esta comprobaci\u00f3n buscar suministradas por el usuario en par\u00e1metros de cadena de consulta y datos POST para identificar donde los par\u00e1metros de las cookies podr\u00edan ser controladas. Esto es llamado un ataque de envenenamiento de cookie, y se vuelve explotable cuando un atacante puede manipular la cookie de varias formas. En algunos casos esto no ser\u00e1 explotable, de todas formas, permitiendo a par\u00e1metros URL establecer valores de cookies es generalmente considerado un error.
pscanalpha.usercontrolledcookie.refs=http\://websecuritytool.codeplex.com/wikipage?title\=Checks\#user-controlled-cookie
pscanalpha.usercontrolledcookie.soln=No permitir a la entrada de usuario controlar valores y nombres de cookies. Si algunos par\u00e1metros de cadena de consulta deben ser establecidos en valores de cookies, aseg\u00farese de filtrar punto y coma que puede servir como delimitadores de nombres/valores.
pscanalpha.usercontrolledcookie.exploit.get=Un atacante podr\u00eda ser capaz de envenenar valores de cookies a trav\u00e9s de par\u00e1metros URL. Intentar inyectando un punto y coma para ver si usted puede agregar valores de cookies (por ejemplo, nombre\=ValorControlado; nombre\=ValorControlado;).
pscanalpha.usercontrolledcookie.exploit.post=Un atacante podr\u00eda se capaz de envenenar valores de cookies a trav\u00e9s de par\u00e1metros POST. Para comprobar si este es un problemas mas serio, usted deber\u00eda  tratar reenviando esa petici\u00f3n como un GET, con el par\u00e1metro POST incluido como un par\u00e1metro de cadena de consulta. Por ejemplo\: http\://nottrusted.com/page?value\=maliciousInput.\n\n
pscanalpha.usercontrolledcookie.extrainfo=Esto fue identificado en\:\n\n{0}\n\nLa entrada de usuario fue encontrada en el siguiente cookie\:\n{2}\={3}

pscanalpha.usercontrolledjavascriptevent.name=Evento de JavaScript (XSS) controlable por el usuario
pscanalpha.usercontrolledjavascriptevent.desc=Esta comprobaci\u00f3n busca entradas proporcionadas por el usuario en par\u00e1metro de cadena de consulta y datos POST para identificar donde cierto atributo HTML podr\u00edan ser controlados. Esto proporciona detecci\u00f3n de hot-spot para XSS (cross-site scripting) que requerir\u00e1n revisiones futuras por un analista de seguridad para determinar su nivel de explotaci\u00f3n.            
pscanalpha.usercontrolledjavascriptevent.refs=http\://websecuritytool.codeplex.com/wikipage?title\=Checks\#user-javascript-event
pscanalpha.usercontrolledjavascriptevent.soln=Validar todas las entradas y desinfectar salidas antes de escribir alg\u00fan Javascrpit en eventos.
pscanalpha.usercontrolledjavascriptevent.exploit=[cadena vac\u00eda]
pscanalpha.usercontrolledjavascriptevent.extrainfo=Evento(s) JavaScript controlados por usuario fue encontrado. La explotabilidad necesitara ser determinada manualmente. La p\u00e1gina en el siguiente URL\:\n\n{0}''''\n\nIncluye el siguiente evento JavaScript que podr\u00eda ser controlable por el atacante\:\n\nEntrada de usuaria fue encontrada en los siguientes datos de un [{1}] evento.\n{2}\n\nLa entrada de usuario era\:\n{3}

pscanalpha.usercontrolledjavascriptproperty.name=Propiedad de JavaScript (XSS) controlable por el usuario
pscanalpha.usercontrolledjavascriptproperty.desc=Esta comprobaci\u00f3n busca entradas proporcionadas por el usuario en par\u00e1metro de cadena de consulta y datos POST para identificar donde URL en ciertas propiedades JavaScript (por ejemplo, createElement src) podr\u00edan ser controlados. Esto proporciona detecci\u00f3n de hot-spot para XSS (cross-site scripting) que requerir\u00e1n revisiones futuras por un analista de seguridad para determinar su nivel de explotaci\u00f3n.            
pscanalpha.usercontrolledjavascriptproperty.refs=http\://websecuritytool.codeplex.com/wikipage?title\=Checks\#user-controlled-javascript-reference
pscanalpha.usercontrolledjavascriptproperty.soln=No permitir entradas de usuarios para controlar el origen de las referencias de ubicaci\u00f3n de JavaScript.
pscanalpha.usercontrolledjavascriptproperty.exploit=[cadena vac\u00eda]
pscanalpha.usercontrolledjavascriptproperty.extrainfo=L p\u00e1gina en el siguiente URL aparenta contener entrada de usuario en un valor de propiedad de JavaScript\:\n\n{0} La entrada de usuario encontrada fue\:\n\n{1}\={2}\n\nEl contexto era\:\n{3}

pscanalpha.usercontrolledhtmlattributes.name=Atributo de elemento HTML controlable por usuario (Potencial XSS)
pscanalpha.usercontrolledhtmlattributes.desc=Esta comprobaci\u00f3n busca entradas proporcionadas por el usuario en par\u00e1metro de cadena de consulta y datos POST para identificar donde ciertos valores de atributo HTML podr\u00edan ser controlados. Esto proporciona detecci\u00f3n de hot-spot para XSS (cross-site scripting) que requerir\u00e1n revisiones futuras por un analista de seguridad para determinar su nivel de explotaci\u00f3n.
pscanalpha.usercontrolledhtmlattributes.refs=http\://websecuritytool.codeplex.com/wikipage?title\=Checks\#user-controlled-html-attribute
pscanalpha.usercontrolledhtmlattributes.soln=Validar todas las entradas y desinfectar salidas antes de escribir alg\u00fan atributo HTML.
pscanalpha.usercontrolledhtmlattributes.exploit=[cadena vac\u00eda]
pscanalpha.usercontrolledhtmlattributes.extrainfo=Valores de atributo controlables por usuario fueron encontrados. Tratar inyectando caracteres especiales a ver si XSS podr\u00eda ser posible. La p\u00e1gina en el siguiente URL\:\n\n{0}\n\naparenta incluir entrada de usuario en\:\n\nuna(n) [{1}] etiqueta [{2}] atributo\n\nLa entrada de usuario encontrada fue\:\n{3}\={4}\n\nEl valor controlable por usuario fue\:\n{5}

pscanalpha.usercontrolledopenredirect.name=Redirecci\u00f3n abierta
pscanalpha.usercontrolledopenredirect.desc=Redirecciones abiertas son una de las diez principales vulnerabilidades de OWASP 2010. Esta comprobaci\u00f3n busca entradas suministradas por el usuario en par\u00e1metros de cadena de consulta y datos POST para identificar donde redirecciones abiertas podr\u00edan ser posibles. Las redirecciones abiertas ocurren cuando una aplicaci\u00f3n permite entrada suministrada por usuario (por ejemplo, http\://nottrusted.com) para controlar una redirecci\u00f3n fuera de sitio. Esto es generalmente una forma bastante acertada de encontrar donde las redirecciones 301 o 302 podr\u00edan estar explotadas por spammers o ataques phising
pscanalpha.usercontrolledopenredirect.soln=Para evitar la vulnerabilidad de redirecci\u00f3n abierta, los par\u00e1metros de la aplicaci\u00f3n del script/programa deben ser validades antes de enviar el c\u00f3digo HTTP 302 (redirecci\u00f3n) al navegador del cliente. Implementar la funcionalidad que solo redirecciona a relativos de URI, o una lista de dominios de confianza
pscanalpha.usercontrolledopenredirect.exploit=Un atacante podr\u00eda suministrar a un usuario con el siguiente enlace\: http\://example.com/example.php?url\=http\://malicious.example.com
pscanalpha.usercontrolledopenredirect.refs=https\://www.Owasp.org/index.php/Open_redirect \nhttps\://owasp.org/index.php/Top_10_2010-A10-Unvalidated_Redirects_and_Forwards https\://cwe.mitre.org/data/definitions/601.html
pscanalpha.usercontrolledopenredirect.extrainfo.get=La respuesta 301 o 302 a una solicitud del siguiente URL parec\u00eda contener una entrada de usar en el encabezado de ubicaci\u00f3n\:\n\n
pscanalpha.usercontrolledopenredirect.extrainfo.post=Se detect\u00f3 una redirecci\u00f3n abierta controlada por par\u00e1metros POST. Para comprobar si se trata de un problema m\u00e1s grave, debe tratar de volver a enviar esa solicitud como un GET con el par\u00e1metro POST incluido como un par\u00e1metro de cadena de consulta. Por ejemplo\: http\://nottrusted.com/page?url\=http\: / / lookout.net. La respuesta a una solicitud de la siguiente URL 301 o 302 apareci\u00f3 contener entrada de usuario en el encabezado de Ubicaci\u00f3n\:  \n\n
pscanalpha.usercontrolledopenredirect.extrainfo.common={0} \n\nLa entrada de usuario encontrada fue\:\n\n{1}\={2}\n\nEl contexto fue\:\n\n{3}

pscanalpha.sourcecodedisclosure.name=Divulgaci\u00f3n de C\u00f3digo Fuente
pscanalpha.sourcecodedisclosure.desc=El c\u00f3digo de fuente de la aplicaci\u00f3n fue divulgado por el servidor web
pscanalpha.sourcecodedisclosure.soln=Aseg\u00farese que la aplicaci\u00f3n Source Code no est\u00e1 habilitada con extensiones alternativas, y aseg\u00farese que el c\u00f3digo de fuente no est\u00e1 presente dentro de otros archivos o datos desplegados al servidor web, o servidos por el servidor web. 
pscanalpha.sourcecodedisclosure.refs=http\://blogs.wsj.com/cio/2013/10/08/adobe-source-code-leak-is-bad-news-for-u-s-government/
pscanalpha.sourcecodedisclosure.extrainfo={0}

pscanalpha.hashdisclosure.name=Divulgaci\u00f3n de hash
pscanalpha.hashdisclosure.desc=Un hash ha sido divulgado por el servidor web
pscanalpha.hashdisclosure.soln=Aseg\u00farese que los hashes que son usados para proteger credenciales u otros recursos no est\u00e1n infiltrados por el servidor web o la base de datos. T\u00edpicamente no hay ning\u00fan requisito para contrase\u00f1as de hashes para ser accesibles para el navegador web.      
pscanalpha.hashdisclosure.refs=https\://www.Owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure http\://projects.webappsec.org/w/page/13246936/Information%20Leakage \nhttp\://openwall.info/wiki/john/sample-hashes
pscanalpha.hashdisclosure.extrainfo={0}

pscanalpha.timestampdisclosure.name=Divulgaci\u00f3n de la marca de hora
pscanalpha.timestampdisclosure.desc=Una marca de tiempo ha sido divulgada por el servidor de la aplicaci\u00f3n/el navegador
pscanalpha.timestampdisclosure.soln=Confirmar manualmente que los datos de marca de hora no son sensibles, y que los datos no pueden ser agregados a patrones explotables de divulgaci\u00f3n.
pscanalpha.timestampdisclosure.refs=https\://www.Owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure http\://projects.webappsec.org/w/page/13246936/Information%20Leakage
pscanalpha.timestampdisclosure.extrainfo={0}, que eval\u00faa a\: {1}

pscanalpha.base64disclosure.name=Divulgaci\u00f3n de Base64
pscanalpha.base64disclosure.desc=Los datos codificados de Base64 fueron divulgados por el servidor de la aplicaci\u00f3n/el navegador
pscanalpha.base64disclosure.soln=Confirmar manualmente que los datos de la Base64 no divulguen informaci\u00f3n sensible, y que los datos no pueden ser agregados/usados para explotar otras vulnerabilidades.
pscanalpha.base64disclosure.refs=https\://www.Owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure http\://projects.webappsec.org/w/page/13246936/Information%20Leakage
pscanalpha.base64disclosure.extrainfo={1}

pscanalpha.base64disclosure.viewstate.name=Divulgaci\u00f3n ViewState ASP.NET
pscanalpha.base64disclosure.viewstate.desc=Un ViewState ASP.NET fue divulgado por el servidos de la aplicaci\u00f3n/el servidor
pscanalpha.base64disclosure.viewstate.soln=Manualmente confirmar que el ViewState ASP.NET no divulguen informaci\u00f3n sensible, y que los datos no pueden ser agregados/usados para explotar otras vulnerabilidades.
pscanalpha.base64disclosure.viewstate.refs=http\://msdn.Microsoft.com/en-us/library/bb386448.aspx \nhttps\://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure http\://projects.webappsec.org/w/page/13246936/Information%20Leakage
pscanalpha.base64disclosure.viewstate.extrainfo={0}

pscanalpha.base64disclosure.viewstatewithoutmac.name=Integridad ViewState ASP.NET
pscanalpha.base64disclosure.viewstatewithoutmac.desc=La aplicaci\u00f3n no usa un C\u00f3digo de Autenticaci\u00f3n de Mensajes (MAC) para proteger la integridad del ViewState ASP.NET, que puede ser manipulado por un cliente malintencionado
pscanalpha.base64disclosure.viewstatewithoutmac.soln=Aseg\u00farese que todos los ViewStates ASP.NET est\u00e1n protegidos de la manipulaci\u00f3n usando un MAC, generado usando un algoritmo seguro, y una clave secreta en el lado del servidor. Esta es la configuraci\u00f3n de falla en instalaci\u00f3n ASP.NET moderna, que probablemente sea montado en exceso en programaci\u00f3n, o mediante la configuraci\u00f3n de ASP.NET.
pscanalpha.base64disclosure.viewstatewithoutmac.refs=http\://msdn.microsoft.com/en-us/library/bb386448.aspx\nhttps\://www.jardinesoftware.net/2012/02/06/asp-net-tampering-with-event-validation-part-1/
pscanalpha.base64disclosure.viewstatewithoutmac.extrainfo={0}

pscanalpha.directorybrowsing.name=Exploraci\u00f3n de directorios
pscanalpha.directorybrowsing.desc=Es posible ver un listado de directorios. La listas de directorios podr\u00eda revelar scripts ocultos, incluyen archivos, copia de seguridad de los archivos de origen, etc, lo que puede ser accesible para revelar informaci\u00f3n sensible.
pscanalpha.directorybrowsing.soln=Configurar el servidor web para deshabilitar el navegador de directorios. 
pscanalpha.directorybrowsing.refs=https\://cwe.mitre.org/data/definitions/548.html
pscanalpha.directorybrowsing.extrainfo={0}

pscanalpha.heartbleed.name=Vulnerabilidad OpenSSL Heartbleed (Indicativo)
pscanalpha.heartbleed.desc=Las implementaciones de TLS y DTLS en OpenSSL 1.0.1 antes de 1.0.1g no manejan bien paquetes de extensi\u00f3n de latido, que permite a atacantes remotos obtener informaci\u00f3n sensible de la memoria de proceso mediante paquetes dise\u00f1ados que provocan una lectura excesiva de buffer, potencialmente divulgando informaci\u00f3n sensible.  
pscanalpha.heartbleed.soln=Actualizar a OpenSSL o posterior. Volver a emitir certificados HTTPS. Cambiar claves privadas asim\u00e9tricas y claves secretas compartidas, ya que estos podr\u00edan estar comprometidos, sin evidencia de compromiso en los archivos de registro del servidor.
pscanalpha.heartbleed.refs=http\://cvedetails.com/cve-details.php?t\=1&cve_id\=CVE-2014-0160
pscanalpha.heartbleed.extrainfo={0} est\u00e1 en uso. Tenga en cuenta que la versi\u00f3n divulgada podr\u00eda contener correcciones de seguridad retro-portado, y entonces el problema podr\u00eda ser un positivo falso. Esto es com\u00fan en Red Hat, por ejemplo.

pscanalpha.crossdomain.name=Misconfiguraci\u00f3n entre dominios
pscanalpha.crossdomain.desc=Descargas de datos del navegador web podr\u00eda ser posible, debido a una desconfiguraci\u00f3n del intercambio de recursos cruzados de origen (CORS) en el servidor web
pscanalpha.crossdomain.soln=Aseg\u00farese que los datos sensibles no est\u00e1n disponibles de manera no autenticada (usando direcci\u00f3n IP listado-blanco, por ejemplo). Configurar el encabezado HTTP ''''Access-Control-Allow-Origin" a un conjunto de dominios m\u00e1s restrictivo, o remover completamente todos los encabezados CORS, para permitir que el navegador web refuerce la pol\u00edtica de mismo origen (SOP) en una manera mas restrictiva.
pscanalpha.crossdomain.refs=http\://www.hpenterprisesecurity.com/vulncat/en/vulncat/vb/html5_overly_permissive_cors_policy.html
pscanalpha.crossdomain.extrainfo=La desconfiguraci\u00f3n CORS en el servidor web permite a dominios cruzados leer peticiones de dominios de terceros arbitrariamente, usando APIs sin autenticaci\u00f3n en este dominio. Las implementaciones de navegador web no permiten a terceros arbitrarios leer la respuesta de APIs autenticados, de todas formas. Esto reduce el riesgo de alguna forma. Esta desconfiguraci\u00f3n podr\u00eda ser usada por un atacante para acceder a datos que est\u00e1 disponible en una manera sin autenticaci\u00f3n, pero que usa otra forma de seguridad, tal como la direcci\u00f3n IP lista-blanca.

pscanalpha.serverheader.scanner.name=Esc\u00e1ner de encabezado servidor de respuesta HTTP
pscanalpha.serverheaderversioninfoleak.name=El servidor divulga informaci\u00f3n de versi\u00f3n mediante el campo de encabezado de respuesta HTTP ''''Server"
pscanalpha.serverheaderversioninfoleak.desc=El servidor de el navegador/la aplicaci\u00f3n est\u00e1 divulgando informaci\u00f3n mediante el encabezado de respuesta HTTP "Server". El acceso a dicha informaci\u00f3n podr\u00eda facilitarle a los atacantes la identificaci\u00f3n de otras vulnerabilidades a las que es sujeto el servidor de su navegador/aplicaci\u00f3n.
pscanalpha.serverheaderinfoleak.name=El servidor divulga su aplicaci\u00f3n de servidor de web mediante el campo de encabezado de respuesta HTTP ''''Server''''
pscanalpha.serverheaderinfoleak.desc=El servidor de el navegador/la aplicaci\u00f3n est\u00e1 divulgando la aplicaci\u00f3n que se usa como servidor web mediante el encabezado de respuesta HTTP ''''Server''''. El acceso a dicha informaci\u00f3n podr\u00eda facilitarle a atacantes a identificar otras vulnerabilidades a las que est\u00e1 sujeta el servidor de su navegador/aplicaci\u00f3n. Esta informaci\u00f3n sola, por ejemplo, sin una cadena de versi\u00f3n, no es tan peligrosa para la seguridad del servidor, sin embargo esta informaci\u00f3n en el campo de encabezado de respuesta es casi siempre in\u00fatil y solo un vector de ataque obsoleto.
pscanalpha.serverheaderinfoleak.general.refs=http\://httpd.apache.org/docs/current/mod/core.html\#servertokens\nhttp\://msdn.microsoft.com/en-us/library/ff648552.aspx\#ht_urlscan_007\nhttp\://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp\://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html
pscanalpha.serverheaderinfoleak.general.soln=Aseg\u00farese que su servidor web, servidor de aplicaci\u00f3n, equilibrador de carga, etc. est\u00e1 configurado a suprimir el encabezado ''''Server'''' o proveer detalles gen\u00e9ricos.

pscanalpha.stricttransportsecurity.scanner.name=Esc\u00e1ner de encabezado de estricta seguridad de transporte
pscanalpha.stricttransportsecurity.name=Encabezado de estricta seguridad de transporte no establecido
pscanalpha.stricttransportsecurity.desc=La estricta seguridad de transporte (HSTS) es un mecanismo pol\u00edtico de seguridad web donde un servidor web declara que los agentes de usuarios obedientes (tales como un navegador web) est\u00e1n para interactuar con el usando solo conexiones HTTPS seguras (por ejemplo, HTTP cubierto sobre TLS/SSL). HSTS es un protocolo IETF de pista est\u00e1ndar y est\u00e1 especificado en RFC 6797.
pscanalpha.stricttransportsecurity.refs=https\://www.owasp.org/index.php/HTTP_Strict_Transport_Security\nhttps\://www.owasp.org/index.php/List_of_useful_HTTP_headers\nhttp\://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp\://caniuse.com/stricttransportsecurity\nhttp\://tools.ietf.org/html/rfc6797
pscanalpha.stricttransportsecurity.soln=Aseg\u00farese que su servidor web, servidor de aplicaci\u00f3n, equilibrador de cargas, etc. est\u00e1 configurado a reforzar la Estricta Seguridad de Transporte.
pscanalpha.stricttransportsecurity.max.age.name=Estricta seguridad de transporte deshabilitada
pscanalpha.stricttransportsecurity.max.age.desc=Un encabezado de estricta seguridad de transporte HTTP (HSTS) fue encontrado, pero contiene la directiva max-age\=0 lo que deshabilita el control y ordena a los navegadores a resetear cualquier previa configuraci\u00f3n relacionada con HSTS. Ver RFC 6797 para detalles m\u00e1s precisos. \nLa estricta seguridad de transporte HTTP (HSTS) es un mecanismo pol\u00edtico de seguridad web donde un servidor web declara que los agentes de usuarios obedientes (tales como el navegador web) son para interactuar con el usando solo conexiones HTTPS seguras (por ejemplo, un HTTP cubierto sobre TLS/SSL).
pscanalpha.stricttransportsecurity.max.age.refs=http\://tools.ietf.org/html/rfc6797\#section-6.2
pscanalpha.stricttransportsecurity.max.age.soln=Revisar la configuraci\u00f3n de este control. Aseg\u00farese que su servidor web, servidor de aplicaci\u00f3n, equilibrador de carga, etc. est\u00e1 configurado para establecer el estricto seguridad de transporte con un valor max-age apropiado.
pscanalpha.stricttransportsecurity.compliance.multiple.header.name=M\u00faltiples entradas de encabezado de estricta seguridad de transporte (no-obediente con especificaciones)
pscanalpha.stricttransportsecurity.compliance.multiple.header.desc=Fueron descubiertos encabezados de estricta seguridad de transporte HTTP (HSTS), una respuesta con m\u00faltiples entradas de encabezado HSTS no es obediente con la especificaci\u00f3n (RFC 6797) y solo el primer encabezado HSTS ser\u00e1 procesado, los dem\u00e1s ser\u00e1n ignorados por agentes de usuarios o la pol\u00edtica de HSTS podr\u00eda ser aplicada incorrectamente. \nLa etsricta seguridad de transporte HTTP (HSTS) es un mecanismo de pol\u00edtica de seguridad web donde un servidor web declara que los agentes de usuarios obedientes (como el navegador web) est\u00e1n para interactuar con el usando solo conexiones HTTPS seguras (por ejempo, HTTP cubierta sobre TLS/SSL).
pscanalpha.stricttransportsecurity.compliance.multiple.header.refs=http\://tools.ietf.org/html/rfc6797\#section-8.1
pscanalpha.stricttransportsecurity.compliance.multiple.header.soln=Aseg\u00farese que solo un componente en su pila\: c\u00f3digo, servidor web, servidor de aplicaci\u00f3n, equilibrador de carga, etc. est\u00e1 configurado para establecer o agregar un encabezado de estricta seguridad de transporte HTTP (HSTS).
pscanalpha.stricttransportsecurity.plain.resp.name=Encabezado de estricta seguridad de transporte en respuesta simple HTTP
pscanalpha.stricttransportsecurity.plain.resp.desc=Un encabezado de estricta seguridad de transporte HTTP (HSTS) fue encontrado, pero los encabezados HSTS son ignorados en respuestas simples (no-HTTPS). \nLa estricta seguridad de transporte HTTP (HSTS) es un mecanismo de pol\u00edtica de seguridad web donde un servidor web declara que agentes de usuarios obedientes (tales como un navegador web) est\u00e1n para interactuar con el usando solo conexiones HTTPS seguras (por ejemplo, HTTP cubierto sobre TLS/SSL).
pscanalpha.stricttransportsecurity.plain.resp.refs=http\://tools.ietf.org/html/rfc6797\#section-8.1
pscanalpha.stricttransportsecurity.plain.resp.soln=Revisar la configuraci\u00f3n de este control. Aseg\u00farese que su servidor web, servidor de aplicaci\u00f3n, equilibrador de carga, ect. est\u00e1 configurado para establecer la estricta seguridad de transporte para respuestas HTTPS.
pscanalpha.stricttransportsecurity.compliance.max.age.missing.name=Estricta seguridad de transporte falta de Max-Age (no-obediente con especificaciones)
pscanalpha.stricttransportsecurity.compliance.max.age.missing.desc=Un encabezado de estricta seguridad de transporte HTTP (HSTS) fue encontrado, pero no contiene la directiva max-age (o la directiva no contiene un valor). Observar RFC 6797 para detalles m\u00e1s precisos.\nLa estricta seguridad de transporte HTTP (HSTS) es un mecanismo de pol\u00edtica de seguridad web donde un servidor web declara que los usuarios de agentes obedientes (tales como navegadores web) est\u00e1n para interactuar con el usando solo conexiones HTTPS seguras (por ejemplo, HTTP cubierta sobre TLS/SSL).
pscanalpha.stricttransportsecurity.compliance.max.age.missing.refs=http\://tools.ietf.org/html/rfc6797\#section-6.2
pscanalpha.stricttransportsecurity.compliance.max.age.missing.soln=Revisar la configuraci\u00f3n de este control. Aseg\u00farese que su servidor web, servidor de aplicaci\u00f3n, equilibrador de cargas, etc. est\u00e1 configurado para establecer el estricto seguridad de transporte con un valore max-age apropiado.
pscanalpha.stricttransportsecurity.compliance.meta.name=La estricta seguridad de transporte est\u00e1 definida mediantes META (no-obediente con especificaciones)
pscanalpha.stricttransportsecurity.compliance.meta.desc=Una etiqueta META de estricta seguridad de transporte HTTPS (HSTS) ha sido encontrada, definiendo estricta seguridad de transporte HTTP (HSTS) mediante una etiqueta META es expl\u00edcitamente no compatible con la especificaci\u00f3n (RFC 6797).
pscanalpha.stricttransportsecurity.compliance.meta.refs=http\://tools.ietf.org/html/rfc6797\#section-8.5
pscanalpha.stricttransportsecurity.compliance.meta.soln=No intente establecer la estricta seguridad de transporte HTTP (HSTS) mediante una etiqueta META.
pscanalpha.stricttransportsecurity.compliance.max.age.malformed.name=Estricta seguridad de transporte de Max-Age mal formada (no-obediente con especificaciones)
pscanalpha.stricttransportsecurity.compliance.max.age.malformed.desc=Un encabezado de estricta seguridad de transporte HTTP (HSTS) ha sido encontrado, pero el contiene citas procedentes de la directiva de max-age (el valor de max-age puede ser citado, pero la directiva en s\u00ed no puede serlo). Observar RFC 6797 para detalles m\u00e1s precisos. La estricta seguridad de transporte HTTP (HSTS) es un mecanismo de pol\u00edtica donde un servidor web declara que agentes de usuarios obedientes (tales como un navegador web) est\u00e1n para interactuar con el usando solo conexiones HTTPS seguras (por ejemplo, HTTP cubierta sobre TLS/SSL).
pscanalpha.stricttransportsecurity.compliance.max.age.malformed.refs=http\://tools.ietf.org/html/rfc6797\#section-6.1
pscanalpha.stricttransportsecurity.compliance.max.age.malformed.soln=Revisar la configuraci\u00f3n de este control. Aseg\u00farese que su servidor web, servidor de aplicaci\u00f3n, equilibrador de carga, etc. est\u00e1 configurado para establecer la estricta seguridad de transporte con un formato apropiado.
pscanalpha.stricttransportsecurity.compliance.malformed.content.name=Contenido de estricta seguridad de transporte mal formado (no-obediente con especificaciones)
pscanalpha.stricttransportsecurity.compliance.malformed.content.desc=Un encabezado de estricta seguridad de transporte HTTP (HSTS) ha sido encontrado, pero el contiene alg\u00fan contenido que no era esperado (tal vez citas rizadas), la expectativa es que el contenido sea imprimible en caracteres ASCII.
pscanalpha.stricttransportsecurity.compliance.malformed.content.refs=http\://tools.ietf.org/html/rfc6797
pscanalpha.stricttransportsecurity.compliance.malformed.content.soln=Revisar la configuraci\u00f3n de este control. Aseg\u00farese que su servidor web, servidor de aplicaci\u00f3n, equilibrador de carga, etc. est\u00e1 configurado para establecer la estricta seguridad de transporte con contenido apropiado. 

pscanalpha.xpoweredbyheaderinfoleak.name=El servidor divulga informaci\u00f3n mediante un campo(s) de encabezado de respuesta HTTP ''''X-Powered-By''''
pscanalpha.xpoweredbyheaderinfoleak.desc=El servidor de la web/aplicaci\u00f3n est\u00e1 divulgando informaci\u00f3n mediante uno o m\u00e1s encabezados de respuesta HTTP ''''X-Powered-By''''. El acceso a tal informaci\u00f3n podr\u00eda facilitarle a los atacantes la identificaci\u00f3n de otros marcos/componentes de los que su aplicaci\u00f3n web depende y las vulnerabilidades a las que pueden estar sujetos tales componentes.
pscanalpha.xpoweredbyheaderinfoleak.refs=http\://blogs.msdn.com/b/varunm/Archive/2013/04/23/Remove-Unwanted-http-Response-headers.aspx http\://www.troyhunt.com/2012/02/shhh-don ' t-deje-la-respuesta-headers.html
pscanalpha.xpoweredbyheaderinfoleak.soln=Aseg\u00farese que su servidor web, servidor de aplicaci\u00f3n, equilibrador de carga, etc. est\u00e1 configurado para suprimir encabezados ''''X-Powered-By".
pscanalpha.xpoweredbyheaderinfoleak.exploit=[cadena vac\u00eda]
pscanalpha.xpoweredbyheaderinfoleak.extrainfo=[cadena vac\u00eda]
pscanalpha.xpoweredbyheaderinfoleak.otherinfo.msg=Los siguientes encabezados X-Powered-By tambi\u00e9n han sido encontrados\:\n

pscanalpha.contentsecuritypolicymissing.name=El encabezado de pol\u00edtica de seguridad de contenido (CSP) no ha sido establecido
pscanalpha.contentsecuritypolicymissing.desc=La pol\u00edtica de seguridad de contenido (CSP) es una capa agregada de seguridad que ayuda a detectar y mitigar ciertos tipos de ataques, incluyendo Cross Site Scripting (XSS) y ataques de inyecci\u00f3n de datos. Estos ataques son usados para todo desde robo de datos a la desfiguraci\u00f3n de sitio o distribuci\u00f3n de malware. CSP proporciona un conjunto de encabezados HTTP est\u00e1ndares que permiten a los propietarios de sitios web declarar fuentes aprobadas de contenido que navegadores deber\u00edan permitir cargar en su p\u00e1gina \u2014 tipos de cubierta son JavaScript, CSS, marcos HTML, fuentes, im\u00e1genes y objetos incrustables tal como applets de Java, ActiveX, archivos de audio y video.
pscanalpha.contentsecuritypolicymissing.refs=https\://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy https\://www.owasp.org/index.php/Content_Security_Policy http\://www.w3.org/TR/CSP/ http\://w3c.github.io/webappsec/specs/ Content-Security-Policy/CSP-Specification.dev.html http\://www.html5rocks.com/en/tutorials/security/content-security-policy/ http\://caniuse.com/\#feat\=contentsecuritypolicy http\://content-security-policy.com/
pscanalpha.contentsecuritypolicymissing.soln=Aseg\u00farese que su servidor web, servidor de aplicaci\u00f3n, equilibrador de carga, etc. est\u00e1 configurado para establecer el encabezado de estricta pol\u00edtica de seguridad, para alcanzar soporte de navegador \u00f3ptimo\: "Pol\u00edtica de Seguridad de Contenido" para Chrome 25+, Firefox 23+ y Safari 7+, "Pol\u00edtica de Seguridad de Contenido X" para Firefox 4.0+ e Internet Explorer 10+, y "X-Webkit-CSP" para Chrome 14+ y Safari 6+.
pscanalpha.contentsecuritypolicymissing.exploit=[cadena vac\u00eda]
pscanalpha.contentsecuritypolicymissing.extrainfo=[cadena vac\u00eda]
pscanalpha.contentsecuritypolicymissing.ro.name=Content Security Policy (CSP) Report-Only Header Found
pscanalpha.contentsecuritypolicymissing.ro.desc=La respuesta conten\u00eda un encabezado de reporte de pol\u00edtica de seguridad de contenido, esto podr\u00eda indicar a una implementaci\u00f3n de trabajo en proceso, o un descuido en la promoci\u00f3n de pre-Prod a Prod, etc.\n\nLa pol\u00edtica de seguridad de contenido (CSP) es una capa agregada de seguridad que ayuda a detectar y mitigar ciertos tipos de ataques, incluyendo Cross Site Scripting (XSS) y ataques de inyecci\u00f3n de datos. Estos ataques son usados para todo desde robo de datos a la desfiguraci\u00f3n de sitio o distribuci\u00f3n de malware. CSP proporciona un conjunto de encabezados HTTP est\u00e1ndares que permiten a los propietarios de sitios web declarar fuentes aprobadas de contenido que navegadores deber\u00edan permitir cargar en su p\u00e1gina \u2014 tipos de cubiertas son JavaScript, CSS, marcos HTML, fuentes, im\u00e1genes y objetos incrustables tales como applets de Java, ActiveX, archivos de audio o video.
pscanalpha.contentsecuritypolicymissing.ro.refs=https\://www.w3.org/TR/CSP2/ \nhttps\://w3c.github.io/webappsec-csp/ \nhttp\://caniuse.com/\#feat\=contentsecuritypolicy \nhttp\://content-security-policy.com/

pscanalpha.xbackendserver.name=X-Backend-Server Header Information Leak
pscanalpha.xbackendserver.desc=El servidor est\u00e1 divulgando informaci\u00f3n referente a los sistemas de backend (tales como nombres de anfitriones o direcciones IP). Armado con informaci\u00f3n un atacante podr\u00eda ser posible de atacar otros sistemas o atacar esos sistemas de manera m\u00e1s directa/eficiente.
pscanalpha.xbackendserver.refs=[cadena vac\u00eda]
pscanalpha.xbackendserver.soln=Aseg\u00farese que su servidor web, servidor de aplicaci\u00f3n, equilibrador de carga, etc. est\u00e1 configurado para suprimir encabezados X-Backend-Server.
pscanalpha.xbackendserver.exploit=[cadena vac\u00eda]
pscanalpha.xbackendserver.extrainfo=[cadena vac\u00eda]

pscanalpha.insecurecomponent.name=Componente inseguro
pscanalpha.insecurecomponent.desc=Basado en an\u00e1lisis pasivos de la respuesta, el componente inseguro {0} {1} parece estar en uso. La calificaci\u00f3n CVSS conocida mas alta para la versi\u00f3n de este producto es {2}.\nEn total, {3} vulnerabilidades han sido notadas. \nAlgunas distribuciones Linux tales como Red Hat emplean la pr\u00e1ctica de retener n\u00fameros de versiones antiguas cuando las versiones de seguridad son ''''backported''''.\nEstos casos son notados como ''''Falsos positivos'''', pero deber\u00edan ser verificados manualmente.  
pscanalpha.insecurecomponent.refs={0}
pscanalpha.insecurecomponent.soln=Actualizar de {0} {1} a la \u00faltima versi\u00f3n estable del producto. \nUsar un gestor de paquetes y pol\u00edticas de gesti\u00f3n de paquetes y procedimientos para administrar las versiones instaladas de paquetes software.

pscanalpha.bigredirectsscanner.name=Gran Redirecci\u00f3n detectado (potencial divulgaci\u00f3n de informaci\u00f3n sensible)
pscanalpha.bigredirectsscanner.desc=El servidor ha respondido con una redirecci\u00f3n que parece proporcionar una grande respuesta. Esto podr\u00eda indicar que aunque el servidor envi\u00f3 una redirecci\u00f3n el tambi\u00e9n respondi\u00f3 con contenido (lo que podr\u00eda contener detalles sensibles, PII, etc).
pscanalpha.bigredirectsscanner.refs=[cadena vac\u00eda]
pscanalpha.bigredirectsscanner.soln=Aseg\u00farese que no se divulga ninguna informaci\u00f3n sensible mediante respuestas re-direccionadas. Respuestas re-direccionadas deber\u00edan tener muy poco contenido.
pscanalpha.bigredirectsscanner.extrainfo=Ubicaci\u00f3n de longitud encabezado URI\: {0} [{1}].\nTama\u00f1o predecido de respuesta\: {2}.\nLongitud de cuerpo de respuesta\: {3}.


pscanalpha.storabilitycacheability.name=Content Cacheability

pscanalpha.nonstorable.name=Contenido no almacenable
pscanalpha.nonstorable.desc=Los contenidos de respuesta no son almacenables de contenidos cach\u00e9 tales como servidores proxy. Si la respuesta no contiene informaci\u00f3n sensible, personal, o espec\u00edfico de un usuario, podr\u00eda beneficiarse de ser almacenado y en cach\u00e9, para mejorar el rendimiento.
pscanalpha.nonstorable.refs=https\://Tools.ietf.org/html/rfc7234 \nhttps\://tools.ietf.org/html/rfc7231 \nhttp\://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (sustituido por rfc7234)
pscanalpha.nonstorable.soln=El contenido podr\u00eda estar marcado como almacenable al asegurar que se cumplen las siguientes condiciones\:\nEl m\u00e9todo de petici\u00f3n debe ser entendido por el cach\u00e9 y definido como almacenable en cach\u00e9 (''''GET'''', ''''HEAD'''', y ''''POST'''' son actualmente definidos como almacenables en cach\u00e9)\nEL c\u00f3digo de estado de respuesta debe ser entendido por el cach\u00e9 (una de las 1XX, 2XX, 3XX, 4XX o 5XX tipos de respuestas son generalmente entendidas)\nLa directiva del cach\u00e9 ''''no-store'''' no debe aparecer en la petici\u00f3n o los campos de encabezado de respuesta\nPara el almacenamiento en cach\u00e9 mediante cach\u00e9s "compartidos" como cach\u00e9s "proxy", la directiva de respuesta "privada" no debe aparecer en la respuesta\nPara el almacenamiento en cach\u00e9 mediante cach\u00e9s "''compartidos'''' como cach\u00e9s ''''proxy'''', el campo de encabezado ''''Autorizaci\u00f3n"'' no debe aparecer en la petici\u00f3n, excepto que la respuesta lo permita expl\u00edcitamente (usando uno de los "debe-revalidarse'''', ''''''p\u00fablico'''' o ''''s-maxage'''' directivas de control de control-cach\u00e9)\nEn adici\u00f3n a las condiciones arriba, al menos una de las siguientes condiciones debe tambi\u00e9n cumplirse por la respuesta\:\nDebe contener un campo de encabezado "Expira"\nDebe contener una directiva de respuesta "max-age''''\nPara cach\u00e9s ''''compartidos'''' tales como cach\u00e9s ''''proxy'''', debe contener una directiva de respuesta ''''''s-maxage''''\nDebe contener una ''''\u00c9xtensi\u00f3n de control de cach\u00e9'''' que permita que sea almacenado en cach\u00e9\nDebe tener un c\u00f3digo de estado que sea definido como almacenable en cach\u00e9 por defecto (200, 203, 204, 206, 300, 301, 404, 405, 410, 414, 501).   
pscanalpha.nonstorable.extrainfo={0}

pscanalpha.storablenoncacheable.name=Storable but Non-Cacheable Content
pscanalpha.storablenoncacheable.desc=Los contenidos de respuesta son almacenables por componentes de almacenamiento en cach\u00e9 tales como servidores proxy, pero no ser\u00e1n obtenidos directamente desde el cach\u00e9, sin validar la petici\u00f3n, en respuesta a peticiones similares de otros usuarios. 
pscanalpha.storablenoncacheable.refs=https\://Tools.ietf.org/html/rfc7234 \nhttps\://tools.ietf.org/html/rfc7231 \nhttp\://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (sustituido por rfc7234)
pscanalpha.storablenoncacheable.soln=[cadena vac\u00eda]
pscanalpha.storablenoncacheable.extrainfo={0}}

pscanalpha.storablecacheable.name=Contenido almacenable y almacenable en cach\u00e9
pscanalpha.storablecacheable.desc=Los contenidos de respuesta son almacenables por componentes almacenables en cach\u00e9 tales como servidores proxy, y podr\u00edan ser obtenidos directamente desde el cach\u00e9, en lugar de desde el servidor de origen por los servidos de almacenamiento en cach\u00e9, en respuesta a peticiones similares de otros usuarios. Si los datos de respuesta son sensibles, personal o espec\u00edficas de un usuario, esto podr\u00eda resultar en la divulgaci\u00f3n de informaci\u00f3n sensible. En alguno casos, esto podr\u00eda incluso resultar en un usuario ganando el control completo de la sesi\u00f3n de otro usuario, dependiendo en la configuraci\u00f3n de los componentes almacenables en cach\u00e9 en uso en sus ambientes. Esto es primariamente un problema donde servidores de cach\u00e9 ''''compartidos'''' tales como cach\u00e9s ''''proxy'''' son configurados en la red local. esta configuraci\u00f3n es t\u00edpicamente encontrado en ambientes educativos o corporativos, por ejemplo.
pscanalpha.storablecacheable.refs=https\://Tools.ietf.org/html/rfc7234 \nhttps\://tools.ietf.org/html/rfc7231 \nhttp\://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (sustituido por rfc7234)
pscanalpha.storablecacheable.soln=Validar que la respuesta no contenga informaci\u00f3n sensible, personal o espec\u00edfica de un usuario. SI lo hace, considerar el uso de los siguientes encabezados de respuesta HTTP, para limitar, o prevenir el contenido siendo almacenado y recuperados del cach\u00e9 por otro usuario\:\nControl-Cach\u00e9\: no-cache, no-store, must-revalidate, private\nPragma\: no-cache\nExpires\: 0\nEsta configuraci\u00f3n dirige ambos HTTP 1.0 y HTTP 1.1 servidores de cach\u00e9 compatibles a no almacenar la respuesta, y a no recuperar la respuesta (sin validaci\u00f3n) del cach\u00e9, en respuesta a una petici\u00f3n similar. 
pscanalpha.storablecacheable.extrainfo={0}
pscanalpha.storablecacheable.otherinfo.liberallifetimeheuristic=En la ausencia de una directiva de vida de cach\u00e9 expl\u00edcitamente especificada en la respuesta, ha sido asumido un heur\u00edstico tiempo de vida liberal de un a\u00f1o. Esto es permitido por rfc7234.
pscanalpha.storablecacheable.otherinfo.staleretrievenotblocked=The response is stale, and stale responses are not configured to be re-validated or blocked, using the 'must-revalidate', 'proxy-revalidate', 's-maxage', or 'max-age' response 'Cache-Control' directives.

pscanalpha.retrievedfromcache.name=Retrieved from Cache
pscanalpha.retrievedfromcache.desc=The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as "proxy" caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance. 
pscanalpha.retrievedfromcache.refs=https\://Tools.ietf.org/html/rfc7234 \nhttps\://tools.ietf.org/html/rfc7231 \nhttp\://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (sustituido por rfc7234)
pscanalpha.retrievedfromcache.soln=Validar que las respuestas no contengan informaci\u00f3n sensible, personal o especifica de un usuario. Si lo hace, considerar usando los siguientes encabezados de respuesta HTTP, para limitar, o prevenir el contenido de ser almacenado y recuperado del cach\u00e9 por otro usuario\:\nControl-Cach\u00e9l\: no-cache, no-store, must-revalidate, private\nPragma\: no-cache\nExpires\: 0\nEsta configuraci\u00f3n dirige ambos servidores de cach\u00e9 compatibles HTTP 1. P y HTTP 1.1  a no almacenar la respuesta, y no recuperar la respuesta (sin validaci\u00f3n) del cach\u00e9, en respuesta a una petici\u00f3n similar.
pscanalpha.retrievedfromcache.extrainfo={0}
pscanalpha.retrievedfromcache.extrainfo.http11ageheader=La presencia del encabezado 'Age' indica que un servidor de cach\u00e9 compatible HTTP/1.1 est\u00e1 en uso/.

pscanalpha.imagelocationscanner.name=Ubicaci\u00f3n de imagen y Esc\u00e1ner de privacidad
pscanalpha.imagelocationscanner.alerttitle=La imagen divulga datos de ubicaci\u00f3n o privacidad
pscanalpha.imagelocationscanner.alertDetailPrefix=This image embeds a location or leaks privacy-related data\: 
pscanalpha.imagelocationscanner.desc=Se ha encontrado que la imagen conten\u00eda informaci\u00f3n de ubicaci\u00f3n incrustada, tales como coordinadas GPS, o otra exposici\u00f3n de privacidad, tales como n\u00fameros seriales de c\u00e1mara. Dependiendo del contexto de la imagen en el sitio web, esta informaci\u00f3n podr\u00eda exponer detalles privados de los usuarios de un sitios. Por ejemplo, un sitio que permita a los usuarios cargar im\u00e1genes de perfil tomadas en casa podr\u00eda exponer la direcci\u00f3n de la casa.  
pscanalpha.imagelocationscanner.refs=https\://www.veggiespam.com/ils/
pscanalpha.imagelocationscanner.soln=Before allowing images to be stored on the server and/or transmitted to the browser, strip out the embedded location information from image.  This could mean removing all Exif data or just the GPS component.  Other data, like serial numbers, should also be removed.

pscanalpha.usernameidor.name=Username Hash Found
pscanalpha.usernameidor.desc=Un hash de un nombre usuario ({0}) fue encontrado en la respuesta. Esto podr\u00eda indicar que la aplicaci\u00f3n esta sujeta a una vulnerabilidad Insecure Direct Object Reference (IDOR). Pruebas manuales ser\u00e1n requeridas para ver si este descubrimiento puede ser abusado.
pscanalpha.usernameidor.otherinfo=The hash was an {0}, with value\: {1} 
pscanalpha.usernameidor.soln=Use per user or session indirect object references (create a temporary mapping at time of use). Or, ensure that each use of a direct object reference is tied to an authorization check to ensure the user is authorized for the requested object. 
pscanalpha.usernameidor.refs=https\://www.owasp.org/index.php/Top_10_2013-A4-Insecure_Direct_Object_References\nhttps\://www.owasp.org/index.php/Testing_for_Insecure_Direct_Object_References_(OTG-AUTHZ-004)

pscanalpha.xaspnetversioncanner.name=X-AspNet-Version Response Header Scanner
pscanalpha.xaspnetversioncanner.desc=El servidor divulga informaci\u00f3n mediante campo(s) de encabezado de respuesta HTTP "X-AspNet-Version"/"X-AspNetMvc-Version".
pscanalpha.xaspnetversioncanner.soln=Configure the server so it will not return those headers.
pscanalpha.xaspnetversioncanner.extrainfo=An attacker can use this information to exploit known vulnerabilities.
pscanalpha.xaspnetversioncanner.refs=https\://www.troyhunt.com/shhh-dont-let-your-response-headers/\nhttps\://blogs.msdn.microsoft.com/varunm/2013/04/23/remove-unwanted-http-response-headers/

pscanalpha.xchromeloggerdata.name=X-ChromeLogger-Data (XCOLD) Header Information Leak
pscanalpha.xchromeloggerdata.desc=El servidor est\u00e1 divulgando informaci\u00f3n mediante el encabezado de respuesta X-ChromeLogger-Data (o X-ChromePhp-Data). El contenido de tales encabezados puede ser personalizado por el desarrollador, de todas formas no es raro encontrar esto\: ubicaciones del sistema de archivos de servidores, declaraciones de vhost, etc.
pscanalpha.xchromeloggerdata.refs=https\://craig.is/writing/chrome-logger
pscanalpha.xchromeloggerdata.soln=Deshabilitar esta funcionalidad en producci\u00f3n cuando posiblemente vaya a divulgar informaci\u00f3n que podr\u00eda ser aprovechada por un atacante. Alternativamente aseg\u00farese que el uso de la funcionabilidad est\u00e1 atada a una comprobaci\u00f3n de autorizaci\u00f3n fuerte y solo disponible a administradores o personal de apoyo para prop\u00f3sitos de soluci\u00f3n de problemas y no de usuarios generales.
pscanalpha.xchromeloggerdata.otherinfo.msg=El siguiente representa un intento de base64 de decodificar el valor\:
pscanalpha.xchromeloggerdata.otherinfo.error=Header value could not be base64 decoded\:

pscanalpha.xdebugtoken.name=X-Debug-Token Information Leak
pscanalpha.xdebugtoken.desc=The response contained an X-Debug-Token or X-Debug-Token-Link header. This indicates that Symfony's Profiler may be in use and exposing sensitive data.
pscanalpha.xdebugtoken.otherinfo=Al acceder a un URL de la forma http\://target_host/_profiler/token_value (i.e.\: http\://example.com/_profiler_/123ab4), usted podr\u00eda ganar acceso al perfil e informaci\u00f3n divulgada adicional.
pscanalpha.xdebugtoken.refs=https\://Symfony.com/doc/Current/Cookbook/Profiler/profiling_data.html \nhttps\://symfony.com/blog/new-in-symfony-2-4-quicker-access-to-the-profiler-when-working-on-an-api
pscanalpha.xdebugtoken.soln=Limit access to Symfony's Profiler, either via authentication/authorization or limiting inclusion of the header to specific clients (by IP etc).


#X-Generator: crowdin.com
# This file defines the default (English) variants of all of the internationalised messages
pscanalpha.desc=Mga Passive Scan Rules - alpha

pscanalpha.cookiesamesitescanner.name=Cookie Without SameSite Attribute
pscanalpha.cookiesamesitescanner.desc=Isang cookie ang naitakda nang walang SameSite na katangian, na nangangahulugang ang cookie ay maaaring maipadala bilang resulta ng isang 'cross-site' na kahilingan.\nAng katangian ng SameSite ay isang epektibong panukalang counter sa pag-request ng cross-site na palsipikado, pagsasama ng cross-site script, at mga pag-atake sa pag-time.
pscanalpha.cookiesamesitescanner.badval=Ang cookie ay naitakda na may di-wastong halaga ng attribute na SameSite, na nangangahulugang maaaring ipadala ang cookie bilang resulta ng isang 'cross-site' na kahilingan.\nAng katangian ng SameSite ay isang epektibong panukalang counter sa pag-request ng cross-site na palsipikado, pagsasama ng cross-site script, at mga pag-atake sa tamang oras.
pscanalpha.cookiesamesitescanner.soln=Tiyakin na ang SameSite na katangian ay naka-set sa alinman sa 'lax' o sa isip 'mahigpit' para sa lahat ng cookies.
pscanalpha.cookiesamesitescanner.refs=https\://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site

pscanalpha.examplefile.name=Isang halimbawa ng passive scan rule na naglo-load ng data mula sa isang file
pscanalpha.examplefile.desc=Magdagdag ng karagdagang impormasyon tungkol sa kahinaan dito
pscanalpha.examplefile.other=Ito ay para sa impormasyon na hindi magkasya sa alinman sa iba pang mga seksyon
pscanalpha.examplefile.soln=Isang pangkalahatang paglalarawan kung paano malutas ang problema
pscanalpha.examplefile.refs=http\://zaproxy.blogspot.co.uk/2014/04/hacking-zap-3-passive-scan-rules.html

pscanalpha.insecureformload.name=HTTP sa HTTPS Pagliligtas ng Walang Seguridad sa Form Post
pscanalpha.insecureformload.desc=Ang tseke na ito ay naghahanap para sa mga pahina ng hindi secure na HTTP na nagho-host ng mga form ng HTTPS. Ang isyu ay ang isang hindi secure na pahina ng HTTP ay maaaring madaling i-hijack sa pamamagitan ng MITM at ang secure na form ng HTTPS ay maaaring mapalitan o ma-spoof.
pscanalpha.insecureformload.refs=
pscanalpha.insecureformload.soln=Gamitin ang HTTPS para sa pagpunta sa pahina ng secure forms.
pscanalpha.insecureformload.exploit=
pscanalpha.insecureformload.extrainfo=Ang tugon sa sumusunod na kahilingan sa HTTP ay kasama ang halaga ng attribute tag na pagkilos ng tag ng HTTPS

pscanalpha.insecureformpost.name=HTTPS sa HTTP Insecure Transition sa Form Post
pscanalpha.insecureformpost.desc=Kinikilala ng cheke na ito ang mga secure na pahina ng HTTPS na naka-host ng mga hindi secure na form sa HTTP. Ang isyu ay na ang isang secure na pahina ay lumilipat sa isang hindi secure na pahina kapag ang data ay na-upload sa isang form. Maaaring isipin ng gumagamit na nagpapadala sila ng data sa isang secure na pahina kapag sa katunayan sila ay hindi.
pscanalpha.insecureformpost.refs=
pscanalpha.insecureformpost.soln=Tiyakin na ang sensitibong datos ay ipinapadala lamang sa mga siguradong mga channel ng HTTPS.
pscanalpha.insecureformpost.exploit=
pscanalpha.insecureformpost.extrainfo=Ang sagot sa sumusunod na kahilingan sa HTTPS ay kasama ang isang halaga ng attribute ng pagkilos ng tag ng HTTP form

pscanalpha.usercontrolledcharset.name=User Controllable Charset
pscanalpha.usercontrolledcharset.desc=Ang tseke na ito ay tumitingin sa input na ibinigay ng may gamit sa mga parameter ng query string at POST na datos upang matukoy kung saan ang mga deklarasyon ng Content-Type o meta tag ay maaaring kontrolado ng user. Ang naturang mga deklarasyon ng charset ay dapat palaging ideklara ng aplikasyon. Kung ang isang magsasalakay ay makokontrol sa charset ng sagot, maaari nilang manipulahin ang HTML upang magsagawa ng XSS o iba pang mga pag-atake.
pscanalpha.usercontrolledcharset.refs=
pscanalpha.usercontrolledcharset.soln=Puwersa UTF-8 sa lahat ng mga deklarasyon ng charset. Kung ang user-input ay kinakailangan upang magpasiya ng deklarasyon ng charset, tiyakin na tanging isang pinapayagang listahan ang ginagamit.
pscanalpha.usercontrolledcharset.exploit=Ang isang magsasalakay na nagkokontrol sa halaga ng <meta> elemento ng charset ay maaaring magdeklara ng UTF-7 at maaari ring isama ang sapat na kargamento na kinokontrol ng user nang maaga sa dokumento ng HTML upang ipaliwanag ito bilang UTF-7. Sa pamamagitan ng pag-encode ng kanilang kargamento sa UTF-7 ang magsasalakay ay makakapag-bypass ng anumang mga proteksyon sa XSS server at naka-embed na script sa pahina.
pscanalpha.usercontrolledcharset.extrainfo=Isang (n) [{0}] tag na [{1}] na katangian\n\nAng nahanap na user ay\:\n{2}\={3}\n\nAng halaga ng charset na kinokontrol nito ay\:\n{4}

pscanalpha.usercontrolledcookie.name=Pagkalason ng Cookie
pscanalpha.usercontrolledcookie.desc=Tinitingnan ng check na ito ang input na ibinibigay ng user sa mga parameter ng query string at POST na datos upang makilala kung saan maaaring kontrolin ang mga parameter ng cookie. Ito ay tinatawag na isang pag-atake ng pagkalason ng cookie, at nagiging exploitable kapag ang isang magsasalakay ay maaaring manipulahin ang cookie sa iba't ibang paraan. Sa ilang mga kaso na ito ay hindi maaapektuhan, gayunpaman, na nagpapahintulot sa mga parameter ng URL na magtakda ng mga halaga ng cookie ay karaniwang itinuturing na isang bug.
pscanalpha.usercontrolledcookie.refs=http\://websecuritytool.codeplex.com/wikipage?title\=Checks\#user-controlled-cookie
pscanalpha.usercontrolledcookie.soln=Huwag pahintulutan ang pag-input ng gumagamit upang kontrolin ang mga pangalan at halaga ng cookie. Kung ang ilang parameter ng query string ay dapat itakda sa mga halaga ng cookie, siguraduhin na i-filter ang semicolon's na maaaring magsilbi bilang mga delimiter ng pangalan / halaga pares.
pscanalpha.usercontrolledcookie.exploit.get=Ang isang magsasalakay ay maaaring makalason sa mga halaga ng cookie sa pamamagitan ng mga parameter ng URL. Subukan ang pag-inject ng isang tuldok-tuldok upang makita kung maaari kang magdagdag ng mga halaga ng cookie (hal. Pangalan\=controlledValue; name\=anotherValue;).
pscanalpha.usercontrolledcookie.exploit.post=Ang isang magsasalakay ay maaaring makalason sa mga halaga ng cookie sa pamamagitan ng mga parameter ng POST. Upang masubukan kung ito ay isang mas malubhang isyu, dapat mong subukan ang resending na kahilingan bilang isang GET, kasama ang parameter na POST kasama bilang query string parmeter. Halimbawa\: http\://nottrusted.com/page?value\=maliciousInput.\n\n
pscanalpha.usercontrolledcookie.extrainfo=Nakilala ito sa\:\n\n{0}\n\nAng input ng user ay natagpuan sa sumusunod na cookie\:\n{1}\n\nAng input ng gumagamit ay\:\n{2}\={3}

pscanalpha.usercontrolledjavascriptevent.name=User Controllable JavaScript Event (XSS)
pscanalpha.usercontrolledjavascriptevent.desc=Tinitingnan ng check na ito ang input ng user na ibinigay sa mga parameter ng query string at POST na data upang makilala kung saan maaaring kontrolado ang ilang mga halaga ng attribute ng HTML. Nagbibigay ito ng pagtukoy ng hot-spot para sa XSS (cross-site scripting) na nangangailangan ng karagdagang pagsusuri ng isang analyst ng seguridad upang matukoy ang pagsasamantala.            
pscanalpha.usercontrolledjavascriptevent.refs=http\://websecuritytool.codeplex.com/wikipage?title\=Checks\#user-javascript-event
pscanalpha.usercontrolledjavascriptevent.soln=Patunayan ang lahat ng input at sanitize output ito bago magsulat sa anumang Javascript sa * kaganapan.
pscanalpha.usercontrolledjavascriptevent.exploit=
pscanalpha.usercontrolledjavascriptevent.extrainfo=Natagpuan ang (mga) javascript event na kinokontrol ng user. Kakailanganin ang eksploitability na manu-manong matukoy. Ang pahina sa sumusunod na URL\:\n\n{0} "\n\nKabilang sa mga sumusunod na kaganapan ng Javascript na maaaring maatake sa pag-atake\:\n\nAng input ng user ay natagpuan sa sumusunod na data ng isang kaganapan na [{1}]\:\n{2}\n\nAng input ng gumagamit ay\:\n{3}

pscanalpha.usercontrolledjavascriptproperty.name=User Controllable JavaScript Property (XSS)
pscanalpha.usercontrolledjavascriptproperty.desc=Tinitingnan ng check na ito ang input na binigay ng gumagamit sa mga parameter ng query string at POST na datos upang matukoy kung saan ang URL sa ilang mga pag-aari ng javascript (hal. CreateElement src) ay maaaring maging takot. Nagbibigay ito ng pagtukoy ng hot-spot para sa XSS (cross-site scripting) na nangangailangan ng karagdagang pagsusuri ng isang analyst ng seguridad upang matukoy ang pagsasamantala.            
pscanalpha.usercontrolledjavascriptproperty.refs=http\://websecuritytool.codeplex.com/wikipage?title\=Checks\#user-controlled-javascript-reference
pscanalpha.usercontrolledjavascriptproperty.soln=Huwag pahintulutan ang user-input upang kontrolin ang javascript pinagmulang mga sanggunian ng lokasyon.
pscanalpha.usercontrolledjavascriptproperty.exploit=
pscanalpha.usercontrolledjavascriptproperty.extrainfo=Lumilitaw ang pahina sa sumusunod na URL na naglalaman ng input ng user sa isang javascript na halaga ng ari-arian\:\n\n{0} Ang input ng gumagamit na natagpuan ay\:\n{1}\={2}\n\nAng konteksto ay\:\n{3}

pscanalpha.usercontrolledhtmlattributes.name=User Controllable HTML Element Attribute (Potensyal na XSS)
pscanalpha.usercontrolledhtmlattributes.desc=Tinitingnan ng check na ito ang input ng user na ibinigay sa mga parameter ng query string at POST na data upang makilala kung saan maaaring kontrolado ang ilang mga halaga ng attribute ng HTML. Nagbibigay ito ng pagtukoy ng hot-spot para sa XSS (cross-site scripting) na nangangailangan ng karagdagang pagsusuri ng isang analyst ng seguridad upang matukoy ang pagsasamantala.
pscanalpha.usercontrolledhtmlattributes.refs=http\://websecuritytool.codeplex.com/wikipage?title\=Checks\#user-controlled-html-attribute
pscanalpha.usercontrolledhtmlattributes.soln=Patunayan ang lahat ng input at sanitize output ito bago magsulat sa anumang mga katangian ng HTML.
pscanalpha.usercontrolledhtmlattributes.exploit=
pscanalpha.usercontrolledhtmlattributes.extrainfo=Natagpuan ang mga katangian ng HTML na kinokontrol ng user. Subukan ang pag-inject ng mga espesyal na character upang makita kung maaaring maging posible ang XSS. Ang pahina sa sumusunod na URL\:\n\n{0}\n\nLumilitaw na isama ang input ng gumagamit sa\:\n\nisang (n) [{1}] na tag na [{2}] na katangian\n\nAng nahanap na user ay\:\n{3}\={4}\n\nAng halaga ng user na kinokontrol ay\:\n{5}

pscanalpha.usercontrolledopenredirect.name=Buksan ang Redirect
pscanalpha.usercontrolledopenredirect.desc=Buksan ang mga pag-redirect ay isa sa OWASP 2010 Top Ten vulnerabilities. Tinitingnan ng tseke na ito ang input ng user na ibinigay sa mga parameter ng query string at POST na data upang makilala kung saan maaaring maging posible ang mga bukas na pag-redirect. Ang mga bukas na pag-redirect ay nangyayari kapag ang isang application ay nagbibigay-daan sa input ng ibinibigay ng gumagamit (hal. Http\://nottrusted.com) upang makontrol ang isang pag-redirect ng offsite. Ito ay pangkaraniwang isang tumpak na paraan upang malaman kung saan maaaring gamitin ang 301 o 302 na pag-redirect ng mga spammer o phishing na pag-atake
pscanalpha.usercontrolledopenredirect.soln=Upang maiwasan ang kahinaan sa pag-redirect ng bukas, ang mga parameter ng application script/program ay dapat na mapatunayan bago magpadala ng 302 HTTP code (pag-redirect) sa browser ng client. Ipatupad ang pag-andar ng ligtas na pag-redirect na nagre-redirect lang sa kamag-anak ng URI, o isang listahan ng mga pinagkakatiwalaang mga domain
pscanalpha.usercontrolledopenredirect.exploit=Ang isang magsasalakay ay maaaring magbigay ng isang user na may sumusunod na link\: http\://example.com/example.php?url\=http\://malicious.example.com
pscanalpha.usercontrolledopenredirect.refs=https\://www.owasp.org/index.php/Open_redirect\nhttps\://owasp.org/index.php/Top_10_2010-A10-Unvalidated_Redirects_and_Forwards\nhttps\://cwe.mitre.org/data/definitions/601.html
pscanalpha.usercontrolledopenredirect.extrainfo.get=Ang 301 o 302 na sagot sa isang kahilingan para sa sumusunod na URL ay lumitaw na naglalaman ng input ng user sa header ng lokasyon\:\n\n
pscanalpha.usercontrolledopenredirect.extrainfo.post=Nakita ang isang bukas na redirect na kontrolado ng mga parameter ng POST. Upang masubukan kung ito ay isang mas seryosong isyu, dapat mong subukang ipagpatuloy ang kahilingang iyon bilang GET, kasama ang parameter na POST na kasama bilang parameter ng query string. Halimbawa\: http\://nottrusted.com/page?url\=http\://lookout.net.\n\nAng 301 o 302 na sagot sa isang kahilingan para sa sumusunod na URL ay lumitaw na naglalaman ng input ng user sa header ng lokasyon\:\n\n
pscanalpha.usercontrolledopenredirect.extrainfo.common={0}\n\nAng user input ay natagpuan sa\:\n\n{1}\={2}\n\nAng nilalaman ay\:\n\n{3}

pscanalpha.sourcecodedisclosure.name=Ang pagbubunyag sa pinagmula ng code
pscanalpha.sourcecodedisclosure.desc=Ang Code ng Paggamit ng Application ay isiwalat ng web server
pscanalpha.sourcecodedisclosure.soln=Tiyakin na ang Code ng Paggamit ng aplikasyon ay hindi magagamit sa mga alternatibong extension, at tiyakin na ang source code ay hindi naroroon sa loob ng ibang mga file o data na ipinadala sa web server, o nagsilbi sa pamamagitan ng web server. 
pscanalpha.sourcecodedisclosure.refs=http\://blogs.wsj.com/cio/2013/10/08/adobe-source-code-leak-is-bad-news-for-u-s-government/
pscanalpha.sourcecodedisclosure.extrainfo={0}

pscanalpha.hashdisclosure.name=Ang pagbubunyag ng hash
pscanalpha.hashdisclosure.desc=Ang isang hash ay isiniwalat ng web server
pscanalpha.hashdisclosure.soln=Makakatiyak na ang hashes na ginagamit upang protektahan ang mga kredensyal o iba pang mga mapagkukunan ay hindi leaked ng web server o database. Karaniwan walang pangangailangan para sa mga password na may access sa web browser.      
pscanalpha.hashdisclosure.refs=https\://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure\nhttp\://projects.webappsec.org/w/page/13246936/Information%20Leakage\nhttp\://openwall.info/wiki/john/sample-hashes
pscanalpha.hashdisclosure.extrainfo={0}

pscanalpha.timestampdisclosure.name=Ang pagbubunyag ng Timestamp
pscanalpha.timestampdisclosure.desc=Ang isang timestamp ay isiwalat ng application / web server
pscanalpha.timestampdisclosure.soln=Isa isahing kumpirmahin ang datod ng timestamp ay hindi sensitibo, at ang data ay hindi maaaring pagsamahin upang ibunyag ang mga magagamit na mga pattern.
pscanalpha.timestampdisclosure.refs=https\://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure\nhttp\://projects.webappsec.org/w/page/13246936/Information%20Leakage
pscanalpha.timestampdisclosure.extrainfo={0}, na sinusuri sa\: {1}

pscanalpha.base64disclosure.name=Pagpapahayag ng Base64
pscanalpha.base64disclosure.desc=Ang naka-encode na data Base64 ay isiwalat ng application / web server
pscanalpha.base64disclosure.soln=Isa isahing kumpirmahin na ang Base64 na datos ay hindi tumutulo sa sensitibong impormasyon, at ang datos ay hindi maaaring isama / ginamit upang pagsamantalahan ang iba pang mga kahinaan.
pscanalpha.base64disclosure.refs=https\://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure\nhttp\://projects.webappsec.org/w/page/13246936/Information%20Leakage
pscanalpha.base64disclosure.extrainfo={1}

pscanalpha.base64disclosure.viewstate.name=Tignan ang katayuan ng pag bubunyag ASP.NET
pscanalpha.base64disclosure.viewstate.desc=An ASP.NET Tignan ang pagbubunyag sa pamamagitan ng aplikasyon/web server
pscanalpha.base64disclosure.viewstate.soln=Manu-manong kumpirmahin na hindi tinatanggal ng ASP.NET ViewState ang sensitibong impormasyon, at ang data ay hindi maaaring pagsama / ginagamit upang pagsamantalahan ang iba pang mga kahinaan.
pscanalpha.base64disclosure.viewstate.refs=http\://msdn.microsoft.com/en-us/library/bb386448.aspx\nhttps\://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure\nhttp\://projects.webappsec.org/w/page/13246936/Information%20Leakage
pscanalpha.base64disclosure.viewstate.extrainfo={0}

pscanalpha.base64disclosure.viewstatewithoutmac.name=Tignan ang katayuan ng integridad sa ASP.NET
pscanalpha.base64disclosure.viewstatewithoutmac.desc=Ang aplikasyon ay hindi gumagamit ng Code Authentication Code (MAC) upang maprotektahan ang integridad ng ASP.NET ViewState, na maaaring tampered ng isang malisyosong client
pscanalpha.base64disclosure.viewstatewithoutmac.soln=Tiyakin na ang lahat ng ASP.NET ViewStates ay protektado mula sa pag-tampering, sa pamamagitan ng paggamit ng MAC, na binuo gamit ang isang secure na algorithm, at isang lihim na key sa gilid ng server. Ito ang default na pagsasaayos sa modernong pag-install ng ASP.NET, sa pamamagitan ng maaaring over-ridden programatically, o sa pamamagitan ng configuration ng ASP.NET.
pscanalpha.base64disclosure.viewstatewithoutmac.refs=http\://msdn.microsoft.com/en-us/library/bb386448.aspx\nhttps\://www.jardinesoftware.net/2012/02/06/asp-net-tampering-with-event-validation-part-1/
pscanalpha.base64disclosure.viewstatewithoutmac.extrainfo={0}

pscanalpha.directorybrowsing.name=Direktoryo ng pag-hahanap
pscanalpha.directorybrowsing.desc=Posibleng tingnan ang listahan ng mga nilalaman ng direktoryo. Ang listahan ng mga listahan ay maaaring magbunyag ng mga nakatagong script, isama ang mga file, mga file ng backup na pinagmulan, atbp, na ma-access upang ipakita ang sensitibong impormasyon.
pscanalpha.directorybrowsing.soln=I-configure ang web server upang huwag paganahin ang pag-browse sa direktoryo. 
pscanalpha.directorybrowsing.refs=https\://cwe.mitre.org/data/definitions/548.html
pscanalpha.directorybrowsing.extrainfo={0}

pscanalpha.heartbleed.name=Heartbleed OpenSSL Vulnerability (tumuturo)
pscanalpha.heartbleed.desc=Ang mga pagpapatupad ng TLS at DTLS sa OpenSSL 1.0.1 bago 1.0.1g ay hindi maayos na pinangangasiwaan ang mga packet na Heartbeat Extension, na nagpapahintulot sa mga remote attackers na makakuha ng sensitibong impormasyon mula sa memory ng proseso sa pamamagitan ng mga naka-pack na packet na nagpapalitaw ng buffer over-read, potensyal na ibubunyag ang sensitibong impormasyon.
pscanalpha.heartbleed.soln=I-update sa OpenSSL 1.0.1g o mas bago. Muling na-isyu ang mga sertipiko ng HTTPS. Baguhin ang mga walang-pribadong mga pribadong key at nakabahagi ng mga lihim na key, dahil ang mga ito ay maaaring naka-kompromiso, na walang katibayan ng pagkompromiso sa mga file ng log ng server.
pscanalpha.heartbleed.refs=http\://cvedetails.com/cve-details.php?t\=1&cve_id\=CVE-2014-0160
pscanalpha.heartbleed.extrainfo=Ginagamit ang {0}. Gayunpaman tandaan na ang iniulat na bersyon ay maaaring maglaman ng mga pag-aayos ng seguridad na nai-back-port, at sa gayon ang isyu ay maaaring isang maling positibo. Ito ay karaniwan sa Red Hat, halimbawa.

pscanalpha.crossdomain.name=Pag-configure ng Cross-Domain
pscanalpha.crossdomain.desc=Maaaring posible ang pag-load ng data ng browser ng web, dahil sa misconfiguration ng Cross Origin Resource Sharing (CORS) sa web server
pscanalpha.crossdomain.soln=Tiyakin na ang sensitibong datos ay hindi magagamit sa isang hindi awtorisadong paraan (gamit ang IP address na white-listing, halimbawa).\nI-configure ang header ng HTTP na "Access-Control-Allow-Origin" sa isang mas mahigpit na hanay ng mga domain, o alisin ang lahat ng mga header ng CORS, upang payagan ang web browser na ipatupad ang Parehong Patakaran sa Pinagmulan (SOP) sa mas mahigpit na paraan.
pscanalpha.crossdomain.refs=http\://www.hpenterprisesecurity.com/vulncat/en/vulncat/vb/html5_overly_permissive_cors_policy.html
pscanalpha.crossdomain.extrainfo=Pinapayagan ng maling pag-configure ng CORS sa web server ang mga hiling na cross-domain na nabasa mula sa mga arbitrary na mga domain ng ikatlong partido, gamit ang mga hindi awtorisadong API sa domain na ito. Gayunpaman, hindi pinapahintulutan ng mga pagpapatupad ng web browser ang mga arbitrary na third party na basahin ang tugon mula sa napatotohanan na mga API. Binabawasan nito ang panganib. Ang misconfiguration na ito ay maaaring gamitin ng isang magsasalakay upang ma-access ang data na magagamit sa isang unauthenticated paraan, ngunit na gumagamit ng ilang iba pang paraan ng seguridad, tulad ng IP address white-listing.

pscanalpha.serverheader.scanner.name=HTTP Server kasagutan Header Scanner
pscanalpha.serverheaderversioninfoleak.name=Server Leaks Version Impormasyon sa pamamagitan ng "Server" HTTP Response Header Field
pscanalpha.serverheaderversioninfoleak.desc=Ang server ng web / aplikasyon ay tumagas na bersyon ng impormasyon sa pamamagitan ng header ng tugon ng "Server" HTTP. Maaaring mapadali ng access sa naturang impormasyon ang mga attacker na nakakikilala sa iba pang mga kahinaan na napapailalim sa server ng iyong web / application.
pscanalpha.serverheaderinfoleak.name=Ang Paglabas ng Server ng Webserver nito sa Server sa pamamagitan ng "Server" HTTP Response Header Field
pscanalpha.serverheaderinfoleak.desc=Ang server ng web/aplikasyon ay nang-gagaling sa application na ginagamit nito bilang isang webserver sa pamamagitan ng header ng tugon ng "Server" HTTP. Pweding mapadali ng daan sa naturang impormasyon ang mga attacker na nakakikilala sa iba pang mga kahinaan na napapailalim sa server ng iyong web/aplikasyon. Ang impormasyong ito ay nag-iisa, ibig sabihin, walang string na bersyon, ay hindi masyadong mapanganib para sa kaligtasan ng isang server, gayon pa man ang impormasyong ito sa patlang ng header ng tugon ay halos palaging walang silbi at sa gayon ay isang lipas na umaatake na vector.
pscanalpha.serverheaderinfoleak.general.refs=http\://httpd.apache.org/docs/current/mod/core.html\#servertokens\nhttp\://msdn.microsoft.com/en-us/library/ff648552.aspx\#ht_urlscan_007\nhttp\://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp\://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html
pscanalpha.serverheaderinfoleak.general.soln=Tiyakin na ang iyong web server, aplikasyon server, taga balanse ng load, atbp ay isinaayos upang tugisin ang header ng "Server" o magbigay ng mga generic na paliwanang.

pscanalpha.stricttransportsecurity.scanner.name=Strict-Transport-Security Header Scanner
pscanalpha.stricttransportsecurity.name=Strict-Transport-Security Header Not Set
pscanalpha.stricttransportsecurity.desc=HTTP Strict Transport Security (HSTS) ay isang mekanismo sa patakaran sa kaligtasan sa web kung saan ang isang web server ay naghahayag na ang pagsunod sa mga ahente ng gumagamit (katulad ng web browser) ay upang makipag-ugnay sa mga ito gamit lamang ang ligtas na HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF ang pamantayan ng track protocol at tinukoy sa RFC 6797.
pscanalpha.stricttransportsecurity.refs=https\://www.owasp.org/index.php/HTTP_Strict_Transport_Security\nhttps\://www.owasp.org/index.php/List_of_useful_HTTP_headers\nhttp\://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security\nhttp\://caniuse.com/stricttransportsecurity\nhttp\://tools.ietf.org/html/rfc6797
pscanalpha.stricttransportsecurity.soln=Siguraduhin na ang iyong web server, application server, taga-balanse ng load, atbp ay isinaayos upang maisagawa ang Strict-Transport-Security.
pscanalpha.stricttransportsecurity.max.age.name=Ang Strict-Transport-Security ay hindi pinagana
pscanalpha.stricttransportsecurity.max.age.desc=Ang isang header ng HTTP Strict Transport Security (HSTS) ay nakita, ngunit naglalaman ito ng direktibong max-age\=0 na hindi gumagana ang kontrol at tinuturuan ang mga browser na i-balik ang anumang naunang mga nauugnay na setting ng HSTS. Tingnan ang RFC 6797 para sa mga karagdagang paliwanag.\nAng HTTP Strict Transport Security (HSTS) ay isang mekanismo sa patakaran sa kaligtasan ng web kung saan ang isang web server ay nagpapahayag na ang mga sumusunod na mga ahente ng gumagamit (tulad ng isang web browser) ay makipag-ugnay dito gamit lamang ang mga ligtas na koneksyon sa HTTPS (ibig sabihin, HTTP layered sa TLS/SSL).
pscanalpha.stricttransportsecurity.max.age.refs=http\://tools.ietf.org/html/rfc6797\#section-6.2
pscanalpha.stricttransportsecurity.max.age.soln=Muling tignan ang pagsasaayos ng kontrol na ito. Siguraduhin ang iyong web server, application server, taga-balanse ng load, atbp. ay na-aayos upang itakda Strict-Transport-Security na may angkop max-age halaga.
pscanalpha.stricttransportsecurity.compliance.multiple.header.name=Strict-Transport-Security Multiple Header Entries (Ang Spec ay hindi sinusunod)
pscanalpha.stricttransportsecurity.compliance.multiple.header.desc=Nakita ang mga header ng HTTP Strict Transport Security (HSTS), isang tugon na may maraming ipinasok sa header ng HSTS ay hindi sumusunod sa pag-ur\u00ec (RFC 6797) at tanging ang na-unang header ng HSTS ay mapoproseso ang iba ay hindi papansinin ng mga ahente ng gumagamit o ang patakaran ng HSTS mali ang inilapat.\nAng HTTP Strict Transport Security (HSTS) ay isang mekanismo sa patakaran sa kaligtasan ng web kung saan ang isang web server ay naglalathala na ang mga sumusunod na mga ahente na gumagamit (tulad ng isang web browser) ay makipag-ugnay dito gamit lamang ang mga ligtas na koneksyon sa HTTPS (ibig sabihin, HTTP layered sa TLS/SSL).
pscanalpha.stricttransportsecurity.compliance.multiple.header.refs=http\://tools.ietf.org/html/rfc6797\#section-8.1
pscanalpha.stricttransportsecurity.compliance.multiple.header.soln=Siguraduhin na isa lamang ang bahagi sa iyong stack\: code, web server, application server, load balancer, atbp. isinaayos upang magtakda o magdagdag ng isang HTTP Strict-Transport-Security (HSTS) header.
pscanalpha.stricttransportsecurity.plain.resp.name=Strict-Transport-Security Header on Plain HTTP na kasagutan
pscanalpha.stricttransportsecurity.plain.resp.desc=Ang HTTP Strict Transport Security (HSTS) header ay natagpuan,subalit HSTS headers ito ay binaliwala ng plain (non-HTTPS) na kasagutan.\nHTTP Strict Transport Security (HSTS) is a web security mekanismo ng patakaran kung saan ang isang web server ay naglalantad na ang pagsunod sa mga ahente na gumagamit (such as a web browser) ay upang makipag-ugnay sa mga ito gamit lamang ang ligtas HTTPS connections (i.e. HTTP layered over TLS/SSL).
pscanalpha.stricttransportsecurity.plain.resp.refs=http\://tools.ietf.org/html/rfc6797\#section-8.1
pscanalpha.stricttransportsecurity.plain.resp.soln=Siyasatin muli ang pagsasaayos ng kontrol na ito. siguraduhin na ang iyong web server, application server, load balancer, atbp ay isinaayos upang itakda ang Strict-Transport-Security para sa mga kasagutan ng HTTPS.
pscanalpha.stricttransportsecurity.compliance.max.age.missing.name=Ang Mahigpit-transportasyon-seguridad na nawawalang Max-edad (di-sumusunod sa Spec)
pscanalpha.stricttransportsecurity.compliance.max.age.missing.desc=Ang HTTP Strict Transport Security (HSTS) header ito ay nakita,subalit ito ay nawawala ang max-age directive (o ang direktiba ay nawawala ang isang halaga). Tignan RFC 6797 para sa karagdagang paliwanag. HTTP Strict Transport Security (HSTS) ay isang seguridad ng web policy mekanismo kung saan ang isang web server ay naglalantad na ang pagsunod sa mga ahente ng gumagamit (such as a web browser) ay upang makipag-ugnay sa mga ito gamit lamang ang ligtas HTTPS connections (i.e. HTTP layered over TLS/SSL).v.
pscanalpha.stricttransportsecurity.compliance.max.age.missing.refs=http\://tools.ietf.org/html/rfc6797\#section-6.2
pscanalpha.stricttransportsecurity.compliance.max.age.missing.soln=Muling tignan ang pagsasaayos ng kontrol na ito. Siguraduhin ang iyong web server, application server, taga-balanse ng load, atbp. ay na-aayos upang itakda Strict-Transport-Security na may angkop max-age halaga.
pscanalpha.stricttransportsecurity.compliance.meta.name=Ang Mahigpit-transportasyon-seguridad tumutukoy sa pamamagitan ng META (Di-sumusunod sa Spec)
pscanalpha.stricttransportsecurity.compliance.meta.desc=Ang HTTP mahigpit transport na seguridad (HSTS) META tag ay hindi natagpuan, liwanagin ang HTTP mahigpit transport na seguridad (HSTS) gamit ang META tag ay pinagkakatiwalaan na hindi suportado ng spec (RFC 6797).
pscanalpha.stricttransportsecurity.compliance.meta.refs=http\://tools.ietf.org/html/rfc6797\#section-8.5
pscanalpha.stricttransportsecurity.compliance.meta.soln=Huwag magtangka ng magtada ng HTTP nahigpit transport na seguridad (HSTS) gamit ang isang META tag.
pscanalpha.stricttransportsecurity.compliance.max.age.malformed.name=Ang Mahigpit-transportasyon-seguridad Max-edad malformed (di-sumusunod sa Spec)
pscanalpha.stricttransportsecurity.compliance.max.age.malformed.desc=Ang isang header ng HTTP Strict Transport Security (HSTS) ay natagpuan, ngunit naglalaman ito ng mga panipi na sinusundan ng direktiba ng max-age (maaaring ma-quote ang halaga ng max-edad, ngunit ang direktiba mismo ay hindi maaaring maging). Tingnan ang RFC 6797 para sa mga karagdagang detalye.\nAng HTTP Strict Transport Security (HSTS) ay isang mekanismo ng patakaran sa seguridad ng web kung saan ang isang web server ay nagpapahayag na ang sumusunod sa mga ahente ng user (tulad ng isang web browser) ay makipag-ugnay dito gamit lamang ang mga secure na koneksyon sa HTTPS (ibig sabihin, HTTP layered sa TLS / SSL).
pscanalpha.stricttransportsecurity.compliance.max.age.malformed.refs=http\://tools.ietf.org/html/rfc6797\#section-6.1
pscanalpha.stricttransportsecurity.compliance.max.age.malformed.soln=Suriin ang pagsasaayos ng kontrol na ito. Tiyakin na ang iyong web server, application server, load balancer, atbp ay isinaayos upang itakda ang Strict-Transport-Security sa isang angkop na format.
pscanalpha.stricttransportsecurity.compliance.malformed.content.name=Ang Mahigpit-transportasyon-seguridad Malformed laman (di-sumusunod sa Spec)
pscanalpha.stricttransportsecurity.compliance.malformed.content.desc=Ang HTTP na mahigpit transportasyon na seguridad (HSTS) header ay nakita, ngunit ito ay naglalaman ng ilang mga nilalaman na hindi inaasahan (parahil kulot na mga quote), ay umaasang na ang nilalaman ay maaring i-print ng ASCII na mga karakter.
pscanalpha.stricttransportsecurity.compliance.malformed.content.refs=http\://tools.ietf.org/html/rfc6797
pscanalpha.stricttransportsecurity.compliance.malformed.content.soln=Suriin ang pagsasaayos ng kontrol na ito. Tiyakin na ang iyong web server, server ng application, load balancer, atbp ay isinaayos upang itakda ang Strict-Transport-Security na may naaangkop na nilalaman. 

pscanalpha.xpoweredbyheaderinfoleak.name=Ang Server leaks na impormasyon sa pamamagitan ng "X-Powered-By" na HTTP Response Header na mga Patlang
pscanalpha.xpoweredbyheaderinfoleak.desc=Ang server ng web / application ay pumapasok ng impormasyon sa pamamagitan ng isa o higit pang mga header ng tugon ng "X-Powered-By" HTTP. Ang pag-access sa naturang impormasyon ay maaaring mapadali ang mga mang-aatake na tumutukoy sa iba pang mga framework / component na nakasalalay sa iyong web application at ang mga kahinaan ng mga nasabing bahagi ay maaaring sumailalim.
pscanalpha.xpoweredbyheaderinfoleak.refs=http\://blogs.msdn.com/b/varunm/archive/2013/04/23/remove-unwanted-http-response-headers.aspx\nhttp\://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html
pscanalpha.xpoweredbyheaderinfoleak.soln=Siguraduhin na ang iyong wev server, aplikasyon server, taga-balanse ng load, atbp ay isinaayos upang maisagawa ang "X-Powered-By" na mga header.
pscanalpha.xpoweredbyheaderinfoleak.exploit=
pscanalpha.xpoweredbyheaderinfoleak.extrainfo=
pscanalpha.xpoweredbyheaderinfoleak.otherinfo.msg=Ang mga sumusunod na X-Powered-By na mga header ay natagpuan din\:\n

pscanalpha.contentsecuritypolicymissing.name=Ang Content Security Policy (CSP) na header ay hindi naitakda
pscanalpha.contentsecuritypolicymissing.desc=Ang Patakaran sa Seguridad sa Nilalaman (CSP) ay isang idinagdag na layer ng seguridad na tumutulong upang matuklasan at palambutin ang ilang mga uri ng pag-atake, kabilang ang Cross Site Scripting (XSS) at pag-atake ng iniksyon ng data. Ang mga pag-atake na ito ay ginagamit para sa lahat ng bagay mula sa pagnanakaw ng data patungo sa site defacement o pamamahagi ng malware. Ang CSP ay nagbibigay ng isang hanay ng mga karaniwang header ng HTTP na nagpapahintulot sa mga may-ari ng website na magpahayag ng mga naaprubahang pinagkukunan ng nilalaman na dapat na pahintulutang mag-load ang mga browser sa pag-load sa mga pahinang iyon - Mga sakop na uri ay JavaScript, CSS, mga frame ng HTML, mga font, mga imahe at mga naipikit na bagay tulad ng Java applet, ActiveX, audio at video file.
pscanalpha.contentsecuritypolicymissing.refs=https\://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy\nhttps\://www.owasp.org/index.php/Content_Security_Policy\nhttp\://www.w3.org/TR/CSP/\nhttp\://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html\nhttp\://www.html5rocks.com/en/tutorials/security/content-security-policy/\nhttp\://caniuse.com/\#feat\=contentsecuritypolicy\nhttp\://content-security-policy.com/
pscanalpha.contentsecuritypolicymissing.soln=Tiyakin na ang iyong web server, aplikasyon server, taga balanse ng load, atbp. ay isinaayos sa natakda na Nilalaman-Seguridad-Policy na header, para makamit ang optimal browser na suporta\: "Nilalaman-Seguridad-Policy" para sa Chrome 25+, Firefox 25+ at Safari 7+, "X-Nilalaman-Seguridad-Policy" para sa Firefox 4.0+ at Internet Explorer 10+, at "X-WebKit-CSP" para sa Chrome 14+ at Safari 6+.
pscanalpha.contentsecuritypolicymissing.exploit=
pscanalpha.contentsecuritypolicymissing.extrainfo=
pscanalpha.contentsecuritypolicymissing.ro.name=Ang Nilalaman ng seguridad policy (CSP) Report-Lang na header ay natagpuan
pscanalpha.contentsecuritypolicymissing.ro.desc=Ang tugon ay naglalaman ng isang header ng Nilalaman-Seguridad-Patakaran-Ulat-ng Nilalaman, maaaring ito ay nagpapahiwatig ng isang pagpapatupad sa trabaho na nasa pag-unlad, o isang pangangasiwa sa pagtataguyod ng pre-Prod to Prod, atbp.\n\nAng Patakaran sa Seguridad sa Nilalaman (CSP) ay isang idinagdag na layer ng seguridad na tumutulong upang matuklasan at palambutin ang ilang mga uri ng pag-atake, kabilang ang Cross Site Scripting (XSS) at pag-atake ng iniksyon ng data. Ang mga pag-atake na ito ay ginagamit para sa lahat ng bagay mula sa pagnanakaw ng data patungo sa site defacement o pamamahagi ng malware. Ang CSP ay nagbibigay ng isang hanay ng mga karaniwang header ng HTTP na nagpapahintulot sa mga may-ari ng website na magpahayag ng mga naaprubahang pinagkukunan ng nilalaman na dapat na pahintulutang mag-load ang mga browser sa pag-load sa mga pahinang iyon - Mga sakop na uri ay JavaScript, CSS, mga frame ng HTML, mga font, mga imahe at mga naipikit na bagay tulad ng Java applet, ActiveX, audio at video file.
pscanalpha.contentsecuritypolicymissing.ro.refs=https\://www.w3.org/TR/CSP2/\nhttps\://w3c.github.io/webappsec-csp/\nhttp\://caniuse.com/\#feat\=contentsecuritypolicy\nhttp\://content-security-policy.com/

pscanalpha.xbackendserver.name=Ang X-Backend-Server na header impormasyon leak
pscanalpha.xbackendserver.desc=Ang server ay binubuwag ang impormasyon na tumutukoy sa mga backend system (tulad ng mga hostname o mga IP address). Gamit ang impormasyong ito, ang isang magsasalakay ay maaaring mag-atake sa ibang mga sistema o mas direkta / mahusay na pag-atake sa mga system na iyon.
pscanalpha.xbackendserver.refs=
pscanalpha.xbackendserver.soln=Siguraduhin na ang iyong wev server, aplikasyon server, taga-balanse ng load, atbp. ay isinaayos upang maisagawa ang X-Backend-Server na mga header.
pscanalpha.xbackendserver.exploit=
pscanalpha.xbackendserver.extrainfo=

pscanalpha.insecurecomponent.name=Ang Insecure na component
pscanalpha.insecurecomponent.desc=Batay sa passive na pagsusuri ng sagot, hindi ligtas na component {0} {1} ay lumitaw na ginagamit. Ang pinakamataas na nabanggit na CVSS rating para sa produkto ng bersyon ay {2}.\nSa kabuuan, {3} ang mga kahinaan ay nabanggit.\nIlang linux na mga distribusyon tulad ng Red Hat ay tungkulin na magsanay sa pagpanatili sa lumang bersyon na mga numero kapag ang seguridad ay inayos ang "backported".\nMaga kasong ito ay kilala bilang "Maling mga positibo", ngunit dapat mano-manong pag-verified.  
pscanalpha.insecurecomponent.refs={0}
pscanalpha.insecurecomponent.soln=Mag-upgrade mula {0} {1} sa pinakabagong bersyon ng matatag ng produkto.\nGamitin ang isang package manager at package sa pamamahala ng mga policy at mga pamamaraan upang pmahalaan ang naka-install na mga bersyon sa software na mga packages.

pscanalpha.bigredirectsscanner.name=Ang malaking redirect na natukoy (Potensyal sensitibong impormasyon na leak)
pscanalpha.bigredirectsscanner.desc=Ang server ay tumugon na may redirect na tila nagbibigay ng isang malaking tugon. Ito ay maaring nagpahiwatig na bagama't ang server ay nagpadala ng redirect ito din ang sagot na may katawan na nilalaman (na may maaring magsama ng maselang mga detalye, PII, atbp.).
pscanalpha.bigredirectsscanner.refs=
pscanalpha.bigredirectsscanner.soln=Tiyakin na walang sensitibong impormasyon ay naleak gamit ang mga sagot. Ang redirect na mga sagot ay dapat magkaroon ng halos walang laman.
pscanalpha.bigredirectsscanner.extrainfo=Ang lokasyon header URI na haba\: {0} [{1}].\nHinulaan sa laki ng tugon\: {2}.\nHaba ng katawan ng tugon\: {3}.


pscanalpha.storabilitycacheability.name=Ang nilalaman ng Cacheability

pscanalpha.nonstorable.name=Ang hindi-imbakan na nilalaman
pscanalpha.nonstorable.desc=Ang tugon ng mga nilalaman ay hindi maiponan ng caching na mga komponent kagaya ng proxy na mga server. Kung ang tugon ay hindi naglalaman ng sensitibo, personal o gumagamit-tiyak na impormasyon. maaring makinabang mula sa pag-imbak at pag-cache para bumuti ang pagsasagawa.
pscanalpha.nonstorable.refs=https\://tools.ietf.org/html/rfc7234\nhttps\://tools.ietf.org/html/rfc7231\nhttp\://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (obsoleted by rfc7234)
pscanalpha.nonstorable.soln=Ang nilalaman ay maaring markahan ng storable sa pamamagitan ng pagtiyak na ang sumusunod na mga kondisyon ay nasisiyahan\: Ang pamamaraan sa kahilingan ay dapat maunawaan sa pamamagitan ng cache at kahulugan ng pagiging cacheable ("MAKUHA", "HEAD"m at "POST" ay kasalukuyang nilinaw bilang cacheable)\nAng tugon na status code ay dapat nating maunawaan ang cache (isa sa 1XX, 2XX, 3XX, 4XX, or 5XX na tugon na mga class ay naunawaan ng lahat)\nAng "walang-store" na cache na direktiba ay dapat makita sa kahilingan o tugon na header na mga patlang\nPara sa caching sa pamamagitan ng "naibahagi" na mga cache na tulad ng "proxy" na mga cache, ang "Pagpapatunay" na header na patlang ay dapat makita sa kahilingan, maliban sa tugon na explicitly pumapayag nito (sa paggamit sa isa sa "dapat-revalidate", "publiko", o "s-maxage" Cache-Control na tugon ng mga direktiba)\nSaka sa mga kondisyon sa itaas, kahit isa sa mga sumusunod na mga kondisyon ay dapat din na makuntento sa tugon\:\nDapat ito ay naglalaman ng "Expires" na header sa patlang\nDapat ito ay naglalaman ng "max-age" na tugon na direktiba\nPara sa "ibinahagi" na mga cache tulad ng "proxy" na mga cache, ay dapat rin na naglalaman ng "s-maxage" na tugon na direktiba\nDapat ito ay naglalaman ng "Cache Control na extension" na nagpapahintulot na ma-cache\nIto ay dapat merong status code na naka-define bilang cacheable sa pamamagitan ng default (200, 203, 204, 206, 300, 301, 404, 405, 410, 414, 501).   
pscanalpha.nonstorable.extrainfo={0}

pscanalpha.storablenoncacheable.name=Ang Storable ngunit Hindi-Cacheable na nilalaman
pscanalpha.storablenoncacheable.desc=Ang tugon na mga nilalaman ay storable sa pamamagitan ng caching na mga komponent tulad ng proxy na mga server, ngunit ay hindi makuhang direkta mula sa cache, nang hindi ma-validate ang tugon na upstream, bilang tugon sa gayong mga kahilingan mula sa ibang mga gumagamit. 
pscanalpha.storablenoncacheable.refs=https\://tools.ietf.org/html/rfc7234\nhttps\://tools.ietf.org/html/rfc7231\nhttp\://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (obsoleted by rfc7234)
pscanalpha.storablenoncacheable.soln=
pscanalpha.storablenoncacheable.extrainfo={0}}

pscanalpha.storablecacheable.name=Ang Storable and Cacheable na nilalaman
pscanalpha.storablecacheable.desc=Ang mga nilalaman ng sagot ay maaaring maimbak ng mga sangkap ng pag-cache tulad ng mga server ng proxy, at maaaring makuha nang direkta mula sa cache, sa halip na mula sa pinagmulan ng server ng mga server ng caching, bilang tugon sa mga katulad na kahilingan mula sa iba pang mga gumagamit. Kung sensitibo ang data ng tugon, personal o user-specific, maaaring magresulta ito sa sensitibong impormasyon na na-leak. Sa ilang mga kaso, ito ay maaaring kahit na magreresulta sa isang gumagamit na nakakakuha ng kumpletong kontrol ng session ng ibang user, depende sa pagsasaayos ng mga component ng caching na ginagamit sa kanilang kapaligiran. Ito ang pangunahing isyu na kung saan ang "shared" na mga server ng caching tulad ng "proxy" na mga cache ay naka-configure sa lokal na network. Ang configuration na ito ay kadalasang matatagpuan sa mga corporate o pang-edukasyon na kapaligiran, halimbawa.
pscanalpha.storablecacheable.refs=https\://tools.ietf.org/html/rfc7234\nhttps\://tools.ietf.org/html/rfc7231\nhttp\://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (obsoleted by rfc7234)
pscanalpha.storablecacheable.soln=Patunayan na ang kasagutan ay hindi naglalaman ng sensitibo, personal, user-specific na impormasyon. Kung gagawin nito, isaalang-alang ang paggamit sa sumusunod na HTTP tugon na mga header, upang malimitahan, o mapigilan ang nilalaman na imbakan at makuha mula sa cache ng isa pang taga-gamit\:\nCache-Control\: wala-cache, wala-store, dapat-revalidate, pribado\nPragma\: wala-cache\nPragma\: no-cache\nAng pag-aayos na ito ay nagtuturo sa parehong HTTP 1.0 at HTTP 1.1compliant caching na mga server upang hindi maimbakan ang kasagutan, at upang hindi makuha ang kasagutan (walang pagpapatunay) mula  sa cache, bilang tugon sa isang katulad na tugon. 
pscanalpha.storablecacheable.extrainfo={0}
pscanalpha.storablecacheable.otherinfo.liberallifetimeheuristic=Ang kawalan ng isang tahasang pag-tutukoy na direktiba sa pag-huli ng buhay na kasagutan, \nisang liberal na buhay na heuristic ng 1 taon ay ipinapalagay. ito ay pinahihintulutan rfc7234.
pscanalpha.storablecacheable.otherinfo.staleretrievenotblocked=Ang kasagutan ay wala, at ang mga kasagutan ay hindi naka-ayos upang ma-validate o ma-harang, gamit ang 'must-revalidate', 'proxy-revalidate', 'maxage', o 'max-age' na sagot 'Cache-Control 'mga direktiba.

pscanalpha.retrievedfromcache.name=Nakuha galing sa cache
pscanalpha.retrievedfromcache.desc=Ang nilalaman na nakuha mula sa ibinahaging cache. Kung sensitibo ang datos na kasagutan, sa personal o user-specific, maaaring magresulta ito sa sensitibong impormasyon na na-lumabas. Sa ganitong kaso, ito ay maaaring magreresulta sa isang gumagamit na nakakakuha ng kumpletong kontrol ng session ng ibang taga-gamit, depende sa ayos ng mga bumubuo ng caching na ginagamit sa kanilang kapaligiran. Ito ay ang pangunahing isyu na kung saan ang mga cache ng mga server tulad ng "proxy" ay naka-ayos sa lokal na network. Ang configuration na ito ay kadalasang makikita sa mga corporate o pang-edukasyon na kapaligiran, halimbawa. 
pscanalpha.retrievedfromcache.refs=https\://tools.ietf.org/html/rfc7234\nhttps\://tools.ietf.org/html/rfc7231\nhttp\://www.w3.org/Protocols/rfc2616/rfc2616-sec13.html (obsoleted by rfc7234)
pscanalpha.retrievedfromcache.soln=Patunayan na ang kasagutan ay hindi naglalaman ng sensitibo, personal o user-specific na impormasyon. Kung gagawin nito, isaalang-alang ang paggamit ng mga sumusunod na mga header sa kasagutan ng HTTP, upang malimitahan, o mapigilan ang nilalaman na iimbak at makuha mula sa cache ng isa pang taga-gamit\:\nCache-Control\: no-cache, no-store, must-revalidate, private\nPragma\: no-cache\nExpires\: 0\nAng pag-aayos na ito ay nagtuturo sa parehong HTTP 1.0 at HTTP 1.1 compliant caching server upang hindi maimbak ang kasagutan, at upang hindi makuha ang kasagutan (walang pagpapatunay) mula sa cache, bilang kasagutan sa isang katulad na kahilingan.
pscanalpha.retrievedfromcache.extrainfo={0}
pscanalpha.retrievedfromcache.extrainfo.http11ageheader=Ang presensyang header ng 'Edad' ay nagtuturo na ang isang HTTP/1.1 pagsang-ayon \nsa caching server ay ginagamit.

pscanalpha.imagelocationscanner.name=Ang lokasyon ng imahe at pagiging pribado ng scanner
pscanalpha.imagelocationscanner.alerttitle=Ang lokasyon ng imahe na malantad o sa pribadong datos
pscanalpha.imagelocationscanner.alertDetailPrefix=Ang imaheng ito ay naglalagay ng isang lokasyon o paglabas ng datos na nauugnay sa pagiging pribado\: 
pscanalpha.imagelocationscanner.desc=Ang larawan ay nakita na naglalaman ng naka-embed na impormasyon sa lokasyon, tulad ng mga coordinate sa GPS, o ibang pagkakalantad sa pagiging pribado, tulad ng serial na bilang ng kamera. Depende sa konteksto ng larawan sa website, ang impormasyong ito ay maaaring maghayag ng mga pribadong paliwanag ng mga gumagamit ng isang lugar.  Halimbawa, ang isang lugar na nagpapahintulot sa mga taga-gamit na mag-upload ng mga larawan sa profile na kinuha sa bahay ay maaaring iwaksi ang kinaroroonan ng bahay.  
pscanalpha.imagelocationscanner.refs=https\://www.veggiespam.com/ils/
pscanalpha.imagelocationscanner.soln=Bago payagan ang mga larawan na maimbak sa server at/o inililipat sa browser, alisin ang naka-embed na impormasyon ng lokasyon mula sa larawan. Ito ay nangangahulugang pag-tatangal ng lahat ng datos ng Exif o lamang ng bahagi ng GPS. Ang iba pang datos, tulad ng mga serial na bilang, ay dapat ding tanggalin.

pscanalpha.usernameidor.name=Ang username ng hash ay natagpuan
pscanalpha.usernameidor.desc=Ang username ng hash ({0}) ay natagpuan ang kasagutan. maaari itong magpahiwatig na ang application ay napapailalim sa isang Insecure Direct Object Reference (IDOR) kahinaan. Kinakailangan ang manu-manong pagsusuri upang makita kung ang pagtuklas na ito ay maaaring abusuhin.
pscanalpha.usernameidor.otherinfo=Ang hash ay isang {0}, na may halaga\: {1} 
pscanalpha.usernameidor.soln=Gamitin ang bawat taga-gamit o hindi direktang sanggunian ng session (lgumawa ng isang pansamantalang pagma-map sa oras ng paggamit). O kaya, tiyakin na ang bawat paggamit ng direktang sanggunian sa bagay ay nakatali sa pag-susuri ng awtorisasyon upang matiyak na awtorisado ang gumagamit para sa hiniling na bagay. 
pscanalpha.usernameidor.refs=https\://www.owasp.org/index.php/Top_10_2013-A4-Insecure_Direct_Object_References\nhttps\://www.owasp.org/index.php/Testing_for_Insecure_Direct_Object_References_(OTG-AUTHZ-004)

pscanalpha.xaspnetversioncanner.name=X-AspNet-Version Response Header Scanner
pscanalpha.xaspnetversioncanner.desc=Ang impormasyon ng server ay na-ilabas sa pamamagitan ng "X-AspNet-Version"/"X-AspNetMvc-Version" HTTP response header field(s).
pscanalpha.xaspnetversioncanner.soln=I-saayos ang server upang hindi maibabalik ang mga header na iyon.
pscanalpha.xaspnetversioncanner.extrainfo=Pweding gamitin ng isang magsasalakay ang impormasyong ito upang panandaliang kilalanin ang mga kahinaan.
pscanalpha.xaspnetversioncanner.refs=https\://www.troyhunt.com/shhh-dont-let-your-response-headers/\nhttps\://blogs.msdn.microsoft.com/varunm/2013/04/23/remove-unwanted-http-response-headers/

pscanalpha.xchromeloggerdata.name=X-ChromeLogger-Data (XCOLD) Ang impormasyon ng header ay nailabas
pscanalpha.xchromeloggerdata.desc=Ang server ay naglalabas ng kaalaman sa pamamagitan ng header ng kasagutan ng X-ChromeLogger-Data (o X-ChromePhp-Data). Ang nilalaman ng naturang mga header ay maaaring ipasadya ng developer, subalit ito ay hindi bihira upang makita\: ang mga lokasyon ng server file system, vhost declarations, atbp.
pscanalpha.xchromeloggerdata.refs=https\://craig.is/writing/chrome-logger
pscanalpha.xchromeloggerdata.soln=Huwag paganahin ang pag-takbo na ito sa Produksyon kung kailan pweding lumabas ang impormasyon na pweding magamit ng isang pag-atake. Bilang kapalit siguraduhin na ang paggamit ng pag-takbo ay nakatali sa isang malakas na pag-susuri ng pagpapahintulot at magagamit lamang sa mga taga-pangasiwa o mga tauhan ng sumusuporta para sa mga layunin sa pag-troubleshoot hindi pangkalahatang mga gumagamit.
pscanalpha.xchromeloggerdata.otherinfo.msg=Ang sumusunod ay nag-rerepresenta sa isang pagtatangka ng base64 decode ang halaga\:
pscanalpha.xchromeloggerdata.otherinfo.error=Ang halaga ng header ay hindi pwedi sa base64 decoded\:

pscanalpha.xdebugtoken.name=Ang inpormasyon ng X-Debug-Token ay nailabas
pscanalpha.xdebugtoken.desc=Ang kasagutan ay naglalaman ng header ng X-Debug-Token o X-Debug-Token-Link. Ito ay nagpapahiwatig na ang Profiler ng Symfony ay pweding gamitin at pagsisiwalat ng sensitibong datos.
pscanalpha.xdebugtoken.otherinfo=Sa pamamagitan ng pag-daan ng isang URL sa form http\://target_host/_profiler/token_value (i.e.\: http\://example.com/_profiler_/123ab4), ikaw ay maaaring makakuha ng daan sa profiler at karagdagang nailabas na impormasyon.
pscanalpha.xdebugtoken.refs=https\://symfony.com/doc/current/cookbook/profiler/profiling_data.html\nhttps\://symfony.com/blog/new-in-symfony-2-4-quicker-access-to-the-profiler-when-working-on-an-api
pscanalpha.xdebugtoken.soln=Limitado ang daan sa Profiler ng Symfony, anuman sa pamamagitan ng pagpapatunay/pahintulot o paglilimita ng pagsasama ng header sa mga partikular na kliyente (by IP etc).

